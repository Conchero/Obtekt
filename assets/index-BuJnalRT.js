function fT(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const o=Object.getOwnPropertyDescriptor(r,s);o&&Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}})();function Xg(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function Yg(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var e=n.default;if(typeof e=="function"){var t=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(r){var s=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return n[r]}})}),t}var jm={exports:{}},Oi={},qm={exports:{}},Le={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var qv;function hT(){if(qv)return Le;qv=1;var n=Symbol.for("react.element"),e=Symbol.for("react.portal"),t=Symbol.for("react.fragment"),r=Symbol.for("react.strict_mode"),s=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),a=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),f=Symbol.iterator;function m(L){return L===null||typeof L!="object"?null:(L=f&&L[f]||L["@@iterator"],typeof L=="function"?L:null)}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y=Object.assign,v={};function w(L,H,se){this.props=L,this.context=H,this.refs=v,this.updater=se||g}w.prototype.isReactComponent={},w.prototype.setState=function(L,H){if(typeof L!="object"&&typeof L!="function"&&L!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,L,H,"setState")},w.prototype.forceUpdate=function(L){this.updater.enqueueForceUpdate(this,L,"forceUpdate")};function b(){}b.prototype=w.prototype;function $(L,H,se){this.props=L,this.context=H,this.refs=v,this.updater=se||g}var I=$.prototype=new b;I.constructor=$,y(I,w.prototype),I.isPureReactComponent=!0;var k=Array.isArray,T=Object.prototype.hasOwnProperty,O={current:null},A={key:!0,ref:!0,__self:!0,__source:!0};function V(L,H,se){var ae,ie={},ue=null,he=null;if(H!=null)for(ae in H.ref!==void 0&&(he=H.ref),H.key!==void 0&&(ue=""+H.key),H)T.call(H,ae)&&!A.hasOwnProperty(ae)&&(ie[ae]=H[ae]);var me=arguments.length-2;if(me===1)ie.children=se;else if(1<me){for(var xe=Array(me),Ee=0;Ee<me;Ee++)xe[Ee]=arguments[Ee+2];ie.children=xe}if(L&&L.defaultProps)for(ae in me=L.defaultProps,me)ie[ae]===void 0&&(ie[ae]=me[ae]);return{$$typeof:n,type:L,key:ue,ref:he,props:ie,_owner:O.current}}function P(L,H){return{$$typeof:n,type:L.type,key:H,ref:L.ref,props:L.props,_owner:L._owner}}function F(L){return typeof L=="object"&&L!==null&&L.$$typeof===n}function E(L){var H={"=":"=0",":":"=2"};return"$"+L.replace(/[=:]/g,function(se){return H[se]})}var W=/\/+/g;function j(L,H){return typeof L=="object"&&L!==null&&L.key!=null?E(""+L.key):H.toString(36)}function Y(L,H,se,ae,ie){var ue=typeof L;(ue==="undefined"||ue==="boolean")&&(L=null);var he=!1;if(L===null)he=!0;else switch(ue){case"string":case"number":he=!0;break;case"object":switch(L.$$typeof){case n:case e:he=!0}}if(he)return he=L,ie=ie(he),L=ae===""?"."+j(he,0):ae,k(ie)?(se="",L!=null&&(se=L.replace(W,"$&/")+"/"),Y(ie,H,se,"",function(Ee){return Ee})):ie!=null&&(F(ie)&&(ie=P(ie,se+(!ie.key||he&&he.key===ie.key?"":(""+ie.key).replace(W,"$&/")+"/")+L)),H.push(ie)),1;if(he=0,ae=ae===""?".":ae+":",k(L))for(var me=0;me<L.length;me++){ue=L[me];var xe=ae+j(ue,me);he+=Y(ue,H,se,xe,ie)}else if(xe=m(L),typeof xe=="function")for(L=xe.call(L),me=0;!(ue=L.next()).done;)ue=ue.value,xe=ae+j(ue,me++),he+=Y(ue,H,se,xe,ie);else if(ue==="object")throw H=String(L),Error("Objects are not valid as a React child (found: "+(H==="[object Object]"?"object with keys {"+Object.keys(L).join(", ")+"}":H)+"). If you meant to render a collection of children, use an array instead.");return he}function Q(L,H,se){if(L==null)return L;var ae=[],ie=0;return Y(L,ae,"","",function(ue){return H.call(se,ue,ie++)}),ae}function Z(L){if(L._status===-1){var H=L._result;H=H(),H.then(function(se){(L._status===0||L._status===-1)&&(L._status=1,L._result=se)},function(se){(L._status===0||L._status===-1)&&(L._status=2,L._result=se)}),L._status===-1&&(L._status=0,L._result=H)}if(L._status===1)return L._result.default;throw L._result}var ne={current:null},U={transition:null},K={ReactCurrentDispatcher:ne,ReactCurrentBatchConfig:U,ReactCurrentOwner:O};function X(){throw Error("act(...) is not supported in production builds of React.")}return Le.Children={map:Q,forEach:function(L,H,se){Q(L,function(){H.apply(this,arguments)},se)},count:function(L){var H=0;return Q(L,function(){H++}),H},toArray:function(L){return Q(L,function(H){return H})||[]},only:function(L){if(!F(L))throw Error("React.Children.only expected to receive a single React element child.");return L}},Le.Component=w,Le.Fragment=t,Le.Profiler=s,Le.PureComponent=$,Le.StrictMode=r,Le.Suspense=u,Le.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=K,Le.act=X,Le.cloneElement=function(L,H,se){if(L==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+L+".");var ae=y({},L.props),ie=L.key,ue=L.ref,he=L._owner;if(H!=null){if(H.ref!==void 0&&(ue=H.ref,he=O.current),H.key!==void 0&&(ie=""+H.key),L.type&&L.type.defaultProps)var me=L.type.defaultProps;for(xe in H)T.call(H,xe)&&!A.hasOwnProperty(xe)&&(ae[xe]=H[xe]===void 0&&me!==void 0?me[xe]:H[xe])}var xe=arguments.length-2;if(xe===1)ae.children=se;else if(1<xe){me=Array(xe);for(var Ee=0;Ee<xe;Ee++)me[Ee]=arguments[Ee+2];ae.children=me}return{$$typeof:n,type:L.type,key:ie,ref:ue,props:ae,_owner:he}},Le.createContext=function(L){return L={$$typeof:a,_currentValue:L,_currentValue2:L,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},L.Provider={$$typeof:o,_context:L},L.Consumer=L},Le.createElement=V,Le.createFactory=function(L){var H=V.bind(null,L);return H.type=L,H},Le.createRef=function(){return{current:null}},Le.forwardRef=function(L){return{$$typeof:l,render:L}},Le.isValidElement=F,Le.lazy=function(L){return{$$typeof:p,_payload:{_status:-1,_result:L},_init:Z}},Le.memo=function(L,H){return{$$typeof:d,type:L,compare:H===void 0?null:H}},Le.startTransition=function(L){var H=U.transition;U.transition={};try{L()}finally{U.transition=H}},Le.unstable_act=X,Le.useCallback=function(L,H){return ne.current.useCallback(L,H)},Le.useContext=function(L){return ne.current.useContext(L)},Le.useDebugValue=function(){},Le.useDeferredValue=function(L){return ne.current.useDeferredValue(L)},Le.useEffect=function(L,H){return ne.current.useEffect(L,H)},Le.useId=function(){return ne.current.useId()},Le.useImperativeHandle=function(L,H,se){return ne.current.useImperativeHandle(L,H,se)},Le.useInsertionEffect=function(L,H){return ne.current.useInsertionEffect(L,H)},Le.useLayoutEffect=function(L,H){return ne.current.useLayoutEffect(L,H)},Le.useMemo=function(L,H){return ne.current.useMemo(L,H)},Le.useReducer=function(L,H,se){return ne.current.useReducer(L,H,se)},Le.useRef=function(L){return ne.current.useRef(L)},Le.useState=function(L){return ne.current.useState(L)},Le.useSyncExternalStore=function(L,H,se){return ne.current.useSyncExternalStore(L,H,se)},Le.useTransition=function(){return ne.current.useTransition()},Le.version="18.3.1",Le}var Kv;function Od(){return Kv||(Kv=1,qm.exports=hT()),qm.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Xv;function mT(){if(Xv)return Oi;Xv=1;var n=Od(),e=Symbol.for("react.element"),t=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,s=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function a(l,u,d){var p,f={},m=null,g=null;d!==void 0&&(m=""+d),u.key!==void 0&&(m=""+u.key),u.ref!==void 0&&(g=u.ref);for(p in u)r.call(u,p)&&!o.hasOwnProperty(p)&&(f[p]=u[p]);if(l&&l.defaultProps)for(p in u=l.defaultProps,u)f[p]===void 0&&(f[p]=u[p]);return{$$typeof:e,type:l,key:m,ref:g,props:f,_owner:s.current}}return Oi.Fragment=t,Oi.jsx=a,Oi.jsxs=a,Oi}var Yv;function gT(){return Yv||(Yv=1,jm.exports=mT()),jm.exports}var ge=gT(),Tt=Od();const Co=Xg(Tt);var Bc={},Km={exports:{}},Cn={},Xm={exports:{}},Ym={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Qv;function yT(){return Qv||(Qv=1,function(n){function e(U,K){var X=U.length;U.push(K);e:for(;0<X;){var L=X-1>>>1,H=U[L];if(0<s(H,K))U[L]=K,U[X]=H,X=L;else break e}}function t(U){return U.length===0?null:U[0]}function r(U){if(U.length===0)return null;var K=U[0],X=U.pop();if(X!==K){U[0]=X;e:for(var L=0,H=U.length,se=H>>>1;L<se;){var ae=2*(L+1)-1,ie=U[ae],ue=ae+1,he=U[ue];if(0>s(ie,X))ue<H&&0>s(he,ie)?(U[L]=he,U[ue]=X,L=ue):(U[L]=ie,U[ae]=X,L=ae);else if(ue<H&&0>s(he,X))U[L]=he,U[ue]=X,L=ue;else break e}}return K}function s(U,K){var X=U.sortIndex-K.sortIndex;return X!==0?X:U.id-K.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;n.unstable_now=function(){return o.now()}}else{var a=Date,l=a.now();n.unstable_now=function(){return a.now()-l}}var u=[],d=[],p=1,f=null,m=3,g=!1,y=!1,v=!1,w=typeof setTimeout=="function"?setTimeout:null,b=typeof clearTimeout=="function"?clearTimeout:null,$=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function I(U){for(var K=t(d);K!==null;){if(K.callback===null)r(d);else if(K.startTime<=U)r(d),K.sortIndex=K.expirationTime,e(u,K);else break;K=t(d)}}function k(U){if(v=!1,I(U),!y)if(t(u)!==null)y=!0,Z(T);else{var K=t(d);K!==null&&ne(k,K.startTime-U)}}function T(U,K){y=!1,v&&(v=!1,b(V),V=-1),g=!0;var X=m;try{for(I(K),f=t(u);f!==null&&(!(f.expirationTime>K)||U&&!E());){var L=f.callback;if(typeof L=="function"){f.callback=null,m=f.priorityLevel;var H=L(f.expirationTime<=K);K=n.unstable_now(),typeof H=="function"?f.callback=H:f===t(u)&&r(u),I(K)}else r(u);f=t(u)}if(f!==null)var se=!0;else{var ae=t(d);ae!==null&&ne(k,ae.startTime-K),se=!1}return se}finally{f=null,m=X,g=!1}}var O=!1,A=null,V=-1,P=5,F=-1;function E(){return!(n.unstable_now()-F<P)}function W(){if(A!==null){var U=n.unstable_now();F=U;var K=!0;try{K=A(!0,U)}finally{K?j():(O=!1,A=null)}}else O=!1}var j;if(typeof $=="function")j=function(){$(W)};else if(typeof MessageChannel<"u"){var Y=new MessageChannel,Q=Y.port2;Y.port1.onmessage=W,j=function(){Q.postMessage(null)}}else j=function(){w(W,0)};function Z(U){A=U,O||(O=!0,j())}function ne(U,K){V=w(function(){U(n.unstable_now())},K)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(U){U.callback=null},n.unstable_continueExecution=function(){y||g||(y=!0,Z(T))},n.unstable_forceFrameRate=function(U){0>U||125<U?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<U?Math.floor(1e3/U):5},n.unstable_getCurrentPriorityLevel=function(){return m},n.unstable_getFirstCallbackNode=function(){return t(u)},n.unstable_next=function(U){switch(m){case 1:case 2:case 3:var K=3;break;default:K=m}var X=m;m=K;try{return U()}finally{m=X}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(U,K){switch(U){case 1:case 2:case 3:case 4:case 5:break;default:U=3}var X=m;m=U;try{return K()}finally{m=X}},n.unstable_scheduleCallback=function(U,K,X){var L=n.unstable_now();switch(typeof X=="object"&&X!==null?(X=X.delay,X=typeof X=="number"&&0<X?L+X:L):X=L,U){case 1:var H=-1;break;case 2:H=250;break;case 5:H=1073741823;break;case 4:H=1e4;break;default:H=5e3}return H=X+H,U={id:p++,callback:K,priorityLevel:U,startTime:X,expirationTime:H,sortIndex:-1},X>L?(U.sortIndex=X,e(d,U),t(u)===null&&U===t(d)&&(v?(b(V),V=-1):v=!0,ne(k,X-L))):(U.sortIndex=H,e(u,U),y||g||(y=!0,Z(T))),U},n.unstable_shouldYield=E,n.unstable_wrapCallback=function(U){var K=m;return function(){var X=m;m=K;try{return U.apply(this,arguments)}finally{m=X}}}}(Ym)),Ym}var Zv;function xT(){return Zv||(Zv=1,Xm.exports=yT()),Xm.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Jv;function vT(){if(Jv)return Cn;Jv=1;var n=Od(),e=xT();function t(i){for(var c="https://reactjs.org/docs/error-decoder.html?invariant="+i,h=1;h<arguments.length;h++)c+="&args[]="+encodeURIComponent(arguments[h]);return"Minified React error #"+i+"; visit "+c+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var r=new Set,s={};function o(i,c){a(i,c),a(i+"Capture",c)}function a(i,c){for(s[i]=c,i=0;i<c.length;i++)r.add(c[i])}var l=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),u=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(i){return u.call(f,i)?!0:u.call(p,i)?!1:d.test(i)?f[i]=!0:(p[i]=!0,!1)}function g(i,c,h,x){if(h!==null&&h.type===0)return!1;switch(typeof c){case"function":case"symbol":return!0;case"boolean":return x?!1:h!==null?!h.acceptsBooleans:(i=i.toLowerCase().slice(0,5),i!=="data-"&&i!=="aria-");default:return!1}}function y(i,c,h,x){if(c===null||typeof c>"u"||g(i,c,h,x))return!0;if(x)return!1;if(h!==null)switch(h.type){case 3:return!c;case 4:return c===!1;case 5:return isNaN(c);case 6:return isNaN(c)||1>c}return!1}function v(i,c,h,x,S,C,R){this.acceptsBooleans=c===2||c===3||c===4,this.attributeName=x,this.attributeNamespace=S,this.mustUseProperty=h,this.propertyName=i,this.type=c,this.sanitizeURL=C,this.removeEmptyString=R}var w={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(i){w[i]=new v(i,0,!1,i,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(i){var c=i[0];w[c]=new v(c,1,!1,i[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(i){w[i]=new v(i,2,!1,i.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(i){w[i]=new v(i,2,!1,i,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(i){w[i]=new v(i,3,!1,i.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(i){w[i]=new v(i,3,!0,i,null,!1,!1)}),["capture","download"].forEach(function(i){w[i]=new v(i,4,!1,i,null,!1,!1)}),["cols","rows","size","span"].forEach(function(i){w[i]=new v(i,6,!1,i,null,!1,!1)}),["rowSpan","start"].forEach(function(i){w[i]=new v(i,5,!1,i.toLowerCase(),null,!1,!1)});var b=/[\-:]([a-z])/g;function $(i){return i[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(i){var c=i.replace(b,$);w[c]=new v(c,1,!1,i,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(i){var c=i.replace(b,$);w[c]=new v(c,1,!1,i,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(i){var c=i.replace(b,$);w[c]=new v(c,1,!1,i,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(i){w[i]=new v(i,1,!1,i.toLowerCase(),null,!1,!1)}),w.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(i){w[i]=new v(i,1,!1,i.toLowerCase(),null,!0,!0)});function I(i,c,h,x){var S=w.hasOwnProperty(c)?w[c]:null;(S!==null?S.type!==0:x||!(2<c.length)||c[0]!=="o"&&c[0]!=="O"||c[1]!=="n"&&c[1]!=="N")&&(y(c,h,S,x)&&(h=null),x||S===null?m(c)&&(h===null?i.removeAttribute(c):i.setAttribute(c,""+h)):S.mustUseProperty?i[S.propertyName]=h===null?S.type===3?!1:"":h:(c=S.attributeName,x=S.attributeNamespace,h===null?i.removeAttribute(c):(S=S.type,h=S===3||S===4&&h===!0?"":""+h,x?i.setAttributeNS(x,c,h):i.setAttribute(c,h))))}var k=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,T=Symbol.for("react.element"),O=Symbol.for("react.portal"),A=Symbol.for("react.fragment"),V=Symbol.for("react.strict_mode"),P=Symbol.for("react.profiler"),F=Symbol.for("react.provider"),E=Symbol.for("react.context"),W=Symbol.for("react.forward_ref"),j=Symbol.for("react.suspense"),Y=Symbol.for("react.suspense_list"),Q=Symbol.for("react.memo"),Z=Symbol.for("react.lazy"),ne=Symbol.for("react.offscreen"),U=Symbol.iterator;function K(i){return i===null||typeof i!="object"?null:(i=U&&i[U]||i["@@iterator"],typeof i=="function"?i:null)}var X=Object.assign,L;function H(i){if(L===void 0)try{throw Error()}catch(h){var c=h.stack.trim().match(/\n( *(at )?)/);L=c&&c[1]||""}return`
`+L+i}var se=!1;function ae(i,c){if(!i||se)return"";se=!0;var h=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(c)if(c=function(){throw Error()},Object.defineProperty(c.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(c,[])}catch(re){var x=re}Reflect.construct(i,[],c)}else{try{c.call()}catch(re){x=re}i.call(c.prototype)}else{try{throw Error()}catch(re){x=re}i()}}catch(re){if(re&&x&&typeof re.stack=="string"){for(var S=re.stack.split(`
`),C=x.stack.split(`
`),R=S.length-1,B=C.length-1;1<=R&&0<=B&&S[R]!==C[B];)B--;for(;1<=R&&0<=B;R--,B--)if(S[R]!==C[B]){if(R!==1||B!==1)do if(R--,B--,0>B||S[R]!==C[B]){var G=`
`+S[R].replace(" at new "," at ");return i.displayName&&G.includes("<anonymous>")&&(G=G.replace("<anonymous>",i.displayName)),G}while(1<=R&&0<=B);break}}}finally{se=!1,Error.prepareStackTrace=h}return(i=i?i.displayName||i.name:"")?H(i):""}function ie(i){switch(i.tag){case 5:return H(i.type);case 16:return H("Lazy");case 13:return H("Suspense");case 19:return H("SuspenseList");case 0:case 2:case 15:return i=ae(i.type,!1),i;case 11:return i=ae(i.type.render,!1),i;case 1:return i=ae(i.type,!0),i;default:return""}}function ue(i){if(i==null)return null;if(typeof i=="function")return i.displayName||i.name||null;if(typeof i=="string")return i;switch(i){case A:return"Fragment";case O:return"Portal";case P:return"Profiler";case V:return"StrictMode";case j:return"Suspense";case Y:return"SuspenseList"}if(typeof i=="object")switch(i.$$typeof){case E:return(i.displayName||"Context")+".Consumer";case F:return(i._context.displayName||"Context")+".Provider";case W:var c=i.render;return i=i.displayName,i||(i=c.displayName||c.name||"",i=i!==""?"ForwardRef("+i+")":"ForwardRef"),i;case Q:return c=i.displayName||null,c!==null?c:ue(i.type)||"Memo";case Z:c=i._payload,i=i._init;try{return ue(i(c))}catch{}}return null}function he(i){var c=i.type;switch(i.tag){case 24:return"Cache";case 9:return(c.displayName||"Context")+".Consumer";case 10:return(c._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return i=c.render,i=i.displayName||i.name||"",c.displayName||(i!==""?"ForwardRef("+i+")":"ForwardRef");case 7:return"Fragment";case 5:return c;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return ue(c);case 8:return c===V?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof c=="function")return c.displayName||c.name||null;if(typeof c=="string")return c}return null}function me(i){switch(typeof i){case"boolean":case"number":case"string":case"undefined":return i;case"object":return i;default:return""}}function xe(i){var c=i.type;return(i=i.nodeName)&&i.toLowerCase()==="input"&&(c==="checkbox"||c==="radio")}function Ee(i){var c=xe(i)?"checked":"value",h=Object.getOwnPropertyDescriptor(i.constructor.prototype,c),x=""+i[c];if(!i.hasOwnProperty(c)&&typeof h<"u"&&typeof h.get=="function"&&typeof h.set=="function"){var S=h.get,C=h.set;return Object.defineProperty(i,c,{configurable:!0,get:function(){return S.call(this)},set:function(R){x=""+R,C.call(this,R)}}),Object.defineProperty(i,c,{enumerable:h.enumerable}),{getValue:function(){return x},setValue:function(R){x=""+R},stopTracking:function(){i._valueTracker=null,delete i[c]}}}}function Ae(i){i._valueTracker||(i._valueTracker=Ee(i))}function We(i){if(!i)return!1;var c=i._valueTracker;if(!c)return!0;var h=c.getValue(),x="";return i&&(x=xe(i)?i.checked?"true":"false":i.value),i=x,i!==h?(c.setValue(i),!0):!1}function He(i){if(i=i||(typeof document<"u"?document:void 0),typeof i>"u")return null;try{return i.activeElement||i.body}catch{return i.body}}function rt(i,c){var h=c.checked;return X({},c,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:h??i._wrapperState.initialChecked})}function Xe(i,c){var h=c.defaultValue==null?"":c.defaultValue,x=c.checked!=null?c.checked:c.defaultChecked;h=me(c.value!=null?c.value:h),i._wrapperState={initialChecked:x,initialValue:h,controlled:c.type==="checkbox"||c.type==="radio"?c.checked!=null:c.value!=null}}function je(i,c){c=c.checked,c!=null&&I(i,"checked",c,!1)}function et(i,c){je(i,c);var h=me(c.value),x=c.type;if(h!=null)x==="number"?(h===0&&i.value===""||i.value!=h)&&(i.value=""+h):i.value!==""+h&&(i.value=""+h);else if(x==="submit"||x==="reset"){i.removeAttribute("value");return}c.hasOwnProperty("value")?An(i,c.type,h):c.hasOwnProperty("defaultValue")&&An(i,c.type,me(c.defaultValue)),c.checked==null&&c.defaultChecked!=null&&(i.defaultChecked=!!c.defaultChecked)}function tt(i,c,h){if(c.hasOwnProperty("value")||c.hasOwnProperty("defaultValue")){var x=c.type;if(!(x!=="submit"&&x!=="reset"||c.value!==void 0&&c.value!==null))return;c=""+i._wrapperState.initialValue,h||c===i.value||(i.value=c),i.defaultValue=c}h=i.name,h!==""&&(i.name=""),i.defaultChecked=!!i._wrapperState.initialChecked,h!==""&&(i.name=h)}function An(i,c,h){(c!=="number"||He(i.ownerDocument)!==i)&&(h==null?i.defaultValue=""+i._wrapperState.initialValue:i.defaultValue!==""+h&&(i.defaultValue=""+h))}var pt=Array.isArray;function pn(i,c,h,x){if(i=i.options,c){c={};for(var S=0;S<h.length;S++)c["$"+h[S]]=!0;for(h=0;h<i.length;h++)S=c.hasOwnProperty("$"+i[h].value),i[h].selected!==S&&(i[h].selected=S),S&&x&&(i[h].defaultSelected=!0)}else{for(h=""+me(h),c=null,S=0;S<i.length;S++){if(i[S].value===h){i[S].selected=!0,x&&(i[S].defaultSelected=!0);return}c!==null||i[S].disabled||(c=i[S])}c!==null&&(c.selected=!0)}}function Kt(i,c){if(c.dangerouslySetInnerHTML!=null)throw Error(t(91));return X({},c,{value:void 0,defaultValue:void 0,children:""+i._wrapperState.initialValue})}function Sr(i,c){var h=c.value;if(h==null){if(h=c.children,c=c.defaultValue,h!=null){if(c!=null)throw Error(t(92));if(pt(h)){if(1<h.length)throw Error(t(93));h=h[0]}c=h}c==null&&(c=""),h=c}i._wrapperState={initialValue:me(h)}}function xn(i,c){var h=me(c.value),x=me(c.defaultValue);h!=null&&(h=""+h,h!==i.value&&(i.value=h),c.defaultValue==null&&i.defaultValue!==h&&(i.defaultValue=h)),x!=null&&(i.defaultValue=""+x)}function Gn(i){var c=i.textContent;c===i._wrapperState.initialValue&&c!==""&&c!==null&&(i.value=c)}function or(i){switch(i){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Hn(i,c){return i==null||i==="http://www.w3.org/1999/xhtml"?or(c):i==="http://www.w3.org/2000/svg"&&c==="foreignObject"?"http://www.w3.org/1999/xhtml":i}var Fn,ps=function(i){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(c,h,x,S){MSApp.execUnsafeLocalFunction(function(){return i(c,h,x,S)})}:i}(function(i,c){if(i.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in i)i.innerHTML=c;else{for(Fn=Fn||document.createElement("div"),Fn.innerHTML="<svg>"+c.valueOf().toString()+"</svg>",c=Fn.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;c.firstChild;)i.appendChild(c.firstChild)}});function Br(i,c){if(c){var h=i.firstChild;if(h&&h===i.lastChild&&h.nodeType===3){h.nodeValue=c;return}}i.textContent=c}var Mr={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},nh=["Webkit","ms","Moz","O"];Object.keys(Mr).forEach(function(i){nh.forEach(function(c){c=c+i.charAt(0).toUpperCase()+i.substring(1),Mr[c]=Mr[i]})});function eo(i,c,h){return c==null||typeof c=="boolean"||c===""?"":h||typeof c!="number"||c===0||Mr.hasOwnProperty(i)&&Mr[i]?(""+c).trim():c+"px"}function _u(i,c){i=i.style;for(var h in c)if(c.hasOwnProperty(h)){var x=h.indexOf("--")===0,S=eo(h,c[h],x);h==="float"&&(h="cssFloat"),x?i.setProperty(h,S):i[h]=S}}var rh=X({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function sh(i,c){if(c){if(rh[i]&&(c.children!=null||c.dangerouslySetInnerHTML!=null))throw Error(t(137,i));if(c.dangerouslySetInnerHTML!=null){if(c.children!=null)throw Error(t(60));if(typeof c.dangerouslySetInnerHTML!="object"||!("__html"in c.dangerouslySetInnerHTML))throw Error(t(61))}if(c.style!=null&&typeof c.style!="object")throw Error(t(62))}}function oh(i,c){if(i.indexOf("-")===-1)return typeof c.is=="string";switch(i){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ah=null;function ih(i){return i=i.target||i.srcElement||window,i.correspondingUseElement&&(i=i.correspondingUseElement),i.nodeType===3?i.parentNode:i}var lh=null,qo=null,Ko=null;function c0(i){if(i=yi(i)){if(typeof lh!="function")throw Error(t(280));var c=i.stateNode;c&&(c=ec(c),lh(i.stateNode,i.type,c))}}function d0(i){qo?Ko?Ko.push(i):Ko=[i]:qo=i}function p0(){if(qo){var i=qo,c=Ko;if(Ko=qo=null,c0(i),c)for(i=0;i<c.length;i++)c0(c[i])}}function f0(i,c){return i(c)}function h0(){}var uh=!1;function m0(i,c,h){if(uh)return i(c,h);uh=!0;try{return f0(i,c,h)}finally{uh=!1,(qo!==null||Ko!==null)&&(h0(),p0())}}function Ya(i,c){var h=i.stateNode;if(h===null)return null;var x=ec(h);if(x===null)return null;h=x[c];e:switch(c){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(x=!x.disabled)||(i=i.type,x=!(i==="button"||i==="input"||i==="select"||i==="textarea")),i=!x;break e;default:i=!1}if(i)return null;if(h&&typeof h!="function")throw Error(t(231,c,typeof h));return h}var ch=!1;if(l)try{var Qa={};Object.defineProperty(Qa,"passive",{get:function(){ch=!0}}),window.addEventListener("test",Qa,Qa),window.removeEventListener("test",Qa,Qa)}catch{ch=!1}function vk(i,c,h,x,S,C,R,B,G){var re=Array.prototype.slice.call(arguments,3);try{c.apply(h,re)}catch(de){this.onError(de)}}var Za=!1,Ou=null,Du=!1,dh=null,wk={onError:function(i){Za=!0,Ou=i}};function bk(i,c,h,x,S,C,R,B,G){Za=!1,Ou=null,vk.apply(wk,arguments)}function Sk(i,c,h,x,S,C,R,B,G){if(bk.apply(this,arguments),Za){if(Za){var re=Ou;Za=!1,Ou=null}else throw Error(t(198));Du||(Du=!0,dh=re)}}function to(i){var c=i,h=i;if(i.alternate)for(;c.return;)c=c.return;else{i=c;do c=i,(c.flags&4098)!==0&&(h=c.return),i=c.return;while(i)}return c.tag===3?h:null}function g0(i){if(i.tag===13){var c=i.memoizedState;if(c===null&&(i=i.alternate,i!==null&&(c=i.memoizedState)),c!==null)return c.dehydrated}return null}function y0(i){if(to(i)!==i)throw Error(t(188))}function $k(i){var c=i.alternate;if(!c){if(c=to(i),c===null)throw Error(t(188));return c!==i?null:i}for(var h=i,x=c;;){var S=h.return;if(S===null)break;var C=S.alternate;if(C===null){if(x=S.return,x!==null){h=x;continue}break}if(S.child===C.child){for(C=S.child;C;){if(C===h)return y0(S),i;if(C===x)return y0(S),c;C=C.sibling}throw Error(t(188))}if(h.return!==x.return)h=S,x=C;else{for(var R=!1,B=S.child;B;){if(B===h){R=!0,h=S,x=C;break}if(B===x){R=!0,x=S,h=C;break}B=B.sibling}if(!R){for(B=C.child;B;){if(B===h){R=!0,h=C,x=S;break}if(B===x){R=!0,x=C,h=S;break}B=B.sibling}if(!R)throw Error(t(189))}}if(h.alternate!==x)throw Error(t(190))}if(h.tag!==3)throw Error(t(188));return h.stateNode.current===h?i:c}function x0(i){return i=$k(i),i!==null?v0(i):null}function v0(i){if(i.tag===5||i.tag===6)return i;for(i=i.child;i!==null;){var c=v0(i);if(c!==null)return c;i=i.sibling}return null}var w0=e.unstable_scheduleCallback,b0=e.unstable_cancelCallback,Ck=e.unstable_shouldYield,Nk=e.unstable_requestPaint,Ct=e.unstable_now,kk=e.unstable_getCurrentPriorityLevel,ph=e.unstable_ImmediatePriority,S0=e.unstable_UserBlockingPriority,Au=e.unstable_NormalPriority,Ik=e.unstable_LowPriority,$0=e.unstable_IdlePriority,Fu=null,$r=null;function Tk(i){if($r&&typeof $r.onCommitFiberRoot=="function")try{$r.onCommitFiberRoot(Fu,i,void 0,(i.current.flags&128)===128)}catch{}}var ar=Math.clz32?Math.clz32:_k,Ek=Math.log,Rk=Math.LN2;function _k(i){return i>>>=0,i===0?32:31-(Ek(i)/Rk|0)|0}var Pu=64,Lu=4194304;function Ja(i){switch(i&-i){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return i&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return i&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return i}}function Vu(i,c){var h=i.pendingLanes;if(h===0)return 0;var x=0,S=i.suspendedLanes,C=i.pingedLanes,R=h&268435455;if(R!==0){var B=R&~S;B!==0?x=Ja(B):(C&=R,C!==0&&(x=Ja(C)))}else R=h&~S,R!==0?x=Ja(R):C!==0&&(x=Ja(C));if(x===0)return 0;if(c!==0&&c!==x&&(c&S)===0&&(S=x&-x,C=c&-c,S>=C||S===16&&(C&4194240)!==0))return c;if((x&4)!==0&&(x|=h&16),c=i.entangledLanes,c!==0)for(i=i.entanglements,c&=x;0<c;)h=31-ar(c),S=1<<h,x|=i[h],c&=~S;return x}function Ok(i,c){switch(i){case 1:case 2:case 4:return c+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return c+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Dk(i,c){for(var h=i.suspendedLanes,x=i.pingedLanes,S=i.expirationTimes,C=i.pendingLanes;0<C;){var R=31-ar(C),B=1<<R,G=S[R];G===-1?((B&h)===0||(B&x)!==0)&&(S[R]=Ok(B,c)):G<=c&&(i.expiredLanes|=B),C&=~B}}function fh(i){return i=i.pendingLanes&-1073741825,i!==0?i:i&1073741824?1073741824:0}function C0(){var i=Pu;return Pu<<=1,(Pu&4194240)===0&&(Pu=64),i}function hh(i){for(var c=[],h=0;31>h;h++)c.push(i);return c}function ei(i,c,h){i.pendingLanes|=c,c!==536870912&&(i.suspendedLanes=0,i.pingedLanes=0),i=i.eventTimes,c=31-ar(c),i[c]=h}function Ak(i,c){var h=i.pendingLanes&~c;i.pendingLanes=c,i.suspendedLanes=0,i.pingedLanes=0,i.expiredLanes&=c,i.mutableReadLanes&=c,i.entangledLanes&=c,c=i.entanglements;var x=i.eventTimes;for(i=i.expirationTimes;0<h;){var S=31-ar(h),C=1<<S;c[S]=0,x[S]=-1,i[S]=-1,h&=~C}}function mh(i,c){var h=i.entangledLanes|=c;for(i=i.entanglements;h;){var x=31-ar(h),S=1<<x;S&c|i[x]&c&&(i[x]|=c),h&=~S}}var Qe=0;function N0(i){return i&=-i,1<i?4<i?(i&268435455)!==0?16:536870912:4:1}var k0,gh,I0,T0,E0,yh=!1,Bu=[],fs=null,hs=null,ms=null,ti=new Map,ni=new Map,gs=[],Fk="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function R0(i,c){switch(i){case"focusin":case"focusout":fs=null;break;case"dragenter":case"dragleave":hs=null;break;case"mouseover":case"mouseout":ms=null;break;case"pointerover":case"pointerout":ti.delete(c.pointerId);break;case"gotpointercapture":case"lostpointercapture":ni.delete(c.pointerId)}}function ri(i,c,h,x,S,C){return i===null||i.nativeEvent!==C?(i={blockedOn:c,domEventName:h,eventSystemFlags:x,nativeEvent:C,targetContainers:[S]},c!==null&&(c=yi(c),c!==null&&gh(c)),i):(i.eventSystemFlags|=x,c=i.targetContainers,S!==null&&c.indexOf(S)===-1&&c.push(S),i)}function Pk(i,c,h,x,S){switch(c){case"focusin":return fs=ri(fs,i,c,h,x,S),!0;case"dragenter":return hs=ri(hs,i,c,h,x,S),!0;case"mouseover":return ms=ri(ms,i,c,h,x,S),!0;case"pointerover":var C=S.pointerId;return ti.set(C,ri(ti.get(C)||null,i,c,h,x,S)),!0;case"gotpointercapture":return C=S.pointerId,ni.set(C,ri(ni.get(C)||null,i,c,h,x,S)),!0}return!1}function _0(i){var c=no(i.target);if(c!==null){var h=to(c);if(h!==null){if(c=h.tag,c===13){if(c=g0(h),c!==null){i.blockedOn=c,E0(i.priority,function(){I0(h)});return}}else if(c===3&&h.stateNode.current.memoizedState.isDehydrated){i.blockedOn=h.tag===3?h.stateNode.containerInfo:null;return}}}i.blockedOn=null}function Mu(i){if(i.blockedOn!==null)return!1;for(var c=i.targetContainers;0<c.length;){var h=vh(i.domEventName,i.eventSystemFlags,c[0],i.nativeEvent);if(h===null){h=i.nativeEvent;var x=new h.constructor(h.type,h);ah=x,h.target.dispatchEvent(x),ah=null}else return c=yi(h),c!==null&&gh(c),i.blockedOn=h,!1;c.shift()}return!0}function O0(i,c,h){Mu(i)&&h.delete(c)}function Lk(){yh=!1,fs!==null&&Mu(fs)&&(fs=null),hs!==null&&Mu(hs)&&(hs=null),ms!==null&&Mu(ms)&&(ms=null),ti.forEach(O0),ni.forEach(O0)}function si(i,c){i.blockedOn===c&&(i.blockedOn=null,yh||(yh=!0,e.unstable_scheduleCallback(e.unstable_NormalPriority,Lk)))}function oi(i){function c(S){return si(S,i)}if(0<Bu.length){si(Bu[0],i);for(var h=1;h<Bu.length;h++){var x=Bu[h];x.blockedOn===i&&(x.blockedOn=null)}}for(fs!==null&&si(fs,i),hs!==null&&si(hs,i),ms!==null&&si(ms,i),ti.forEach(c),ni.forEach(c),h=0;h<gs.length;h++)x=gs[h],x.blockedOn===i&&(x.blockedOn=null);for(;0<gs.length&&(h=gs[0],h.blockedOn===null);)_0(h),h.blockedOn===null&&gs.shift()}var Xo=k.ReactCurrentBatchConfig,zu=!0;function Vk(i,c,h,x){var S=Qe,C=Xo.transition;Xo.transition=null;try{Qe=1,xh(i,c,h,x)}finally{Qe=S,Xo.transition=C}}function Bk(i,c,h,x){var S=Qe,C=Xo.transition;Xo.transition=null;try{Qe=4,xh(i,c,h,x)}finally{Qe=S,Xo.transition=C}}function xh(i,c,h,x){if(zu){var S=vh(i,c,h,x);if(S===null)Ph(i,c,x,Wu,h),R0(i,x);else if(Pk(S,i,c,h,x))x.stopPropagation();else if(R0(i,x),c&4&&-1<Fk.indexOf(i)){for(;S!==null;){var C=yi(S);if(C!==null&&k0(C),C=vh(i,c,h,x),C===null&&Ph(i,c,x,Wu,h),C===S)break;S=C}S!==null&&x.stopPropagation()}else Ph(i,c,x,null,h)}}var Wu=null;function vh(i,c,h,x){if(Wu=null,i=ih(x),i=no(i),i!==null)if(c=to(i),c===null)i=null;else if(h=c.tag,h===13){if(i=g0(c),i!==null)return i;i=null}else if(h===3){if(c.stateNode.current.memoizedState.isDehydrated)return c.tag===3?c.stateNode.containerInfo:null;i=null}else c!==i&&(i=null);return Wu=i,null}function D0(i){switch(i){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(kk()){case ph:return 1;case S0:return 4;case Au:case Ik:return 16;case $0:return 536870912;default:return 16}default:return 16}}var ys=null,wh=null,Uu=null;function A0(){if(Uu)return Uu;var i,c=wh,h=c.length,x,S="value"in ys?ys.value:ys.textContent,C=S.length;for(i=0;i<h&&c[i]===S[i];i++);var R=h-i;for(x=1;x<=R&&c[h-x]===S[C-x];x++);return Uu=S.slice(i,1<x?1-x:void 0)}function Gu(i){var c=i.keyCode;return"charCode"in i?(i=i.charCode,i===0&&c===13&&(i=13)):i=c,i===10&&(i=13),32<=i||i===13?i:0}function Hu(){return!0}function F0(){return!1}function Pn(i){function c(h,x,S,C,R){this._reactName=h,this._targetInst=S,this.type=x,this.nativeEvent=C,this.target=R,this.currentTarget=null;for(var B in i)i.hasOwnProperty(B)&&(h=i[B],this[B]=h?h(C):C[B]);return this.isDefaultPrevented=(C.defaultPrevented!=null?C.defaultPrevented:C.returnValue===!1)?Hu:F0,this.isPropagationStopped=F0,this}return X(c.prototype,{preventDefault:function(){this.defaultPrevented=!0;var h=this.nativeEvent;h&&(h.preventDefault?h.preventDefault():typeof h.returnValue!="unknown"&&(h.returnValue=!1),this.isDefaultPrevented=Hu)},stopPropagation:function(){var h=this.nativeEvent;h&&(h.stopPropagation?h.stopPropagation():typeof h.cancelBubble!="unknown"&&(h.cancelBubble=!0),this.isPropagationStopped=Hu)},persist:function(){},isPersistent:Hu}),c}var Yo={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(i){return i.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},bh=Pn(Yo),ai=X({},Yo,{view:0,detail:0}),Mk=Pn(ai),Sh,$h,ii,ju=X({},ai,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Nh,button:0,buttons:0,relatedTarget:function(i){return i.relatedTarget===void 0?i.fromElement===i.srcElement?i.toElement:i.fromElement:i.relatedTarget},movementX:function(i){return"movementX"in i?i.movementX:(i!==ii&&(ii&&i.type==="mousemove"?(Sh=i.screenX-ii.screenX,$h=i.screenY-ii.screenY):$h=Sh=0,ii=i),Sh)},movementY:function(i){return"movementY"in i?i.movementY:$h}}),P0=Pn(ju),zk=X({},ju,{dataTransfer:0}),Wk=Pn(zk),Uk=X({},ai,{relatedTarget:0}),Ch=Pn(Uk),Gk=X({},Yo,{animationName:0,elapsedTime:0,pseudoElement:0}),Hk=Pn(Gk),jk=X({},Yo,{clipboardData:function(i){return"clipboardData"in i?i.clipboardData:window.clipboardData}}),qk=Pn(jk),Kk=X({},Yo,{data:0}),L0=Pn(Kk),Xk={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Yk={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Qk={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Zk(i){var c=this.nativeEvent;return c.getModifierState?c.getModifierState(i):(i=Qk[i])?!!c[i]:!1}function Nh(){return Zk}var Jk=X({},ai,{key:function(i){if(i.key){var c=Xk[i.key]||i.key;if(c!=="Unidentified")return c}return i.type==="keypress"?(i=Gu(i),i===13?"Enter":String.fromCharCode(i)):i.type==="keydown"||i.type==="keyup"?Yk[i.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Nh,charCode:function(i){return i.type==="keypress"?Gu(i):0},keyCode:function(i){return i.type==="keydown"||i.type==="keyup"?i.keyCode:0},which:function(i){return i.type==="keypress"?Gu(i):i.type==="keydown"||i.type==="keyup"?i.keyCode:0}}),eI=Pn(Jk),tI=X({},ju,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),V0=Pn(tI),nI=X({},ai,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Nh}),rI=Pn(nI),sI=X({},Yo,{propertyName:0,elapsedTime:0,pseudoElement:0}),oI=Pn(sI),aI=X({},ju,{deltaX:function(i){return"deltaX"in i?i.deltaX:"wheelDeltaX"in i?-i.wheelDeltaX:0},deltaY:function(i){return"deltaY"in i?i.deltaY:"wheelDeltaY"in i?-i.wheelDeltaY:"wheelDelta"in i?-i.wheelDelta:0},deltaZ:0,deltaMode:0}),iI=Pn(aI),lI=[9,13,27,32],kh=l&&"CompositionEvent"in window,li=null;l&&"documentMode"in document&&(li=document.documentMode);var uI=l&&"TextEvent"in window&&!li,B0=l&&(!kh||li&&8<li&&11>=li),M0=" ",z0=!1;function W0(i,c){switch(i){case"keyup":return lI.indexOf(c.keyCode)!==-1;case"keydown":return c.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function U0(i){return i=i.detail,typeof i=="object"&&"data"in i?i.data:null}var Qo=!1;function cI(i,c){switch(i){case"compositionend":return U0(c);case"keypress":return c.which!==32?null:(z0=!0,M0);case"textInput":return i=c.data,i===M0&&z0?null:i;default:return null}}function dI(i,c){if(Qo)return i==="compositionend"||!kh&&W0(i,c)?(i=A0(),Uu=wh=ys=null,Qo=!1,i):null;switch(i){case"paste":return null;case"keypress":if(!(c.ctrlKey||c.altKey||c.metaKey)||c.ctrlKey&&c.altKey){if(c.char&&1<c.char.length)return c.char;if(c.which)return String.fromCharCode(c.which)}return null;case"compositionend":return B0&&c.locale!=="ko"?null:c.data;default:return null}}var pI={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function G0(i){var c=i&&i.nodeName&&i.nodeName.toLowerCase();return c==="input"?!!pI[i.type]:c==="textarea"}function H0(i,c,h,x){d0(x),c=Qu(c,"onChange"),0<c.length&&(h=new bh("onChange","change",null,h,x),i.push({event:h,listeners:c}))}var ui=null,ci=null;function fI(i){u1(i,0)}function qu(i){var c=na(i);if(We(c))return i}function hI(i,c){if(i==="change")return c}var j0=!1;if(l){var Ih;if(l){var Th="oninput"in document;if(!Th){var q0=document.createElement("div");q0.setAttribute("oninput","return;"),Th=typeof q0.oninput=="function"}Ih=Th}else Ih=!1;j0=Ih&&(!document.documentMode||9<document.documentMode)}function K0(){ui&&(ui.detachEvent("onpropertychange",X0),ci=ui=null)}function X0(i){if(i.propertyName==="value"&&qu(ci)){var c=[];H0(c,ci,i,ih(i)),m0(fI,c)}}function mI(i,c,h){i==="focusin"?(K0(),ui=c,ci=h,ui.attachEvent("onpropertychange",X0)):i==="focusout"&&K0()}function gI(i){if(i==="selectionchange"||i==="keyup"||i==="keydown")return qu(ci)}function yI(i,c){if(i==="click")return qu(c)}function xI(i,c){if(i==="input"||i==="change")return qu(c)}function vI(i,c){return i===c&&(i!==0||1/i===1/c)||i!==i&&c!==c}var ir=typeof Object.is=="function"?Object.is:vI;function di(i,c){if(ir(i,c))return!0;if(typeof i!="object"||i===null||typeof c!="object"||c===null)return!1;var h=Object.keys(i),x=Object.keys(c);if(h.length!==x.length)return!1;for(x=0;x<h.length;x++){var S=h[x];if(!u.call(c,S)||!ir(i[S],c[S]))return!1}return!0}function Y0(i){for(;i&&i.firstChild;)i=i.firstChild;return i}function Q0(i,c){var h=Y0(i);i=0;for(var x;h;){if(h.nodeType===3){if(x=i+h.textContent.length,i<=c&&x>=c)return{node:h,offset:c-i};i=x}e:{for(;h;){if(h.nextSibling){h=h.nextSibling;break e}h=h.parentNode}h=void 0}h=Y0(h)}}function Z0(i,c){return i&&c?i===c?!0:i&&i.nodeType===3?!1:c&&c.nodeType===3?Z0(i,c.parentNode):"contains"in i?i.contains(c):i.compareDocumentPosition?!!(i.compareDocumentPosition(c)&16):!1:!1}function J0(){for(var i=window,c=He();c instanceof i.HTMLIFrameElement;){try{var h=typeof c.contentWindow.location.href=="string"}catch{h=!1}if(h)i=c.contentWindow;else break;c=He(i.document)}return c}function Eh(i){var c=i&&i.nodeName&&i.nodeName.toLowerCase();return c&&(c==="input"&&(i.type==="text"||i.type==="search"||i.type==="tel"||i.type==="url"||i.type==="password")||c==="textarea"||i.contentEditable==="true")}function wI(i){var c=J0(),h=i.focusedElem,x=i.selectionRange;if(c!==h&&h&&h.ownerDocument&&Z0(h.ownerDocument.documentElement,h)){if(x!==null&&Eh(h)){if(c=x.start,i=x.end,i===void 0&&(i=c),"selectionStart"in h)h.selectionStart=c,h.selectionEnd=Math.min(i,h.value.length);else if(i=(c=h.ownerDocument||document)&&c.defaultView||window,i.getSelection){i=i.getSelection();var S=h.textContent.length,C=Math.min(x.start,S);x=x.end===void 0?C:Math.min(x.end,S),!i.extend&&C>x&&(S=x,x=C,C=S),S=Q0(h,C);var R=Q0(h,x);S&&R&&(i.rangeCount!==1||i.anchorNode!==S.node||i.anchorOffset!==S.offset||i.focusNode!==R.node||i.focusOffset!==R.offset)&&(c=c.createRange(),c.setStart(S.node,S.offset),i.removeAllRanges(),C>x?(i.addRange(c),i.extend(R.node,R.offset)):(c.setEnd(R.node,R.offset),i.addRange(c)))}}for(c=[],i=h;i=i.parentNode;)i.nodeType===1&&c.push({element:i,left:i.scrollLeft,top:i.scrollTop});for(typeof h.focus=="function"&&h.focus(),h=0;h<c.length;h++)i=c[h],i.element.scrollLeft=i.left,i.element.scrollTop=i.top}}var bI=l&&"documentMode"in document&&11>=document.documentMode,Zo=null,Rh=null,pi=null,_h=!1;function e1(i,c,h){var x=h.window===h?h.document:h.nodeType===9?h:h.ownerDocument;_h||Zo==null||Zo!==He(x)||(x=Zo,"selectionStart"in x&&Eh(x)?x={start:x.selectionStart,end:x.selectionEnd}:(x=(x.ownerDocument&&x.ownerDocument.defaultView||window).getSelection(),x={anchorNode:x.anchorNode,anchorOffset:x.anchorOffset,focusNode:x.focusNode,focusOffset:x.focusOffset}),pi&&di(pi,x)||(pi=x,x=Qu(Rh,"onSelect"),0<x.length&&(c=new bh("onSelect","select",null,c,h),i.push({event:c,listeners:x}),c.target=Zo)))}function Ku(i,c){var h={};return h[i.toLowerCase()]=c.toLowerCase(),h["Webkit"+i]="webkit"+c,h["Moz"+i]="moz"+c,h}var Jo={animationend:Ku("Animation","AnimationEnd"),animationiteration:Ku("Animation","AnimationIteration"),animationstart:Ku("Animation","AnimationStart"),transitionend:Ku("Transition","TransitionEnd")},Oh={},t1={};l&&(t1=document.createElement("div").style,"AnimationEvent"in window||(delete Jo.animationend.animation,delete Jo.animationiteration.animation,delete Jo.animationstart.animation),"TransitionEvent"in window||delete Jo.transitionend.transition);function Xu(i){if(Oh[i])return Oh[i];if(!Jo[i])return i;var c=Jo[i],h;for(h in c)if(c.hasOwnProperty(h)&&h in t1)return Oh[i]=c[h];return i}var n1=Xu("animationend"),r1=Xu("animationiteration"),s1=Xu("animationstart"),o1=Xu("transitionend"),a1=new Map,i1="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function xs(i,c){a1.set(i,c),o(c,[i])}for(var Dh=0;Dh<i1.length;Dh++){var Ah=i1[Dh],SI=Ah.toLowerCase(),$I=Ah[0].toUpperCase()+Ah.slice(1);xs(SI,"on"+$I)}xs(n1,"onAnimationEnd"),xs(r1,"onAnimationIteration"),xs(s1,"onAnimationStart"),xs("dblclick","onDoubleClick"),xs("focusin","onFocus"),xs("focusout","onBlur"),xs(o1,"onTransitionEnd"),a("onMouseEnter",["mouseout","mouseover"]),a("onMouseLeave",["mouseout","mouseover"]),a("onPointerEnter",["pointerout","pointerover"]),a("onPointerLeave",["pointerout","pointerover"]),o("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),o("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),o("onBeforeInput",["compositionend","keypress","textInput","paste"]),o("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),o("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),o("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var fi="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),CI=new Set("cancel close invalid load scroll toggle".split(" ").concat(fi));function l1(i,c,h){var x=i.type||"unknown-event";i.currentTarget=h,Sk(x,c,void 0,i),i.currentTarget=null}function u1(i,c){c=(c&4)!==0;for(var h=0;h<i.length;h++){var x=i[h],S=x.event;x=x.listeners;e:{var C=void 0;if(c)for(var R=x.length-1;0<=R;R--){var B=x[R],G=B.instance,re=B.currentTarget;if(B=B.listener,G!==C&&S.isPropagationStopped())break e;l1(S,B,re),C=G}else for(R=0;R<x.length;R++){if(B=x[R],G=B.instance,re=B.currentTarget,B=B.listener,G!==C&&S.isPropagationStopped())break e;l1(S,B,re),C=G}}}if(Du)throw i=dh,Du=!1,dh=null,i}function ct(i,c){var h=c[Wh];h===void 0&&(h=c[Wh]=new Set);var x=i+"__bubble";h.has(x)||(c1(c,i,2,!1),h.add(x))}function Fh(i,c,h){var x=0;c&&(x|=4),c1(h,i,x,c)}var Yu="_reactListening"+Math.random().toString(36).slice(2);function hi(i){if(!i[Yu]){i[Yu]=!0,r.forEach(function(h){h!=="selectionchange"&&(CI.has(h)||Fh(h,!1,i),Fh(h,!0,i))});var c=i.nodeType===9?i:i.ownerDocument;c===null||c[Yu]||(c[Yu]=!0,Fh("selectionchange",!1,c))}}function c1(i,c,h,x){switch(D0(c)){case 1:var S=Vk;break;case 4:S=Bk;break;default:S=xh}h=S.bind(null,c,h,i),S=void 0,!ch||c!=="touchstart"&&c!=="touchmove"&&c!=="wheel"||(S=!0),x?S!==void 0?i.addEventListener(c,h,{capture:!0,passive:S}):i.addEventListener(c,h,!0):S!==void 0?i.addEventListener(c,h,{passive:S}):i.addEventListener(c,h,!1)}function Ph(i,c,h,x,S){var C=x;if((c&1)===0&&(c&2)===0&&x!==null)e:for(;;){if(x===null)return;var R=x.tag;if(R===3||R===4){var B=x.stateNode.containerInfo;if(B===S||B.nodeType===8&&B.parentNode===S)break;if(R===4)for(R=x.return;R!==null;){var G=R.tag;if((G===3||G===4)&&(G=R.stateNode.containerInfo,G===S||G.nodeType===8&&G.parentNode===S))return;R=R.return}for(;B!==null;){if(R=no(B),R===null)return;if(G=R.tag,G===5||G===6){x=C=R;continue e}B=B.parentNode}}x=x.return}m0(function(){var re=C,de=ih(h),pe=[];e:{var ce=a1.get(i);if(ce!==void 0){var be=bh,Ce=i;switch(i){case"keypress":if(Gu(h)===0)break e;case"keydown":case"keyup":be=eI;break;case"focusin":Ce="focus",be=Ch;break;case"focusout":Ce="blur",be=Ch;break;case"beforeblur":case"afterblur":be=Ch;break;case"click":if(h.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":be=P0;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":be=Wk;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":be=rI;break;case n1:case r1:case s1:be=Hk;break;case o1:be=oI;break;case"scroll":be=Mk;break;case"wheel":be=iI;break;case"copy":case"cut":case"paste":be=qk;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":be=V0}var ke=(c&4)!==0,Nt=!ke&&i==="scroll",ee=ke?ce!==null?ce+"Capture":null:ce;ke=[];for(var q=re,te;q!==null;){te=q;var fe=te.stateNode;if(te.tag===5&&fe!==null&&(te=fe,ee!==null&&(fe=Ya(q,ee),fe!=null&&ke.push(mi(q,fe,te)))),Nt)break;q=q.return}0<ke.length&&(ce=new be(ce,Ce,null,h,de),pe.push({event:ce,listeners:ke}))}}if((c&7)===0){e:{if(ce=i==="mouseover"||i==="pointerover",be=i==="mouseout"||i==="pointerout",ce&&h!==ah&&(Ce=h.relatedTarget||h.fromElement)&&(no(Ce)||Ce[zr]))break e;if((be||ce)&&(ce=de.window===de?de:(ce=de.ownerDocument)?ce.defaultView||ce.parentWindow:window,be?(Ce=h.relatedTarget||h.toElement,be=re,Ce=Ce?no(Ce):null,Ce!==null&&(Nt=to(Ce),Ce!==Nt||Ce.tag!==5&&Ce.tag!==6)&&(Ce=null)):(be=null,Ce=re),be!==Ce)){if(ke=P0,fe="onMouseLeave",ee="onMouseEnter",q="mouse",(i==="pointerout"||i==="pointerover")&&(ke=V0,fe="onPointerLeave",ee="onPointerEnter",q="pointer"),Nt=be==null?ce:na(be),te=Ce==null?ce:na(Ce),ce=new ke(fe,q+"leave",be,h,de),ce.target=Nt,ce.relatedTarget=te,fe=null,no(de)===re&&(ke=new ke(ee,q+"enter",Ce,h,de),ke.target=te,ke.relatedTarget=Nt,fe=ke),Nt=fe,be&&Ce)t:{for(ke=be,ee=Ce,q=0,te=ke;te;te=ea(te))q++;for(te=0,fe=ee;fe;fe=ea(fe))te++;for(;0<q-te;)ke=ea(ke),q--;for(;0<te-q;)ee=ea(ee),te--;for(;q--;){if(ke===ee||ee!==null&&ke===ee.alternate)break t;ke=ea(ke),ee=ea(ee)}ke=null}else ke=null;be!==null&&d1(pe,ce,be,ke,!1),Ce!==null&&Nt!==null&&d1(pe,Nt,Ce,ke,!0)}}e:{if(ce=re?na(re):window,be=ce.nodeName&&ce.nodeName.toLowerCase(),be==="select"||be==="input"&&ce.type==="file")var Ie=hI;else if(G0(ce))if(j0)Ie=xI;else{Ie=gI;var Re=mI}else(be=ce.nodeName)&&be.toLowerCase()==="input"&&(ce.type==="checkbox"||ce.type==="radio")&&(Ie=yI);if(Ie&&(Ie=Ie(i,re))){H0(pe,Ie,h,de);break e}Re&&Re(i,ce,re),i==="focusout"&&(Re=ce._wrapperState)&&Re.controlled&&ce.type==="number"&&An(ce,"number",ce.value)}switch(Re=re?na(re):window,i){case"focusin":(G0(Re)||Re.contentEditable==="true")&&(Zo=Re,Rh=re,pi=null);break;case"focusout":pi=Rh=Zo=null;break;case"mousedown":_h=!0;break;case"contextmenu":case"mouseup":case"dragend":_h=!1,e1(pe,h,de);break;case"selectionchange":if(bI)break;case"keydown":case"keyup":e1(pe,h,de)}var _e;if(kh)e:{switch(i){case"compositionstart":var De="onCompositionStart";break e;case"compositionend":De="onCompositionEnd";break e;case"compositionupdate":De="onCompositionUpdate";break e}De=void 0}else Qo?W0(i,h)&&(De="onCompositionEnd"):i==="keydown"&&h.keyCode===229&&(De="onCompositionStart");De&&(B0&&h.locale!=="ko"&&(Qo||De!=="onCompositionStart"?De==="onCompositionEnd"&&Qo&&(_e=A0()):(ys=de,wh="value"in ys?ys.value:ys.textContent,Qo=!0)),Re=Qu(re,De),0<Re.length&&(De=new L0(De,i,null,h,de),pe.push({event:De,listeners:Re}),_e?De.data=_e:(_e=U0(h),_e!==null&&(De.data=_e)))),(_e=uI?cI(i,h):dI(i,h))&&(re=Qu(re,"onBeforeInput"),0<re.length&&(de=new L0("onBeforeInput","beforeinput",null,h,de),pe.push({event:de,listeners:re}),de.data=_e))}u1(pe,c)})}function mi(i,c,h){return{instance:i,listener:c,currentTarget:h}}function Qu(i,c){for(var h=c+"Capture",x=[];i!==null;){var S=i,C=S.stateNode;S.tag===5&&C!==null&&(S=C,C=Ya(i,h),C!=null&&x.unshift(mi(i,C,S)),C=Ya(i,c),C!=null&&x.push(mi(i,C,S))),i=i.return}return x}function ea(i){if(i===null)return null;do i=i.return;while(i&&i.tag!==5);return i||null}function d1(i,c,h,x,S){for(var C=c._reactName,R=[];h!==null&&h!==x;){var B=h,G=B.alternate,re=B.stateNode;if(G!==null&&G===x)break;B.tag===5&&re!==null&&(B=re,S?(G=Ya(h,C),G!=null&&R.unshift(mi(h,G,B))):S||(G=Ya(h,C),G!=null&&R.push(mi(h,G,B)))),h=h.return}R.length!==0&&i.push({event:c,listeners:R})}var NI=/\r\n?/g,kI=/\u0000|\uFFFD/g;function p1(i){return(typeof i=="string"?i:""+i).replace(NI,`
`).replace(kI,"")}function Zu(i,c,h){if(c=p1(c),p1(i)!==c&&h)throw Error(t(425))}function Ju(){}var Lh=null,Vh=null;function Bh(i,c){return i==="textarea"||i==="noscript"||typeof c.children=="string"||typeof c.children=="number"||typeof c.dangerouslySetInnerHTML=="object"&&c.dangerouslySetInnerHTML!==null&&c.dangerouslySetInnerHTML.__html!=null}var Mh=typeof setTimeout=="function"?setTimeout:void 0,II=typeof clearTimeout=="function"?clearTimeout:void 0,f1=typeof Promise=="function"?Promise:void 0,TI=typeof queueMicrotask=="function"?queueMicrotask:typeof f1<"u"?function(i){return f1.resolve(null).then(i).catch(EI)}:Mh;function EI(i){setTimeout(function(){throw i})}function zh(i,c){var h=c,x=0;do{var S=h.nextSibling;if(i.removeChild(h),S&&S.nodeType===8)if(h=S.data,h==="/$"){if(x===0){i.removeChild(S),oi(c);return}x--}else h!=="$"&&h!=="$?"&&h!=="$!"||x++;h=S}while(h);oi(c)}function vs(i){for(;i!=null;i=i.nextSibling){var c=i.nodeType;if(c===1||c===3)break;if(c===8){if(c=i.data,c==="$"||c==="$!"||c==="$?")break;if(c==="/$")return null}}return i}function h1(i){i=i.previousSibling;for(var c=0;i;){if(i.nodeType===8){var h=i.data;if(h==="$"||h==="$!"||h==="$?"){if(c===0)return i;c--}else h==="/$"&&c++}i=i.previousSibling}return null}var ta=Math.random().toString(36).slice(2),Cr="__reactFiber$"+ta,gi="__reactProps$"+ta,zr="__reactContainer$"+ta,Wh="__reactEvents$"+ta,RI="__reactListeners$"+ta,_I="__reactHandles$"+ta;function no(i){var c=i[Cr];if(c)return c;for(var h=i.parentNode;h;){if(c=h[zr]||h[Cr]){if(h=c.alternate,c.child!==null||h!==null&&h.child!==null)for(i=h1(i);i!==null;){if(h=i[Cr])return h;i=h1(i)}return c}i=h,h=i.parentNode}return null}function yi(i){return i=i[Cr]||i[zr],!i||i.tag!==5&&i.tag!==6&&i.tag!==13&&i.tag!==3?null:i}function na(i){if(i.tag===5||i.tag===6)return i.stateNode;throw Error(t(33))}function ec(i){return i[gi]||null}var Uh=[],ra=-1;function ws(i){return{current:i}}function dt(i){0>ra||(i.current=Uh[ra],Uh[ra]=null,ra--)}function ut(i,c){ra++,Uh[ra]=i.current,i.current=c}var bs={},en=ws(bs),vn=ws(!1),ro=bs;function sa(i,c){var h=i.type.contextTypes;if(!h)return bs;var x=i.stateNode;if(x&&x.__reactInternalMemoizedUnmaskedChildContext===c)return x.__reactInternalMemoizedMaskedChildContext;var S={},C;for(C in h)S[C]=c[C];return x&&(i=i.stateNode,i.__reactInternalMemoizedUnmaskedChildContext=c,i.__reactInternalMemoizedMaskedChildContext=S),S}function wn(i){return i=i.childContextTypes,i!=null}function tc(){dt(vn),dt(en)}function m1(i,c,h){if(en.current!==bs)throw Error(t(168));ut(en,c),ut(vn,h)}function g1(i,c,h){var x=i.stateNode;if(c=c.childContextTypes,typeof x.getChildContext!="function")return h;x=x.getChildContext();for(var S in x)if(!(S in c))throw Error(t(108,he(i)||"Unknown",S));return X({},h,x)}function nc(i){return i=(i=i.stateNode)&&i.__reactInternalMemoizedMergedChildContext||bs,ro=en.current,ut(en,i),ut(vn,vn.current),!0}function y1(i,c,h){var x=i.stateNode;if(!x)throw Error(t(169));h?(i=g1(i,c,ro),x.__reactInternalMemoizedMergedChildContext=i,dt(vn),dt(en),ut(en,i)):dt(vn),ut(vn,h)}var Wr=null,rc=!1,Gh=!1;function x1(i){Wr===null?Wr=[i]:Wr.push(i)}function OI(i){rc=!0,x1(i)}function Ss(){if(!Gh&&Wr!==null){Gh=!0;var i=0,c=Qe;try{var h=Wr;for(Qe=1;i<h.length;i++){var x=h[i];do x=x(!0);while(x!==null)}Wr=null,rc=!1}catch(S){throw Wr!==null&&(Wr=Wr.slice(i+1)),w0(ph,Ss),S}finally{Qe=c,Gh=!1}}return null}var oa=[],aa=0,sc=null,oc=0,jn=[],qn=0,so=null,Ur=1,Gr="";function oo(i,c){oa[aa++]=oc,oa[aa++]=sc,sc=i,oc=c}function v1(i,c,h){jn[qn++]=Ur,jn[qn++]=Gr,jn[qn++]=so,so=i;var x=Ur;i=Gr;var S=32-ar(x)-1;x&=~(1<<S),h+=1;var C=32-ar(c)+S;if(30<C){var R=S-S%5;C=(x&(1<<R)-1).toString(32),x>>=R,S-=R,Ur=1<<32-ar(c)+S|h<<S|x,Gr=C+i}else Ur=1<<C|h<<S|x,Gr=i}function Hh(i){i.return!==null&&(oo(i,1),v1(i,1,0))}function jh(i){for(;i===sc;)sc=oa[--aa],oa[aa]=null,oc=oa[--aa],oa[aa]=null;for(;i===so;)so=jn[--qn],jn[qn]=null,Gr=jn[--qn],jn[qn]=null,Ur=jn[--qn],jn[qn]=null}var Ln=null,Vn=null,ft=!1,lr=null;function w1(i,c){var h=Qn(5,null,null,0);h.elementType="DELETED",h.stateNode=c,h.return=i,c=i.deletions,c===null?(i.deletions=[h],i.flags|=16):c.push(h)}function b1(i,c){switch(i.tag){case 5:var h=i.type;return c=c.nodeType!==1||h.toLowerCase()!==c.nodeName.toLowerCase()?null:c,c!==null?(i.stateNode=c,Ln=i,Vn=vs(c.firstChild),!0):!1;case 6:return c=i.pendingProps===""||c.nodeType!==3?null:c,c!==null?(i.stateNode=c,Ln=i,Vn=null,!0):!1;case 13:return c=c.nodeType!==8?null:c,c!==null?(h=so!==null?{id:Ur,overflow:Gr}:null,i.memoizedState={dehydrated:c,treeContext:h,retryLane:1073741824},h=Qn(18,null,null,0),h.stateNode=c,h.return=i,i.child=h,Ln=i,Vn=null,!0):!1;default:return!1}}function qh(i){return(i.mode&1)!==0&&(i.flags&128)===0}function Kh(i){if(ft){var c=Vn;if(c){var h=c;if(!b1(i,c)){if(qh(i))throw Error(t(418));c=vs(h.nextSibling);var x=Ln;c&&b1(i,c)?w1(x,h):(i.flags=i.flags&-4097|2,ft=!1,Ln=i)}}else{if(qh(i))throw Error(t(418));i.flags=i.flags&-4097|2,ft=!1,Ln=i}}}function S1(i){for(i=i.return;i!==null&&i.tag!==5&&i.tag!==3&&i.tag!==13;)i=i.return;Ln=i}function ac(i){if(i!==Ln)return!1;if(!ft)return S1(i),ft=!0,!1;var c;if((c=i.tag!==3)&&!(c=i.tag!==5)&&(c=i.type,c=c!=="head"&&c!=="body"&&!Bh(i.type,i.memoizedProps)),c&&(c=Vn)){if(qh(i))throw $1(),Error(t(418));for(;c;)w1(i,c),c=vs(c.nextSibling)}if(S1(i),i.tag===13){if(i=i.memoizedState,i=i!==null?i.dehydrated:null,!i)throw Error(t(317));e:{for(i=i.nextSibling,c=0;i;){if(i.nodeType===8){var h=i.data;if(h==="/$"){if(c===0){Vn=vs(i.nextSibling);break e}c--}else h!=="$"&&h!=="$!"&&h!=="$?"||c++}i=i.nextSibling}Vn=null}}else Vn=Ln?vs(i.stateNode.nextSibling):null;return!0}function $1(){for(var i=Vn;i;)i=vs(i.nextSibling)}function ia(){Vn=Ln=null,ft=!1}function Xh(i){lr===null?lr=[i]:lr.push(i)}var DI=k.ReactCurrentBatchConfig;function xi(i,c,h){if(i=h.ref,i!==null&&typeof i!="function"&&typeof i!="object"){if(h._owner){if(h=h._owner,h){if(h.tag!==1)throw Error(t(309));var x=h.stateNode}if(!x)throw Error(t(147,i));var S=x,C=""+i;return c!==null&&c.ref!==null&&typeof c.ref=="function"&&c.ref._stringRef===C?c.ref:(c=function(R){var B=S.refs;R===null?delete B[C]:B[C]=R},c._stringRef=C,c)}if(typeof i!="string")throw Error(t(284));if(!h._owner)throw Error(t(290,i))}return i}function ic(i,c){throw i=Object.prototype.toString.call(c),Error(t(31,i==="[object Object]"?"object with keys {"+Object.keys(c).join(", ")+"}":i))}function C1(i){var c=i._init;return c(i._payload)}function N1(i){function c(ee,q){if(i){var te=ee.deletions;te===null?(ee.deletions=[q],ee.flags|=16):te.push(q)}}function h(ee,q){if(!i)return null;for(;q!==null;)c(ee,q),q=q.sibling;return null}function x(ee,q){for(ee=new Map;q!==null;)q.key!==null?ee.set(q.key,q):ee.set(q.index,q),q=q.sibling;return ee}function S(ee,q){return ee=Rs(ee,q),ee.index=0,ee.sibling=null,ee}function C(ee,q,te){return ee.index=te,i?(te=ee.alternate,te!==null?(te=te.index,te<q?(ee.flags|=2,q):te):(ee.flags|=2,q)):(ee.flags|=1048576,q)}function R(ee){return i&&ee.alternate===null&&(ee.flags|=2),ee}function B(ee,q,te,fe){return q===null||q.tag!==6?(q=Mm(te,ee.mode,fe),q.return=ee,q):(q=S(q,te),q.return=ee,q)}function G(ee,q,te,fe){var Ie=te.type;return Ie===A?de(ee,q,te.props.children,fe,te.key):q!==null&&(q.elementType===Ie||typeof Ie=="object"&&Ie!==null&&Ie.$$typeof===Z&&C1(Ie)===q.type)?(fe=S(q,te.props),fe.ref=xi(ee,q,te),fe.return=ee,fe):(fe=_c(te.type,te.key,te.props,null,ee.mode,fe),fe.ref=xi(ee,q,te),fe.return=ee,fe)}function re(ee,q,te,fe){return q===null||q.tag!==4||q.stateNode.containerInfo!==te.containerInfo||q.stateNode.implementation!==te.implementation?(q=zm(te,ee.mode,fe),q.return=ee,q):(q=S(q,te.children||[]),q.return=ee,q)}function de(ee,q,te,fe,Ie){return q===null||q.tag!==7?(q=ho(te,ee.mode,fe,Ie),q.return=ee,q):(q=S(q,te),q.return=ee,q)}function pe(ee,q,te){if(typeof q=="string"&&q!==""||typeof q=="number")return q=Mm(""+q,ee.mode,te),q.return=ee,q;if(typeof q=="object"&&q!==null){switch(q.$$typeof){case T:return te=_c(q.type,q.key,q.props,null,ee.mode,te),te.ref=xi(ee,null,q),te.return=ee,te;case O:return q=zm(q,ee.mode,te),q.return=ee,q;case Z:var fe=q._init;return pe(ee,fe(q._payload),te)}if(pt(q)||K(q))return q=ho(q,ee.mode,te,null),q.return=ee,q;ic(ee,q)}return null}function ce(ee,q,te,fe){var Ie=q!==null?q.key:null;if(typeof te=="string"&&te!==""||typeof te=="number")return Ie!==null?null:B(ee,q,""+te,fe);if(typeof te=="object"&&te!==null){switch(te.$$typeof){case T:return te.key===Ie?G(ee,q,te,fe):null;case O:return te.key===Ie?re(ee,q,te,fe):null;case Z:return Ie=te._init,ce(ee,q,Ie(te._payload),fe)}if(pt(te)||K(te))return Ie!==null?null:de(ee,q,te,fe,null);ic(ee,te)}return null}function be(ee,q,te,fe,Ie){if(typeof fe=="string"&&fe!==""||typeof fe=="number")return ee=ee.get(te)||null,B(q,ee,""+fe,Ie);if(typeof fe=="object"&&fe!==null){switch(fe.$$typeof){case T:return ee=ee.get(fe.key===null?te:fe.key)||null,G(q,ee,fe,Ie);case O:return ee=ee.get(fe.key===null?te:fe.key)||null,re(q,ee,fe,Ie);case Z:var Re=fe._init;return be(ee,q,te,Re(fe._payload),Ie)}if(pt(fe)||K(fe))return ee=ee.get(te)||null,de(q,ee,fe,Ie,null);ic(q,fe)}return null}function Ce(ee,q,te,fe){for(var Ie=null,Re=null,_e=q,De=q=0,Bt=null;_e!==null&&De<te.length;De++){_e.index>De?(Bt=_e,_e=null):Bt=_e.sibling;var qe=ce(ee,_e,te[De],fe);if(qe===null){_e===null&&(_e=Bt);break}i&&_e&&qe.alternate===null&&c(ee,_e),q=C(qe,q,De),Re===null?Ie=qe:Re.sibling=qe,Re=qe,_e=Bt}if(De===te.length)return h(ee,_e),ft&&oo(ee,De),Ie;if(_e===null){for(;De<te.length;De++)_e=pe(ee,te[De],fe),_e!==null&&(q=C(_e,q,De),Re===null?Ie=_e:Re.sibling=_e,Re=_e);return ft&&oo(ee,De),Ie}for(_e=x(ee,_e);De<te.length;De++)Bt=be(_e,ee,De,te[De],fe),Bt!==null&&(i&&Bt.alternate!==null&&_e.delete(Bt.key===null?De:Bt.key),q=C(Bt,q,De),Re===null?Ie=Bt:Re.sibling=Bt,Re=Bt);return i&&_e.forEach(function(_s){return c(ee,_s)}),ft&&oo(ee,De),Ie}function ke(ee,q,te,fe){var Ie=K(te);if(typeof Ie!="function")throw Error(t(150));if(te=Ie.call(te),te==null)throw Error(t(151));for(var Re=Ie=null,_e=q,De=q=0,Bt=null,qe=te.next();_e!==null&&!qe.done;De++,qe=te.next()){_e.index>De?(Bt=_e,_e=null):Bt=_e.sibling;var _s=ce(ee,_e,qe.value,fe);if(_s===null){_e===null&&(_e=Bt);break}i&&_e&&_s.alternate===null&&c(ee,_e),q=C(_s,q,De),Re===null?Ie=_s:Re.sibling=_s,Re=_s,_e=Bt}if(qe.done)return h(ee,_e),ft&&oo(ee,De),Ie;if(_e===null){for(;!qe.done;De++,qe=te.next())qe=pe(ee,qe.value,fe),qe!==null&&(q=C(qe,q,De),Re===null?Ie=qe:Re.sibling=qe,Re=qe);return ft&&oo(ee,De),Ie}for(_e=x(ee,_e);!qe.done;De++,qe=te.next())qe=be(_e,ee,De,qe.value,fe),qe!==null&&(i&&qe.alternate!==null&&_e.delete(qe.key===null?De:qe.key),q=C(qe,q,De),Re===null?Ie=qe:Re.sibling=qe,Re=qe);return i&&_e.forEach(function(pT){return c(ee,pT)}),ft&&oo(ee,De),Ie}function Nt(ee,q,te,fe){if(typeof te=="object"&&te!==null&&te.type===A&&te.key===null&&(te=te.props.children),typeof te=="object"&&te!==null){switch(te.$$typeof){case T:e:{for(var Ie=te.key,Re=q;Re!==null;){if(Re.key===Ie){if(Ie=te.type,Ie===A){if(Re.tag===7){h(ee,Re.sibling),q=S(Re,te.props.children),q.return=ee,ee=q;break e}}else if(Re.elementType===Ie||typeof Ie=="object"&&Ie!==null&&Ie.$$typeof===Z&&C1(Ie)===Re.type){h(ee,Re.sibling),q=S(Re,te.props),q.ref=xi(ee,Re,te),q.return=ee,ee=q;break e}h(ee,Re);break}else c(ee,Re);Re=Re.sibling}te.type===A?(q=ho(te.props.children,ee.mode,fe,te.key),q.return=ee,ee=q):(fe=_c(te.type,te.key,te.props,null,ee.mode,fe),fe.ref=xi(ee,q,te),fe.return=ee,ee=fe)}return R(ee);case O:e:{for(Re=te.key;q!==null;){if(q.key===Re)if(q.tag===4&&q.stateNode.containerInfo===te.containerInfo&&q.stateNode.implementation===te.implementation){h(ee,q.sibling),q=S(q,te.children||[]),q.return=ee,ee=q;break e}else{h(ee,q);break}else c(ee,q);q=q.sibling}q=zm(te,ee.mode,fe),q.return=ee,ee=q}return R(ee);case Z:return Re=te._init,Nt(ee,q,Re(te._payload),fe)}if(pt(te))return Ce(ee,q,te,fe);if(K(te))return ke(ee,q,te,fe);ic(ee,te)}return typeof te=="string"&&te!==""||typeof te=="number"?(te=""+te,q!==null&&q.tag===6?(h(ee,q.sibling),q=S(q,te),q.return=ee,ee=q):(h(ee,q),q=Mm(te,ee.mode,fe),q.return=ee,ee=q),R(ee)):h(ee,q)}return Nt}var la=N1(!0),k1=N1(!1),lc=ws(null),uc=null,ua=null,Yh=null;function Qh(){Yh=ua=uc=null}function Zh(i){var c=lc.current;dt(lc),i._currentValue=c}function Jh(i,c,h){for(;i!==null;){var x=i.alternate;if((i.childLanes&c)!==c?(i.childLanes|=c,x!==null&&(x.childLanes|=c)):x!==null&&(x.childLanes&c)!==c&&(x.childLanes|=c),i===h)break;i=i.return}}function ca(i,c){uc=i,Yh=ua=null,i=i.dependencies,i!==null&&i.firstContext!==null&&((i.lanes&c)!==0&&(bn=!0),i.firstContext=null)}function Kn(i){var c=i._currentValue;if(Yh!==i)if(i={context:i,memoizedValue:c,next:null},ua===null){if(uc===null)throw Error(t(308));ua=i,uc.dependencies={lanes:0,firstContext:i}}else ua=ua.next=i;return c}var ao=null;function em(i){ao===null?ao=[i]:ao.push(i)}function I1(i,c,h,x){var S=c.interleaved;return S===null?(h.next=h,em(c)):(h.next=S.next,S.next=h),c.interleaved=h,Hr(i,x)}function Hr(i,c){i.lanes|=c;var h=i.alternate;for(h!==null&&(h.lanes|=c),h=i,i=i.return;i!==null;)i.childLanes|=c,h=i.alternate,h!==null&&(h.childLanes|=c),h=i,i=i.return;return h.tag===3?h.stateNode:null}var $s=!1;function tm(i){i.updateQueue={baseState:i.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function T1(i,c){i=i.updateQueue,c.updateQueue===i&&(c.updateQueue={baseState:i.baseState,firstBaseUpdate:i.firstBaseUpdate,lastBaseUpdate:i.lastBaseUpdate,shared:i.shared,effects:i.effects})}function jr(i,c){return{eventTime:i,lane:c,tag:0,payload:null,callback:null,next:null}}function Cs(i,c,h){var x=i.updateQueue;if(x===null)return null;if(x=x.shared,(Ue&2)!==0){var S=x.pending;return S===null?c.next=c:(c.next=S.next,S.next=c),x.pending=c,Hr(i,h)}return S=x.interleaved,S===null?(c.next=c,em(x)):(c.next=S.next,S.next=c),x.interleaved=c,Hr(i,h)}function cc(i,c,h){if(c=c.updateQueue,c!==null&&(c=c.shared,(h&4194240)!==0)){var x=c.lanes;x&=i.pendingLanes,h|=x,c.lanes=h,mh(i,h)}}function E1(i,c){var h=i.updateQueue,x=i.alternate;if(x!==null&&(x=x.updateQueue,h===x)){var S=null,C=null;if(h=h.firstBaseUpdate,h!==null){do{var R={eventTime:h.eventTime,lane:h.lane,tag:h.tag,payload:h.payload,callback:h.callback,next:null};C===null?S=C=R:C=C.next=R,h=h.next}while(h!==null);C===null?S=C=c:C=C.next=c}else S=C=c;h={baseState:x.baseState,firstBaseUpdate:S,lastBaseUpdate:C,shared:x.shared,effects:x.effects},i.updateQueue=h;return}i=h.lastBaseUpdate,i===null?h.firstBaseUpdate=c:i.next=c,h.lastBaseUpdate=c}function dc(i,c,h,x){var S=i.updateQueue;$s=!1;var C=S.firstBaseUpdate,R=S.lastBaseUpdate,B=S.shared.pending;if(B!==null){S.shared.pending=null;var G=B,re=G.next;G.next=null,R===null?C=re:R.next=re,R=G;var de=i.alternate;de!==null&&(de=de.updateQueue,B=de.lastBaseUpdate,B!==R&&(B===null?de.firstBaseUpdate=re:B.next=re,de.lastBaseUpdate=G))}if(C!==null){var pe=S.baseState;R=0,de=re=G=null,B=C;do{var ce=B.lane,be=B.eventTime;if((x&ce)===ce){de!==null&&(de=de.next={eventTime:be,lane:0,tag:B.tag,payload:B.payload,callback:B.callback,next:null});e:{var Ce=i,ke=B;switch(ce=c,be=h,ke.tag){case 1:if(Ce=ke.payload,typeof Ce=="function"){pe=Ce.call(be,pe,ce);break e}pe=Ce;break e;case 3:Ce.flags=Ce.flags&-65537|128;case 0:if(Ce=ke.payload,ce=typeof Ce=="function"?Ce.call(be,pe,ce):Ce,ce==null)break e;pe=X({},pe,ce);break e;case 2:$s=!0}}B.callback!==null&&B.lane!==0&&(i.flags|=64,ce=S.effects,ce===null?S.effects=[B]:ce.push(B))}else be={eventTime:be,lane:ce,tag:B.tag,payload:B.payload,callback:B.callback,next:null},de===null?(re=de=be,G=pe):de=de.next=be,R|=ce;if(B=B.next,B===null){if(B=S.shared.pending,B===null)break;ce=B,B=ce.next,ce.next=null,S.lastBaseUpdate=ce,S.shared.pending=null}}while(!0);if(de===null&&(G=pe),S.baseState=G,S.firstBaseUpdate=re,S.lastBaseUpdate=de,c=S.shared.interleaved,c!==null){S=c;do R|=S.lane,S=S.next;while(S!==c)}else C===null&&(S.shared.lanes=0);uo|=R,i.lanes=R,i.memoizedState=pe}}function R1(i,c,h){if(i=c.effects,c.effects=null,i!==null)for(c=0;c<i.length;c++){var x=i[c],S=x.callback;if(S!==null){if(x.callback=null,x=h,typeof S!="function")throw Error(t(191,S));S.call(x)}}}var vi={},Nr=ws(vi),wi=ws(vi),bi=ws(vi);function io(i){if(i===vi)throw Error(t(174));return i}function nm(i,c){switch(ut(bi,c),ut(wi,i),ut(Nr,vi),i=c.nodeType,i){case 9:case 11:c=(c=c.documentElement)?c.namespaceURI:Hn(null,"");break;default:i=i===8?c.parentNode:c,c=i.namespaceURI||null,i=i.tagName,c=Hn(c,i)}dt(Nr),ut(Nr,c)}function da(){dt(Nr),dt(wi),dt(bi)}function _1(i){io(bi.current);var c=io(Nr.current),h=Hn(c,i.type);c!==h&&(ut(wi,i),ut(Nr,h))}function rm(i){wi.current===i&&(dt(Nr),dt(wi))}var gt=ws(0);function pc(i){for(var c=i;c!==null;){if(c.tag===13){var h=c.memoizedState;if(h!==null&&(h=h.dehydrated,h===null||h.data==="$?"||h.data==="$!"))return c}else if(c.tag===19&&c.memoizedProps.revealOrder!==void 0){if((c.flags&128)!==0)return c}else if(c.child!==null){c.child.return=c,c=c.child;continue}if(c===i)break;for(;c.sibling===null;){if(c.return===null||c.return===i)return null;c=c.return}c.sibling.return=c.return,c=c.sibling}return null}var sm=[];function om(){for(var i=0;i<sm.length;i++)sm[i]._workInProgressVersionPrimary=null;sm.length=0}var fc=k.ReactCurrentDispatcher,am=k.ReactCurrentBatchConfig,lo=0,yt=null,_t=null,Lt=null,hc=!1,Si=!1,$i=0,AI=0;function tn(){throw Error(t(321))}function im(i,c){if(c===null)return!1;for(var h=0;h<c.length&&h<i.length;h++)if(!ir(i[h],c[h]))return!1;return!0}function lm(i,c,h,x,S,C){if(lo=C,yt=c,c.memoizedState=null,c.updateQueue=null,c.lanes=0,fc.current=i===null||i.memoizedState===null?VI:BI,i=h(x,S),Si){C=0;do{if(Si=!1,$i=0,25<=C)throw Error(t(301));C+=1,Lt=_t=null,c.updateQueue=null,fc.current=MI,i=h(x,S)}while(Si)}if(fc.current=yc,c=_t!==null&&_t.next!==null,lo=0,Lt=_t=yt=null,hc=!1,c)throw Error(t(300));return i}function um(){var i=$i!==0;return $i=0,i}function kr(){var i={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Lt===null?yt.memoizedState=Lt=i:Lt=Lt.next=i,Lt}function Xn(){if(_t===null){var i=yt.alternate;i=i!==null?i.memoizedState:null}else i=_t.next;var c=Lt===null?yt.memoizedState:Lt.next;if(c!==null)Lt=c,_t=i;else{if(i===null)throw Error(t(310));_t=i,i={memoizedState:_t.memoizedState,baseState:_t.baseState,baseQueue:_t.baseQueue,queue:_t.queue,next:null},Lt===null?yt.memoizedState=Lt=i:Lt=Lt.next=i}return Lt}function Ci(i,c){return typeof c=="function"?c(i):c}function cm(i){var c=Xn(),h=c.queue;if(h===null)throw Error(t(311));h.lastRenderedReducer=i;var x=_t,S=x.baseQueue,C=h.pending;if(C!==null){if(S!==null){var R=S.next;S.next=C.next,C.next=R}x.baseQueue=S=C,h.pending=null}if(S!==null){C=S.next,x=x.baseState;var B=R=null,G=null,re=C;do{var de=re.lane;if((lo&de)===de)G!==null&&(G=G.next={lane:0,action:re.action,hasEagerState:re.hasEagerState,eagerState:re.eagerState,next:null}),x=re.hasEagerState?re.eagerState:i(x,re.action);else{var pe={lane:de,action:re.action,hasEagerState:re.hasEagerState,eagerState:re.eagerState,next:null};G===null?(B=G=pe,R=x):G=G.next=pe,yt.lanes|=de,uo|=de}re=re.next}while(re!==null&&re!==C);G===null?R=x:G.next=B,ir(x,c.memoizedState)||(bn=!0),c.memoizedState=x,c.baseState=R,c.baseQueue=G,h.lastRenderedState=x}if(i=h.interleaved,i!==null){S=i;do C=S.lane,yt.lanes|=C,uo|=C,S=S.next;while(S!==i)}else S===null&&(h.lanes=0);return[c.memoizedState,h.dispatch]}function dm(i){var c=Xn(),h=c.queue;if(h===null)throw Error(t(311));h.lastRenderedReducer=i;var x=h.dispatch,S=h.pending,C=c.memoizedState;if(S!==null){h.pending=null;var R=S=S.next;do C=i(C,R.action),R=R.next;while(R!==S);ir(C,c.memoizedState)||(bn=!0),c.memoizedState=C,c.baseQueue===null&&(c.baseState=C),h.lastRenderedState=C}return[C,x]}function O1(){}function D1(i,c){var h=yt,x=Xn(),S=c(),C=!ir(x.memoizedState,S);if(C&&(x.memoizedState=S,bn=!0),x=x.queue,pm(P1.bind(null,h,x,i),[i]),x.getSnapshot!==c||C||Lt!==null&&Lt.memoizedState.tag&1){if(h.flags|=2048,Ni(9,F1.bind(null,h,x,S,c),void 0,null),Vt===null)throw Error(t(349));(lo&30)!==0||A1(h,c,S)}return S}function A1(i,c,h){i.flags|=16384,i={getSnapshot:c,value:h},c=yt.updateQueue,c===null?(c={lastEffect:null,stores:null},yt.updateQueue=c,c.stores=[i]):(h=c.stores,h===null?c.stores=[i]:h.push(i))}function F1(i,c,h,x){c.value=h,c.getSnapshot=x,L1(c)&&V1(i)}function P1(i,c,h){return h(function(){L1(c)&&V1(i)})}function L1(i){var c=i.getSnapshot;i=i.value;try{var h=c();return!ir(i,h)}catch{return!0}}function V1(i){var c=Hr(i,1);c!==null&&pr(c,i,1,-1)}function B1(i){var c=kr();return typeof i=="function"&&(i=i()),c.memoizedState=c.baseState=i,i={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ci,lastRenderedState:i},c.queue=i,i=i.dispatch=LI.bind(null,yt,i),[c.memoizedState,i]}function Ni(i,c,h,x){return i={tag:i,create:c,destroy:h,deps:x,next:null},c=yt.updateQueue,c===null?(c={lastEffect:null,stores:null},yt.updateQueue=c,c.lastEffect=i.next=i):(h=c.lastEffect,h===null?c.lastEffect=i.next=i:(x=h.next,h.next=i,i.next=x,c.lastEffect=i)),i}function M1(){return Xn().memoizedState}function mc(i,c,h,x){var S=kr();yt.flags|=i,S.memoizedState=Ni(1|c,h,void 0,x===void 0?null:x)}function gc(i,c,h,x){var S=Xn();x=x===void 0?null:x;var C=void 0;if(_t!==null){var R=_t.memoizedState;if(C=R.destroy,x!==null&&im(x,R.deps)){S.memoizedState=Ni(c,h,C,x);return}}yt.flags|=i,S.memoizedState=Ni(1|c,h,C,x)}function z1(i,c){return mc(8390656,8,i,c)}function pm(i,c){return gc(2048,8,i,c)}function W1(i,c){return gc(4,2,i,c)}function U1(i,c){return gc(4,4,i,c)}function G1(i,c){if(typeof c=="function")return i=i(),c(i),function(){c(null)};if(c!=null)return i=i(),c.current=i,function(){c.current=null}}function H1(i,c,h){return h=h!=null?h.concat([i]):null,gc(4,4,G1.bind(null,c,i),h)}function fm(){}function j1(i,c){var h=Xn();c=c===void 0?null:c;var x=h.memoizedState;return x!==null&&c!==null&&im(c,x[1])?x[0]:(h.memoizedState=[i,c],i)}function q1(i,c){var h=Xn();c=c===void 0?null:c;var x=h.memoizedState;return x!==null&&c!==null&&im(c,x[1])?x[0]:(i=i(),h.memoizedState=[i,c],i)}function K1(i,c,h){return(lo&21)===0?(i.baseState&&(i.baseState=!1,bn=!0),i.memoizedState=h):(ir(h,c)||(h=C0(),yt.lanes|=h,uo|=h,i.baseState=!0),c)}function FI(i,c){var h=Qe;Qe=h!==0&&4>h?h:4,i(!0);var x=am.transition;am.transition={};try{i(!1),c()}finally{Qe=h,am.transition=x}}function X1(){return Xn().memoizedState}function PI(i,c,h){var x=Ts(i);if(h={lane:x,action:h,hasEagerState:!1,eagerState:null,next:null},Y1(i))Q1(c,h);else if(h=I1(i,c,h,x),h!==null){var S=hn();pr(h,i,x,S),Z1(h,c,x)}}function LI(i,c,h){var x=Ts(i),S={lane:x,action:h,hasEagerState:!1,eagerState:null,next:null};if(Y1(i))Q1(c,S);else{var C=i.alternate;if(i.lanes===0&&(C===null||C.lanes===0)&&(C=c.lastRenderedReducer,C!==null))try{var R=c.lastRenderedState,B=C(R,h);if(S.hasEagerState=!0,S.eagerState=B,ir(B,R)){var G=c.interleaved;G===null?(S.next=S,em(c)):(S.next=G.next,G.next=S),c.interleaved=S;return}}catch{}finally{}h=I1(i,c,S,x),h!==null&&(S=hn(),pr(h,i,x,S),Z1(h,c,x))}}function Y1(i){var c=i.alternate;return i===yt||c!==null&&c===yt}function Q1(i,c){Si=hc=!0;var h=i.pending;h===null?c.next=c:(c.next=h.next,h.next=c),i.pending=c}function Z1(i,c,h){if((h&4194240)!==0){var x=c.lanes;x&=i.pendingLanes,h|=x,c.lanes=h,mh(i,h)}}var yc={readContext:Kn,useCallback:tn,useContext:tn,useEffect:tn,useImperativeHandle:tn,useInsertionEffect:tn,useLayoutEffect:tn,useMemo:tn,useReducer:tn,useRef:tn,useState:tn,useDebugValue:tn,useDeferredValue:tn,useTransition:tn,useMutableSource:tn,useSyncExternalStore:tn,useId:tn,unstable_isNewReconciler:!1},VI={readContext:Kn,useCallback:function(i,c){return kr().memoizedState=[i,c===void 0?null:c],i},useContext:Kn,useEffect:z1,useImperativeHandle:function(i,c,h){return h=h!=null?h.concat([i]):null,mc(4194308,4,G1.bind(null,c,i),h)},useLayoutEffect:function(i,c){return mc(4194308,4,i,c)},useInsertionEffect:function(i,c){return mc(4,2,i,c)},useMemo:function(i,c){var h=kr();return c=c===void 0?null:c,i=i(),h.memoizedState=[i,c],i},useReducer:function(i,c,h){var x=kr();return c=h!==void 0?h(c):c,x.memoizedState=x.baseState=c,i={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:i,lastRenderedState:c},x.queue=i,i=i.dispatch=PI.bind(null,yt,i),[x.memoizedState,i]},useRef:function(i){var c=kr();return i={current:i},c.memoizedState=i},useState:B1,useDebugValue:fm,useDeferredValue:function(i){return kr().memoizedState=i},useTransition:function(){var i=B1(!1),c=i[0];return i=FI.bind(null,i[1]),kr().memoizedState=i,[c,i]},useMutableSource:function(){},useSyncExternalStore:function(i,c,h){var x=yt,S=kr();if(ft){if(h===void 0)throw Error(t(407));h=h()}else{if(h=c(),Vt===null)throw Error(t(349));(lo&30)!==0||A1(x,c,h)}S.memoizedState=h;var C={value:h,getSnapshot:c};return S.queue=C,z1(P1.bind(null,x,C,i),[i]),x.flags|=2048,Ni(9,F1.bind(null,x,C,h,c),void 0,null),h},useId:function(){var i=kr(),c=Vt.identifierPrefix;if(ft){var h=Gr,x=Ur;h=(x&~(1<<32-ar(x)-1)).toString(32)+h,c=":"+c+"R"+h,h=$i++,0<h&&(c+="H"+h.toString(32)),c+=":"}else h=AI++,c=":"+c+"r"+h.toString(32)+":";return i.memoizedState=c},unstable_isNewReconciler:!1},BI={readContext:Kn,useCallback:j1,useContext:Kn,useEffect:pm,useImperativeHandle:H1,useInsertionEffect:W1,useLayoutEffect:U1,useMemo:q1,useReducer:cm,useRef:M1,useState:function(){return cm(Ci)},useDebugValue:fm,useDeferredValue:function(i){var c=Xn();return K1(c,_t.memoizedState,i)},useTransition:function(){var i=cm(Ci)[0],c=Xn().memoizedState;return[i,c]},useMutableSource:O1,useSyncExternalStore:D1,useId:X1,unstable_isNewReconciler:!1},MI={readContext:Kn,useCallback:j1,useContext:Kn,useEffect:pm,useImperativeHandle:H1,useInsertionEffect:W1,useLayoutEffect:U1,useMemo:q1,useReducer:dm,useRef:M1,useState:function(){return dm(Ci)},useDebugValue:fm,useDeferredValue:function(i){var c=Xn();return _t===null?c.memoizedState=i:K1(c,_t.memoizedState,i)},useTransition:function(){var i=dm(Ci)[0],c=Xn().memoizedState;return[i,c]},useMutableSource:O1,useSyncExternalStore:D1,useId:X1,unstable_isNewReconciler:!1};function ur(i,c){if(i&&i.defaultProps){c=X({},c),i=i.defaultProps;for(var h in i)c[h]===void 0&&(c[h]=i[h]);return c}return c}function hm(i,c,h,x){c=i.memoizedState,h=h(x,c),h=h==null?c:X({},c,h),i.memoizedState=h,i.lanes===0&&(i.updateQueue.baseState=h)}var xc={isMounted:function(i){return(i=i._reactInternals)?to(i)===i:!1},enqueueSetState:function(i,c,h){i=i._reactInternals;var x=hn(),S=Ts(i),C=jr(x,S);C.payload=c,h!=null&&(C.callback=h),c=Cs(i,C,S),c!==null&&(pr(c,i,S,x),cc(c,i,S))},enqueueReplaceState:function(i,c,h){i=i._reactInternals;var x=hn(),S=Ts(i),C=jr(x,S);C.tag=1,C.payload=c,h!=null&&(C.callback=h),c=Cs(i,C,S),c!==null&&(pr(c,i,S,x),cc(c,i,S))},enqueueForceUpdate:function(i,c){i=i._reactInternals;var h=hn(),x=Ts(i),S=jr(h,x);S.tag=2,c!=null&&(S.callback=c),c=Cs(i,S,x),c!==null&&(pr(c,i,x,h),cc(c,i,x))}};function J1(i,c,h,x,S,C,R){return i=i.stateNode,typeof i.shouldComponentUpdate=="function"?i.shouldComponentUpdate(x,C,R):c.prototype&&c.prototype.isPureReactComponent?!di(h,x)||!di(S,C):!0}function ev(i,c,h){var x=!1,S=bs,C=c.contextType;return typeof C=="object"&&C!==null?C=Kn(C):(S=wn(c)?ro:en.current,x=c.contextTypes,C=(x=x!=null)?sa(i,S):bs),c=new c(h,C),i.memoizedState=c.state!==null&&c.state!==void 0?c.state:null,c.updater=xc,i.stateNode=c,c._reactInternals=i,x&&(i=i.stateNode,i.__reactInternalMemoizedUnmaskedChildContext=S,i.__reactInternalMemoizedMaskedChildContext=C),c}function tv(i,c,h,x){i=c.state,typeof c.componentWillReceiveProps=="function"&&c.componentWillReceiveProps(h,x),typeof c.UNSAFE_componentWillReceiveProps=="function"&&c.UNSAFE_componentWillReceiveProps(h,x),c.state!==i&&xc.enqueueReplaceState(c,c.state,null)}function mm(i,c,h,x){var S=i.stateNode;S.props=h,S.state=i.memoizedState,S.refs={},tm(i);var C=c.contextType;typeof C=="object"&&C!==null?S.context=Kn(C):(C=wn(c)?ro:en.current,S.context=sa(i,C)),S.state=i.memoizedState,C=c.getDerivedStateFromProps,typeof C=="function"&&(hm(i,c,C,h),S.state=i.memoizedState),typeof c.getDerivedStateFromProps=="function"||typeof S.getSnapshotBeforeUpdate=="function"||typeof S.UNSAFE_componentWillMount!="function"&&typeof S.componentWillMount!="function"||(c=S.state,typeof S.componentWillMount=="function"&&S.componentWillMount(),typeof S.UNSAFE_componentWillMount=="function"&&S.UNSAFE_componentWillMount(),c!==S.state&&xc.enqueueReplaceState(S,S.state,null),dc(i,h,S,x),S.state=i.memoizedState),typeof S.componentDidMount=="function"&&(i.flags|=4194308)}function pa(i,c){try{var h="",x=c;do h+=ie(x),x=x.return;while(x);var S=h}catch(C){S=`
Error generating stack: `+C.message+`
`+C.stack}return{value:i,source:c,stack:S,digest:null}}function gm(i,c,h){return{value:i,source:null,stack:h??null,digest:c??null}}function ym(i,c){try{console.error(c.value)}catch(h){setTimeout(function(){throw h})}}var zI=typeof WeakMap=="function"?WeakMap:Map;function nv(i,c,h){h=jr(-1,h),h.tag=3,h.payload={element:null};var x=c.value;return h.callback=function(){Nc||(Nc=!0,Om=x),ym(i,c)},h}function rv(i,c,h){h=jr(-1,h),h.tag=3;var x=i.type.getDerivedStateFromError;if(typeof x=="function"){var S=c.value;h.payload=function(){return x(S)},h.callback=function(){ym(i,c)}}var C=i.stateNode;return C!==null&&typeof C.componentDidCatch=="function"&&(h.callback=function(){ym(i,c),typeof x!="function"&&(ks===null?ks=new Set([this]):ks.add(this));var R=c.stack;this.componentDidCatch(c.value,{componentStack:R!==null?R:""})}),h}function sv(i,c,h){var x=i.pingCache;if(x===null){x=i.pingCache=new zI;var S=new Set;x.set(c,S)}else S=x.get(c),S===void 0&&(S=new Set,x.set(c,S));S.has(h)||(S.add(h),i=tT.bind(null,i,c,h),c.then(i,i))}function ov(i){do{var c;if((c=i.tag===13)&&(c=i.memoizedState,c=c!==null?c.dehydrated!==null:!0),c)return i;i=i.return}while(i!==null);return null}function av(i,c,h,x,S){return(i.mode&1)===0?(i===c?i.flags|=65536:(i.flags|=128,h.flags|=131072,h.flags&=-52805,h.tag===1&&(h.alternate===null?h.tag=17:(c=jr(-1,1),c.tag=2,Cs(h,c,1))),h.lanes|=1),i):(i.flags|=65536,i.lanes=S,i)}var WI=k.ReactCurrentOwner,bn=!1;function fn(i,c,h,x){c.child=i===null?k1(c,null,h,x):la(c,i.child,h,x)}function iv(i,c,h,x,S){h=h.render;var C=c.ref;return ca(c,S),x=lm(i,c,h,x,C,S),h=um(),i!==null&&!bn?(c.updateQueue=i.updateQueue,c.flags&=-2053,i.lanes&=~S,qr(i,c,S)):(ft&&h&&Hh(c),c.flags|=1,fn(i,c,x,S),c.child)}function lv(i,c,h,x,S){if(i===null){var C=h.type;return typeof C=="function"&&!Bm(C)&&C.defaultProps===void 0&&h.compare===null&&h.defaultProps===void 0?(c.tag=15,c.type=C,uv(i,c,C,x,S)):(i=_c(h.type,null,x,c,c.mode,S),i.ref=c.ref,i.return=c,c.child=i)}if(C=i.child,(i.lanes&S)===0){var R=C.memoizedProps;if(h=h.compare,h=h!==null?h:di,h(R,x)&&i.ref===c.ref)return qr(i,c,S)}return c.flags|=1,i=Rs(C,x),i.ref=c.ref,i.return=c,c.child=i}function uv(i,c,h,x,S){if(i!==null){var C=i.memoizedProps;if(di(C,x)&&i.ref===c.ref)if(bn=!1,c.pendingProps=x=C,(i.lanes&S)!==0)(i.flags&131072)!==0&&(bn=!0);else return c.lanes=i.lanes,qr(i,c,S)}return xm(i,c,h,x,S)}function cv(i,c,h){var x=c.pendingProps,S=x.children,C=i!==null?i.memoizedState:null;if(x.mode==="hidden")if((c.mode&1)===0)c.memoizedState={baseLanes:0,cachePool:null,transitions:null},ut(ha,Bn),Bn|=h;else{if((h&1073741824)===0)return i=C!==null?C.baseLanes|h:h,c.lanes=c.childLanes=1073741824,c.memoizedState={baseLanes:i,cachePool:null,transitions:null},c.updateQueue=null,ut(ha,Bn),Bn|=i,null;c.memoizedState={baseLanes:0,cachePool:null,transitions:null},x=C!==null?C.baseLanes:h,ut(ha,Bn),Bn|=x}else C!==null?(x=C.baseLanes|h,c.memoizedState=null):x=h,ut(ha,Bn),Bn|=x;return fn(i,c,S,h),c.child}function dv(i,c){var h=c.ref;(i===null&&h!==null||i!==null&&i.ref!==h)&&(c.flags|=512,c.flags|=2097152)}function xm(i,c,h,x,S){var C=wn(h)?ro:en.current;return C=sa(c,C),ca(c,S),h=lm(i,c,h,x,C,S),x=um(),i!==null&&!bn?(c.updateQueue=i.updateQueue,c.flags&=-2053,i.lanes&=~S,qr(i,c,S)):(ft&&x&&Hh(c),c.flags|=1,fn(i,c,h,S),c.child)}function pv(i,c,h,x,S){if(wn(h)){var C=!0;nc(c)}else C=!1;if(ca(c,S),c.stateNode===null)wc(i,c),ev(c,h,x),mm(c,h,x,S),x=!0;else if(i===null){var R=c.stateNode,B=c.memoizedProps;R.props=B;var G=R.context,re=h.contextType;typeof re=="object"&&re!==null?re=Kn(re):(re=wn(h)?ro:en.current,re=sa(c,re));var de=h.getDerivedStateFromProps,pe=typeof de=="function"||typeof R.getSnapshotBeforeUpdate=="function";pe||typeof R.UNSAFE_componentWillReceiveProps!="function"&&typeof R.componentWillReceiveProps!="function"||(B!==x||G!==re)&&tv(c,R,x,re),$s=!1;var ce=c.memoizedState;R.state=ce,dc(c,x,R,S),G=c.memoizedState,B!==x||ce!==G||vn.current||$s?(typeof de=="function"&&(hm(c,h,de,x),G=c.memoizedState),(B=$s||J1(c,h,B,x,ce,G,re))?(pe||typeof R.UNSAFE_componentWillMount!="function"&&typeof R.componentWillMount!="function"||(typeof R.componentWillMount=="function"&&R.componentWillMount(),typeof R.UNSAFE_componentWillMount=="function"&&R.UNSAFE_componentWillMount()),typeof R.componentDidMount=="function"&&(c.flags|=4194308)):(typeof R.componentDidMount=="function"&&(c.flags|=4194308),c.memoizedProps=x,c.memoizedState=G),R.props=x,R.state=G,R.context=re,x=B):(typeof R.componentDidMount=="function"&&(c.flags|=4194308),x=!1)}else{R=c.stateNode,T1(i,c),B=c.memoizedProps,re=c.type===c.elementType?B:ur(c.type,B),R.props=re,pe=c.pendingProps,ce=R.context,G=h.contextType,typeof G=="object"&&G!==null?G=Kn(G):(G=wn(h)?ro:en.current,G=sa(c,G));var be=h.getDerivedStateFromProps;(de=typeof be=="function"||typeof R.getSnapshotBeforeUpdate=="function")||typeof R.UNSAFE_componentWillReceiveProps!="function"&&typeof R.componentWillReceiveProps!="function"||(B!==pe||ce!==G)&&tv(c,R,x,G),$s=!1,ce=c.memoizedState,R.state=ce,dc(c,x,R,S);var Ce=c.memoizedState;B!==pe||ce!==Ce||vn.current||$s?(typeof be=="function"&&(hm(c,h,be,x),Ce=c.memoizedState),(re=$s||J1(c,h,re,x,ce,Ce,G)||!1)?(de||typeof R.UNSAFE_componentWillUpdate!="function"&&typeof R.componentWillUpdate!="function"||(typeof R.componentWillUpdate=="function"&&R.componentWillUpdate(x,Ce,G),typeof R.UNSAFE_componentWillUpdate=="function"&&R.UNSAFE_componentWillUpdate(x,Ce,G)),typeof R.componentDidUpdate=="function"&&(c.flags|=4),typeof R.getSnapshotBeforeUpdate=="function"&&(c.flags|=1024)):(typeof R.componentDidUpdate!="function"||B===i.memoizedProps&&ce===i.memoizedState||(c.flags|=4),typeof R.getSnapshotBeforeUpdate!="function"||B===i.memoizedProps&&ce===i.memoizedState||(c.flags|=1024),c.memoizedProps=x,c.memoizedState=Ce),R.props=x,R.state=Ce,R.context=G,x=re):(typeof R.componentDidUpdate!="function"||B===i.memoizedProps&&ce===i.memoizedState||(c.flags|=4),typeof R.getSnapshotBeforeUpdate!="function"||B===i.memoizedProps&&ce===i.memoizedState||(c.flags|=1024),x=!1)}return vm(i,c,h,x,C,S)}function vm(i,c,h,x,S,C){dv(i,c);var R=(c.flags&128)!==0;if(!x&&!R)return S&&y1(c,h,!1),qr(i,c,C);x=c.stateNode,WI.current=c;var B=R&&typeof h.getDerivedStateFromError!="function"?null:x.render();return c.flags|=1,i!==null&&R?(c.child=la(c,i.child,null,C),c.child=la(c,null,B,C)):fn(i,c,B,C),c.memoizedState=x.state,S&&y1(c,h,!0),c.child}function fv(i){var c=i.stateNode;c.pendingContext?m1(i,c.pendingContext,c.pendingContext!==c.context):c.context&&m1(i,c.context,!1),nm(i,c.containerInfo)}function hv(i,c,h,x,S){return ia(),Xh(S),c.flags|=256,fn(i,c,h,x),c.child}var wm={dehydrated:null,treeContext:null,retryLane:0};function bm(i){return{baseLanes:i,cachePool:null,transitions:null}}function mv(i,c,h){var x=c.pendingProps,S=gt.current,C=!1,R=(c.flags&128)!==0,B;if((B=R)||(B=i!==null&&i.memoizedState===null?!1:(S&2)!==0),B?(C=!0,c.flags&=-129):(i===null||i.memoizedState!==null)&&(S|=1),ut(gt,S&1),i===null)return Kh(c),i=c.memoizedState,i!==null&&(i=i.dehydrated,i!==null)?((c.mode&1)===0?c.lanes=1:i.data==="$!"?c.lanes=8:c.lanes=1073741824,null):(R=x.children,i=x.fallback,C?(x=c.mode,C=c.child,R={mode:"hidden",children:R},(x&1)===0&&C!==null?(C.childLanes=0,C.pendingProps=R):C=Oc(R,x,0,null),i=ho(i,x,h,null),C.return=c,i.return=c,C.sibling=i,c.child=C,c.child.memoizedState=bm(h),c.memoizedState=wm,i):Sm(c,R));if(S=i.memoizedState,S!==null&&(B=S.dehydrated,B!==null))return UI(i,c,R,x,B,S,h);if(C){C=x.fallback,R=c.mode,S=i.child,B=S.sibling;var G={mode:"hidden",children:x.children};return(R&1)===0&&c.child!==S?(x=c.child,x.childLanes=0,x.pendingProps=G,c.deletions=null):(x=Rs(S,G),x.subtreeFlags=S.subtreeFlags&14680064),B!==null?C=Rs(B,C):(C=ho(C,R,h,null),C.flags|=2),C.return=c,x.return=c,x.sibling=C,c.child=x,x=C,C=c.child,R=i.child.memoizedState,R=R===null?bm(h):{baseLanes:R.baseLanes|h,cachePool:null,transitions:R.transitions},C.memoizedState=R,C.childLanes=i.childLanes&~h,c.memoizedState=wm,x}return C=i.child,i=C.sibling,x=Rs(C,{mode:"visible",children:x.children}),(c.mode&1)===0&&(x.lanes=h),x.return=c,x.sibling=null,i!==null&&(h=c.deletions,h===null?(c.deletions=[i],c.flags|=16):h.push(i)),c.child=x,c.memoizedState=null,x}function Sm(i,c){return c=Oc({mode:"visible",children:c},i.mode,0,null),c.return=i,i.child=c}function vc(i,c,h,x){return x!==null&&Xh(x),la(c,i.child,null,h),i=Sm(c,c.pendingProps.children),i.flags|=2,c.memoizedState=null,i}function UI(i,c,h,x,S,C,R){if(h)return c.flags&256?(c.flags&=-257,x=gm(Error(t(422))),vc(i,c,R,x)):c.memoizedState!==null?(c.child=i.child,c.flags|=128,null):(C=x.fallback,S=c.mode,x=Oc({mode:"visible",children:x.children},S,0,null),C=ho(C,S,R,null),C.flags|=2,x.return=c,C.return=c,x.sibling=C,c.child=x,(c.mode&1)!==0&&la(c,i.child,null,R),c.child.memoizedState=bm(R),c.memoizedState=wm,C);if((c.mode&1)===0)return vc(i,c,R,null);if(S.data==="$!"){if(x=S.nextSibling&&S.nextSibling.dataset,x)var B=x.dgst;return x=B,C=Error(t(419)),x=gm(C,x,void 0),vc(i,c,R,x)}if(B=(R&i.childLanes)!==0,bn||B){if(x=Vt,x!==null){switch(R&-R){case 4:S=2;break;case 16:S=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:S=32;break;case 536870912:S=268435456;break;default:S=0}S=(S&(x.suspendedLanes|R))!==0?0:S,S!==0&&S!==C.retryLane&&(C.retryLane=S,Hr(i,S),pr(x,i,S,-1))}return Vm(),x=gm(Error(t(421))),vc(i,c,R,x)}return S.data==="$?"?(c.flags|=128,c.child=i.child,c=nT.bind(null,i),S._reactRetry=c,null):(i=C.treeContext,Vn=vs(S.nextSibling),Ln=c,ft=!0,lr=null,i!==null&&(jn[qn++]=Ur,jn[qn++]=Gr,jn[qn++]=so,Ur=i.id,Gr=i.overflow,so=c),c=Sm(c,x.children),c.flags|=4096,c)}function gv(i,c,h){i.lanes|=c;var x=i.alternate;x!==null&&(x.lanes|=c),Jh(i.return,c,h)}function $m(i,c,h,x,S){var C=i.memoizedState;C===null?i.memoizedState={isBackwards:c,rendering:null,renderingStartTime:0,last:x,tail:h,tailMode:S}:(C.isBackwards=c,C.rendering=null,C.renderingStartTime=0,C.last=x,C.tail=h,C.tailMode=S)}function yv(i,c,h){var x=c.pendingProps,S=x.revealOrder,C=x.tail;if(fn(i,c,x.children,h),x=gt.current,(x&2)!==0)x=x&1|2,c.flags|=128;else{if(i!==null&&(i.flags&128)!==0)e:for(i=c.child;i!==null;){if(i.tag===13)i.memoizedState!==null&&gv(i,h,c);else if(i.tag===19)gv(i,h,c);else if(i.child!==null){i.child.return=i,i=i.child;continue}if(i===c)break e;for(;i.sibling===null;){if(i.return===null||i.return===c)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}x&=1}if(ut(gt,x),(c.mode&1)===0)c.memoizedState=null;else switch(S){case"forwards":for(h=c.child,S=null;h!==null;)i=h.alternate,i!==null&&pc(i)===null&&(S=h),h=h.sibling;h=S,h===null?(S=c.child,c.child=null):(S=h.sibling,h.sibling=null),$m(c,!1,S,h,C);break;case"backwards":for(h=null,S=c.child,c.child=null;S!==null;){if(i=S.alternate,i!==null&&pc(i)===null){c.child=S;break}i=S.sibling,S.sibling=h,h=S,S=i}$m(c,!0,h,null,C);break;case"together":$m(c,!1,null,null,void 0);break;default:c.memoizedState=null}return c.child}function wc(i,c){(c.mode&1)===0&&i!==null&&(i.alternate=null,c.alternate=null,c.flags|=2)}function qr(i,c,h){if(i!==null&&(c.dependencies=i.dependencies),uo|=c.lanes,(h&c.childLanes)===0)return null;if(i!==null&&c.child!==i.child)throw Error(t(153));if(c.child!==null){for(i=c.child,h=Rs(i,i.pendingProps),c.child=h,h.return=c;i.sibling!==null;)i=i.sibling,h=h.sibling=Rs(i,i.pendingProps),h.return=c;h.sibling=null}return c.child}function GI(i,c,h){switch(c.tag){case 3:fv(c),ia();break;case 5:_1(c);break;case 1:wn(c.type)&&nc(c);break;case 4:nm(c,c.stateNode.containerInfo);break;case 10:var x=c.type._context,S=c.memoizedProps.value;ut(lc,x._currentValue),x._currentValue=S;break;case 13:if(x=c.memoizedState,x!==null)return x.dehydrated!==null?(ut(gt,gt.current&1),c.flags|=128,null):(h&c.child.childLanes)!==0?mv(i,c,h):(ut(gt,gt.current&1),i=qr(i,c,h),i!==null?i.sibling:null);ut(gt,gt.current&1);break;case 19:if(x=(h&c.childLanes)!==0,(i.flags&128)!==0){if(x)return yv(i,c,h);c.flags|=128}if(S=c.memoizedState,S!==null&&(S.rendering=null,S.tail=null,S.lastEffect=null),ut(gt,gt.current),x)break;return null;case 22:case 23:return c.lanes=0,cv(i,c,h)}return qr(i,c,h)}var xv,Cm,vv,wv;xv=function(i,c){for(var h=c.child;h!==null;){if(h.tag===5||h.tag===6)i.appendChild(h.stateNode);else if(h.tag!==4&&h.child!==null){h.child.return=h,h=h.child;continue}if(h===c)break;for(;h.sibling===null;){if(h.return===null||h.return===c)return;h=h.return}h.sibling.return=h.return,h=h.sibling}},Cm=function(){},vv=function(i,c,h,x){var S=i.memoizedProps;if(S!==x){i=c.stateNode,io(Nr.current);var C=null;switch(h){case"input":S=rt(i,S),x=rt(i,x),C=[];break;case"select":S=X({},S,{value:void 0}),x=X({},x,{value:void 0}),C=[];break;case"textarea":S=Kt(i,S),x=Kt(i,x),C=[];break;default:typeof S.onClick!="function"&&typeof x.onClick=="function"&&(i.onclick=Ju)}sh(h,x);var R;h=null;for(re in S)if(!x.hasOwnProperty(re)&&S.hasOwnProperty(re)&&S[re]!=null)if(re==="style"){var B=S[re];for(R in B)B.hasOwnProperty(R)&&(h||(h={}),h[R]="")}else re!=="dangerouslySetInnerHTML"&&re!=="children"&&re!=="suppressContentEditableWarning"&&re!=="suppressHydrationWarning"&&re!=="autoFocus"&&(s.hasOwnProperty(re)?C||(C=[]):(C=C||[]).push(re,null));for(re in x){var G=x[re];if(B=S!=null?S[re]:void 0,x.hasOwnProperty(re)&&G!==B&&(G!=null||B!=null))if(re==="style")if(B){for(R in B)!B.hasOwnProperty(R)||G&&G.hasOwnProperty(R)||(h||(h={}),h[R]="");for(R in G)G.hasOwnProperty(R)&&B[R]!==G[R]&&(h||(h={}),h[R]=G[R])}else h||(C||(C=[]),C.push(re,h)),h=G;else re==="dangerouslySetInnerHTML"?(G=G?G.__html:void 0,B=B?B.__html:void 0,G!=null&&B!==G&&(C=C||[]).push(re,G)):re==="children"?typeof G!="string"&&typeof G!="number"||(C=C||[]).push(re,""+G):re!=="suppressContentEditableWarning"&&re!=="suppressHydrationWarning"&&(s.hasOwnProperty(re)?(G!=null&&re==="onScroll"&&ct("scroll",i),C||B===G||(C=[])):(C=C||[]).push(re,G))}h&&(C=C||[]).push("style",h);var re=C;(c.updateQueue=re)&&(c.flags|=4)}},wv=function(i,c,h,x){h!==x&&(c.flags|=4)};function ki(i,c){if(!ft)switch(i.tailMode){case"hidden":c=i.tail;for(var h=null;c!==null;)c.alternate!==null&&(h=c),c=c.sibling;h===null?i.tail=null:h.sibling=null;break;case"collapsed":h=i.tail;for(var x=null;h!==null;)h.alternate!==null&&(x=h),h=h.sibling;x===null?c||i.tail===null?i.tail=null:i.tail.sibling=null:x.sibling=null}}function nn(i){var c=i.alternate!==null&&i.alternate.child===i.child,h=0,x=0;if(c)for(var S=i.child;S!==null;)h|=S.lanes|S.childLanes,x|=S.subtreeFlags&14680064,x|=S.flags&14680064,S.return=i,S=S.sibling;else for(S=i.child;S!==null;)h|=S.lanes|S.childLanes,x|=S.subtreeFlags,x|=S.flags,S.return=i,S=S.sibling;return i.subtreeFlags|=x,i.childLanes=h,c}function HI(i,c,h){var x=c.pendingProps;switch(jh(c),c.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return nn(c),null;case 1:return wn(c.type)&&tc(),nn(c),null;case 3:return x=c.stateNode,da(),dt(vn),dt(en),om(),x.pendingContext&&(x.context=x.pendingContext,x.pendingContext=null),(i===null||i.child===null)&&(ac(c)?c.flags|=4:i===null||i.memoizedState.isDehydrated&&(c.flags&256)===0||(c.flags|=1024,lr!==null&&(Fm(lr),lr=null))),Cm(i,c),nn(c),null;case 5:rm(c);var S=io(bi.current);if(h=c.type,i!==null&&c.stateNode!=null)vv(i,c,h,x,S),i.ref!==c.ref&&(c.flags|=512,c.flags|=2097152);else{if(!x){if(c.stateNode===null)throw Error(t(166));return nn(c),null}if(i=io(Nr.current),ac(c)){x=c.stateNode,h=c.type;var C=c.memoizedProps;switch(x[Cr]=c,x[gi]=C,i=(c.mode&1)!==0,h){case"dialog":ct("cancel",x),ct("close",x);break;case"iframe":case"object":case"embed":ct("load",x);break;case"video":case"audio":for(S=0;S<fi.length;S++)ct(fi[S],x);break;case"source":ct("error",x);break;case"img":case"image":case"link":ct("error",x),ct("load",x);break;case"details":ct("toggle",x);break;case"input":Xe(x,C),ct("invalid",x);break;case"select":x._wrapperState={wasMultiple:!!C.multiple},ct("invalid",x);break;case"textarea":Sr(x,C),ct("invalid",x)}sh(h,C),S=null;for(var R in C)if(C.hasOwnProperty(R)){var B=C[R];R==="children"?typeof B=="string"?x.textContent!==B&&(C.suppressHydrationWarning!==!0&&Zu(x.textContent,B,i),S=["children",B]):typeof B=="number"&&x.textContent!==""+B&&(C.suppressHydrationWarning!==!0&&Zu(x.textContent,B,i),S=["children",""+B]):s.hasOwnProperty(R)&&B!=null&&R==="onScroll"&&ct("scroll",x)}switch(h){case"input":Ae(x),tt(x,C,!0);break;case"textarea":Ae(x),Gn(x);break;case"select":case"option":break;default:typeof C.onClick=="function"&&(x.onclick=Ju)}x=S,c.updateQueue=x,x!==null&&(c.flags|=4)}else{R=S.nodeType===9?S:S.ownerDocument,i==="http://www.w3.org/1999/xhtml"&&(i=or(h)),i==="http://www.w3.org/1999/xhtml"?h==="script"?(i=R.createElement("div"),i.innerHTML="<script><\/script>",i=i.removeChild(i.firstChild)):typeof x.is=="string"?i=R.createElement(h,{is:x.is}):(i=R.createElement(h),h==="select"&&(R=i,x.multiple?R.multiple=!0:x.size&&(R.size=x.size))):i=R.createElementNS(i,h),i[Cr]=c,i[gi]=x,xv(i,c,!1,!1),c.stateNode=i;e:{switch(R=oh(h,x),h){case"dialog":ct("cancel",i),ct("close",i),S=x;break;case"iframe":case"object":case"embed":ct("load",i),S=x;break;case"video":case"audio":for(S=0;S<fi.length;S++)ct(fi[S],i);S=x;break;case"source":ct("error",i),S=x;break;case"img":case"image":case"link":ct("error",i),ct("load",i),S=x;break;case"details":ct("toggle",i),S=x;break;case"input":Xe(i,x),S=rt(i,x),ct("invalid",i);break;case"option":S=x;break;case"select":i._wrapperState={wasMultiple:!!x.multiple},S=X({},x,{value:void 0}),ct("invalid",i);break;case"textarea":Sr(i,x),S=Kt(i,x),ct("invalid",i);break;default:S=x}sh(h,S),B=S;for(C in B)if(B.hasOwnProperty(C)){var G=B[C];C==="style"?_u(i,G):C==="dangerouslySetInnerHTML"?(G=G?G.__html:void 0,G!=null&&ps(i,G)):C==="children"?typeof G=="string"?(h!=="textarea"||G!=="")&&Br(i,G):typeof G=="number"&&Br(i,""+G):C!=="suppressContentEditableWarning"&&C!=="suppressHydrationWarning"&&C!=="autoFocus"&&(s.hasOwnProperty(C)?G!=null&&C==="onScroll"&&ct("scroll",i):G!=null&&I(i,C,G,R))}switch(h){case"input":Ae(i),tt(i,x,!1);break;case"textarea":Ae(i),Gn(i);break;case"option":x.value!=null&&i.setAttribute("value",""+me(x.value));break;case"select":i.multiple=!!x.multiple,C=x.value,C!=null?pn(i,!!x.multiple,C,!1):x.defaultValue!=null&&pn(i,!!x.multiple,x.defaultValue,!0);break;default:typeof S.onClick=="function"&&(i.onclick=Ju)}switch(h){case"button":case"input":case"select":case"textarea":x=!!x.autoFocus;break e;case"img":x=!0;break e;default:x=!1}}x&&(c.flags|=4)}c.ref!==null&&(c.flags|=512,c.flags|=2097152)}return nn(c),null;case 6:if(i&&c.stateNode!=null)wv(i,c,i.memoizedProps,x);else{if(typeof x!="string"&&c.stateNode===null)throw Error(t(166));if(h=io(bi.current),io(Nr.current),ac(c)){if(x=c.stateNode,h=c.memoizedProps,x[Cr]=c,(C=x.nodeValue!==h)&&(i=Ln,i!==null))switch(i.tag){case 3:Zu(x.nodeValue,h,(i.mode&1)!==0);break;case 5:i.memoizedProps.suppressHydrationWarning!==!0&&Zu(x.nodeValue,h,(i.mode&1)!==0)}C&&(c.flags|=4)}else x=(h.nodeType===9?h:h.ownerDocument).createTextNode(x),x[Cr]=c,c.stateNode=x}return nn(c),null;case 13:if(dt(gt),x=c.memoizedState,i===null||i.memoizedState!==null&&i.memoizedState.dehydrated!==null){if(ft&&Vn!==null&&(c.mode&1)!==0&&(c.flags&128)===0)$1(),ia(),c.flags|=98560,C=!1;else if(C=ac(c),x!==null&&x.dehydrated!==null){if(i===null){if(!C)throw Error(t(318));if(C=c.memoizedState,C=C!==null?C.dehydrated:null,!C)throw Error(t(317));C[Cr]=c}else ia(),(c.flags&128)===0&&(c.memoizedState=null),c.flags|=4;nn(c),C=!1}else lr!==null&&(Fm(lr),lr=null),C=!0;if(!C)return c.flags&65536?c:null}return(c.flags&128)!==0?(c.lanes=h,c):(x=x!==null,x!==(i!==null&&i.memoizedState!==null)&&x&&(c.child.flags|=8192,(c.mode&1)!==0&&(i===null||(gt.current&1)!==0?Ot===0&&(Ot=3):Vm())),c.updateQueue!==null&&(c.flags|=4),nn(c),null);case 4:return da(),Cm(i,c),i===null&&hi(c.stateNode.containerInfo),nn(c),null;case 10:return Zh(c.type._context),nn(c),null;case 17:return wn(c.type)&&tc(),nn(c),null;case 19:if(dt(gt),C=c.memoizedState,C===null)return nn(c),null;if(x=(c.flags&128)!==0,R=C.rendering,R===null)if(x)ki(C,!1);else{if(Ot!==0||i!==null&&(i.flags&128)!==0)for(i=c.child;i!==null;){if(R=pc(i),R!==null){for(c.flags|=128,ki(C,!1),x=R.updateQueue,x!==null&&(c.updateQueue=x,c.flags|=4),c.subtreeFlags=0,x=h,h=c.child;h!==null;)C=h,i=x,C.flags&=14680066,R=C.alternate,R===null?(C.childLanes=0,C.lanes=i,C.child=null,C.subtreeFlags=0,C.memoizedProps=null,C.memoizedState=null,C.updateQueue=null,C.dependencies=null,C.stateNode=null):(C.childLanes=R.childLanes,C.lanes=R.lanes,C.child=R.child,C.subtreeFlags=0,C.deletions=null,C.memoizedProps=R.memoizedProps,C.memoizedState=R.memoizedState,C.updateQueue=R.updateQueue,C.type=R.type,i=R.dependencies,C.dependencies=i===null?null:{lanes:i.lanes,firstContext:i.firstContext}),h=h.sibling;return ut(gt,gt.current&1|2),c.child}i=i.sibling}C.tail!==null&&Ct()>ma&&(c.flags|=128,x=!0,ki(C,!1),c.lanes=4194304)}else{if(!x)if(i=pc(R),i!==null){if(c.flags|=128,x=!0,h=i.updateQueue,h!==null&&(c.updateQueue=h,c.flags|=4),ki(C,!0),C.tail===null&&C.tailMode==="hidden"&&!R.alternate&&!ft)return nn(c),null}else 2*Ct()-C.renderingStartTime>ma&&h!==1073741824&&(c.flags|=128,x=!0,ki(C,!1),c.lanes=4194304);C.isBackwards?(R.sibling=c.child,c.child=R):(h=C.last,h!==null?h.sibling=R:c.child=R,C.last=R)}return C.tail!==null?(c=C.tail,C.rendering=c,C.tail=c.sibling,C.renderingStartTime=Ct(),c.sibling=null,h=gt.current,ut(gt,x?h&1|2:h&1),c):(nn(c),null);case 22:case 23:return Lm(),x=c.memoizedState!==null,i!==null&&i.memoizedState!==null!==x&&(c.flags|=8192),x&&(c.mode&1)!==0?(Bn&1073741824)!==0&&(nn(c),c.subtreeFlags&6&&(c.flags|=8192)):nn(c),null;case 24:return null;case 25:return null}throw Error(t(156,c.tag))}function jI(i,c){switch(jh(c),c.tag){case 1:return wn(c.type)&&tc(),i=c.flags,i&65536?(c.flags=i&-65537|128,c):null;case 3:return da(),dt(vn),dt(en),om(),i=c.flags,(i&65536)!==0&&(i&128)===0?(c.flags=i&-65537|128,c):null;case 5:return rm(c),null;case 13:if(dt(gt),i=c.memoizedState,i!==null&&i.dehydrated!==null){if(c.alternate===null)throw Error(t(340));ia()}return i=c.flags,i&65536?(c.flags=i&-65537|128,c):null;case 19:return dt(gt),null;case 4:return da(),null;case 10:return Zh(c.type._context),null;case 22:case 23:return Lm(),null;case 24:return null;default:return null}}var bc=!1,rn=!1,qI=typeof WeakSet=="function"?WeakSet:Set,Se=null;function fa(i,c){var h=i.ref;if(h!==null)if(typeof h=="function")try{h(null)}catch(x){wt(i,c,x)}else h.current=null}function Nm(i,c,h){try{h()}catch(x){wt(i,c,x)}}var bv=!1;function KI(i,c){if(Lh=zu,i=J0(),Eh(i)){if("selectionStart"in i)var h={start:i.selectionStart,end:i.selectionEnd};else e:{h=(h=i.ownerDocument)&&h.defaultView||window;var x=h.getSelection&&h.getSelection();if(x&&x.rangeCount!==0){h=x.anchorNode;var S=x.anchorOffset,C=x.focusNode;x=x.focusOffset;try{h.nodeType,C.nodeType}catch{h=null;break e}var R=0,B=-1,G=-1,re=0,de=0,pe=i,ce=null;t:for(;;){for(var be;pe!==h||S!==0&&pe.nodeType!==3||(B=R+S),pe!==C||x!==0&&pe.nodeType!==3||(G=R+x),pe.nodeType===3&&(R+=pe.nodeValue.length),(be=pe.firstChild)!==null;)ce=pe,pe=be;for(;;){if(pe===i)break t;if(ce===h&&++re===S&&(B=R),ce===C&&++de===x&&(G=R),(be=pe.nextSibling)!==null)break;pe=ce,ce=pe.parentNode}pe=be}h=B===-1||G===-1?null:{start:B,end:G}}else h=null}h=h||{start:0,end:0}}else h=null;for(Vh={focusedElem:i,selectionRange:h},zu=!1,Se=c;Se!==null;)if(c=Se,i=c.child,(c.subtreeFlags&1028)!==0&&i!==null)i.return=c,Se=i;else for(;Se!==null;){c=Se;try{var Ce=c.alternate;if((c.flags&1024)!==0)switch(c.tag){case 0:case 11:case 15:break;case 1:if(Ce!==null){var ke=Ce.memoizedProps,Nt=Ce.memoizedState,ee=c.stateNode,q=ee.getSnapshotBeforeUpdate(c.elementType===c.type?ke:ur(c.type,ke),Nt);ee.__reactInternalSnapshotBeforeUpdate=q}break;case 3:var te=c.stateNode.containerInfo;te.nodeType===1?te.textContent="":te.nodeType===9&&te.documentElement&&te.removeChild(te.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(t(163))}}catch(fe){wt(c,c.return,fe)}if(i=c.sibling,i!==null){i.return=c.return,Se=i;break}Se=c.return}return Ce=bv,bv=!1,Ce}function Ii(i,c,h){var x=c.updateQueue;if(x=x!==null?x.lastEffect:null,x!==null){var S=x=x.next;do{if((S.tag&i)===i){var C=S.destroy;S.destroy=void 0,C!==void 0&&Nm(c,h,C)}S=S.next}while(S!==x)}}function Sc(i,c){if(c=c.updateQueue,c=c!==null?c.lastEffect:null,c!==null){var h=c=c.next;do{if((h.tag&i)===i){var x=h.create;h.destroy=x()}h=h.next}while(h!==c)}}function km(i){var c=i.ref;if(c!==null){var h=i.stateNode;switch(i.tag){case 5:i=h;break;default:i=h}typeof c=="function"?c(i):c.current=i}}function Sv(i){var c=i.alternate;c!==null&&(i.alternate=null,Sv(c)),i.child=null,i.deletions=null,i.sibling=null,i.tag===5&&(c=i.stateNode,c!==null&&(delete c[Cr],delete c[gi],delete c[Wh],delete c[RI],delete c[_I])),i.stateNode=null,i.return=null,i.dependencies=null,i.memoizedProps=null,i.memoizedState=null,i.pendingProps=null,i.stateNode=null,i.updateQueue=null}function $v(i){return i.tag===5||i.tag===3||i.tag===4}function Cv(i){e:for(;;){for(;i.sibling===null;){if(i.return===null||$v(i.return))return null;i=i.return}for(i.sibling.return=i.return,i=i.sibling;i.tag!==5&&i.tag!==6&&i.tag!==18;){if(i.flags&2||i.child===null||i.tag===4)continue e;i.child.return=i,i=i.child}if(!(i.flags&2))return i.stateNode}}function Im(i,c,h){var x=i.tag;if(x===5||x===6)i=i.stateNode,c?h.nodeType===8?h.parentNode.insertBefore(i,c):h.insertBefore(i,c):(h.nodeType===8?(c=h.parentNode,c.insertBefore(i,h)):(c=h,c.appendChild(i)),h=h._reactRootContainer,h!=null||c.onclick!==null||(c.onclick=Ju));else if(x!==4&&(i=i.child,i!==null))for(Im(i,c,h),i=i.sibling;i!==null;)Im(i,c,h),i=i.sibling}function Tm(i,c,h){var x=i.tag;if(x===5||x===6)i=i.stateNode,c?h.insertBefore(i,c):h.appendChild(i);else if(x!==4&&(i=i.child,i!==null))for(Tm(i,c,h),i=i.sibling;i!==null;)Tm(i,c,h),i=i.sibling}var Xt=null,cr=!1;function Ns(i,c,h){for(h=h.child;h!==null;)Nv(i,c,h),h=h.sibling}function Nv(i,c,h){if($r&&typeof $r.onCommitFiberUnmount=="function")try{$r.onCommitFiberUnmount(Fu,h)}catch{}switch(h.tag){case 5:rn||fa(h,c);case 6:var x=Xt,S=cr;Xt=null,Ns(i,c,h),Xt=x,cr=S,Xt!==null&&(cr?(i=Xt,h=h.stateNode,i.nodeType===8?i.parentNode.removeChild(h):i.removeChild(h)):Xt.removeChild(h.stateNode));break;case 18:Xt!==null&&(cr?(i=Xt,h=h.stateNode,i.nodeType===8?zh(i.parentNode,h):i.nodeType===1&&zh(i,h),oi(i)):zh(Xt,h.stateNode));break;case 4:x=Xt,S=cr,Xt=h.stateNode.containerInfo,cr=!0,Ns(i,c,h),Xt=x,cr=S;break;case 0:case 11:case 14:case 15:if(!rn&&(x=h.updateQueue,x!==null&&(x=x.lastEffect,x!==null))){S=x=x.next;do{var C=S,R=C.destroy;C=C.tag,R!==void 0&&((C&2)!==0||(C&4)!==0)&&Nm(h,c,R),S=S.next}while(S!==x)}Ns(i,c,h);break;case 1:if(!rn&&(fa(h,c),x=h.stateNode,typeof x.componentWillUnmount=="function"))try{x.props=h.memoizedProps,x.state=h.memoizedState,x.componentWillUnmount()}catch(B){wt(h,c,B)}Ns(i,c,h);break;case 21:Ns(i,c,h);break;case 22:h.mode&1?(rn=(x=rn)||h.memoizedState!==null,Ns(i,c,h),rn=x):Ns(i,c,h);break;default:Ns(i,c,h)}}function kv(i){var c=i.updateQueue;if(c!==null){i.updateQueue=null;var h=i.stateNode;h===null&&(h=i.stateNode=new qI),c.forEach(function(x){var S=rT.bind(null,i,x);h.has(x)||(h.add(x),x.then(S,S))})}}function dr(i,c){var h=c.deletions;if(h!==null)for(var x=0;x<h.length;x++){var S=h[x];try{var C=i,R=c,B=R;e:for(;B!==null;){switch(B.tag){case 5:Xt=B.stateNode,cr=!1;break e;case 3:Xt=B.stateNode.containerInfo,cr=!0;break e;case 4:Xt=B.stateNode.containerInfo,cr=!0;break e}B=B.return}if(Xt===null)throw Error(t(160));Nv(C,R,S),Xt=null,cr=!1;var G=S.alternate;G!==null&&(G.return=null),S.return=null}catch(re){wt(S,c,re)}}if(c.subtreeFlags&12854)for(c=c.child;c!==null;)Iv(c,i),c=c.sibling}function Iv(i,c){var h=i.alternate,x=i.flags;switch(i.tag){case 0:case 11:case 14:case 15:if(dr(c,i),Ir(i),x&4){try{Ii(3,i,i.return),Sc(3,i)}catch(ke){wt(i,i.return,ke)}try{Ii(5,i,i.return)}catch(ke){wt(i,i.return,ke)}}break;case 1:dr(c,i),Ir(i),x&512&&h!==null&&fa(h,h.return);break;case 5:if(dr(c,i),Ir(i),x&512&&h!==null&&fa(h,h.return),i.flags&32){var S=i.stateNode;try{Br(S,"")}catch(ke){wt(i,i.return,ke)}}if(x&4&&(S=i.stateNode,S!=null)){var C=i.memoizedProps,R=h!==null?h.memoizedProps:C,B=i.type,G=i.updateQueue;if(i.updateQueue=null,G!==null)try{B==="input"&&C.type==="radio"&&C.name!=null&&je(S,C),oh(B,R);var re=oh(B,C);for(R=0;R<G.length;R+=2){var de=G[R],pe=G[R+1];de==="style"?_u(S,pe):de==="dangerouslySetInnerHTML"?ps(S,pe):de==="children"?Br(S,pe):I(S,de,pe,re)}switch(B){case"input":et(S,C);break;case"textarea":xn(S,C);break;case"select":var ce=S._wrapperState.wasMultiple;S._wrapperState.wasMultiple=!!C.multiple;var be=C.value;be!=null?pn(S,!!C.multiple,be,!1):ce!==!!C.multiple&&(C.defaultValue!=null?pn(S,!!C.multiple,C.defaultValue,!0):pn(S,!!C.multiple,C.multiple?[]:"",!1))}S[gi]=C}catch(ke){wt(i,i.return,ke)}}break;case 6:if(dr(c,i),Ir(i),x&4){if(i.stateNode===null)throw Error(t(162));S=i.stateNode,C=i.memoizedProps;try{S.nodeValue=C}catch(ke){wt(i,i.return,ke)}}break;case 3:if(dr(c,i),Ir(i),x&4&&h!==null&&h.memoizedState.isDehydrated)try{oi(c.containerInfo)}catch(ke){wt(i,i.return,ke)}break;case 4:dr(c,i),Ir(i);break;case 13:dr(c,i),Ir(i),S=i.child,S.flags&8192&&(C=S.memoizedState!==null,S.stateNode.isHidden=C,!C||S.alternate!==null&&S.alternate.memoizedState!==null||(_m=Ct())),x&4&&kv(i);break;case 22:if(de=h!==null&&h.memoizedState!==null,i.mode&1?(rn=(re=rn)||de,dr(c,i),rn=re):dr(c,i),Ir(i),x&8192){if(re=i.memoizedState!==null,(i.stateNode.isHidden=re)&&!de&&(i.mode&1)!==0)for(Se=i,de=i.child;de!==null;){for(pe=Se=de;Se!==null;){switch(ce=Se,be=ce.child,ce.tag){case 0:case 11:case 14:case 15:Ii(4,ce,ce.return);break;case 1:fa(ce,ce.return);var Ce=ce.stateNode;if(typeof Ce.componentWillUnmount=="function"){x=ce,h=ce.return;try{c=x,Ce.props=c.memoizedProps,Ce.state=c.memoizedState,Ce.componentWillUnmount()}catch(ke){wt(x,h,ke)}}break;case 5:fa(ce,ce.return);break;case 22:if(ce.memoizedState!==null){Rv(pe);continue}}be!==null?(be.return=ce,Se=be):Rv(pe)}de=de.sibling}e:for(de=null,pe=i;;){if(pe.tag===5){if(de===null){de=pe;try{S=pe.stateNode,re?(C=S.style,typeof C.setProperty=="function"?C.setProperty("display","none","important"):C.display="none"):(B=pe.stateNode,G=pe.memoizedProps.style,R=G!=null&&G.hasOwnProperty("display")?G.display:null,B.style.display=eo("display",R))}catch(ke){wt(i,i.return,ke)}}}else if(pe.tag===6){if(de===null)try{pe.stateNode.nodeValue=re?"":pe.memoizedProps}catch(ke){wt(i,i.return,ke)}}else if((pe.tag!==22&&pe.tag!==23||pe.memoizedState===null||pe===i)&&pe.child!==null){pe.child.return=pe,pe=pe.child;continue}if(pe===i)break e;for(;pe.sibling===null;){if(pe.return===null||pe.return===i)break e;de===pe&&(de=null),pe=pe.return}de===pe&&(de=null),pe.sibling.return=pe.return,pe=pe.sibling}}break;case 19:dr(c,i),Ir(i),x&4&&kv(i);break;case 21:break;default:dr(c,i),Ir(i)}}function Ir(i){var c=i.flags;if(c&2){try{e:{for(var h=i.return;h!==null;){if($v(h)){var x=h;break e}h=h.return}throw Error(t(160))}switch(x.tag){case 5:var S=x.stateNode;x.flags&32&&(Br(S,""),x.flags&=-33);var C=Cv(i);Tm(i,C,S);break;case 3:case 4:var R=x.stateNode.containerInfo,B=Cv(i);Im(i,B,R);break;default:throw Error(t(161))}}catch(G){wt(i,i.return,G)}i.flags&=-3}c&4096&&(i.flags&=-4097)}function XI(i,c,h){Se=i,Tv(i)}function Tv(i,c,h){for(var x=(i.mode&1)!==0;Se!==null;){var S=Se,C=S.child;if(S.tag===22&&x){var R=S.memoizedState!==null||bc;if(!R){var B=S.alternate,G=B!==null&&B.memoizedState!==null||rn;B=bc;var re=rn;if(bc=R,(rn=G)&&!re)for(Se=S;Se!==null;)R=Se,G=R.child,R.tag===22&&R.memoizedState!==null?_v(S):G!==null?(G.return=R,Se=G):_v(S);for(;C!==null;)Se=C,Tv(C),C=C.sibling;Se=S,bc=B,rn=re}Ev(i)}else(S.subtreeFlags&8772)!==0&&C!==null?(C.return=S,Se=C):Ev(i)}}function Ev(i){for(;Se!==null;){var c=Se;if((c.flags&8772)!==0){var h=c.alternate;try{if((c.flags&8772)!==0)switch(c.tag){case 0:case 11:case 15:rn||Sc(5,c);break;case 1:var x=c.stateNode;if(c.flags&4&&!rn)if(h===null)x.componentDidMount();else{var S=c.elementType===c.type?h.memoizedProps:ur(c.type,h.memoizedProps);x.componentDidUpdate(S,h.memoizedState,x.__reactInternalSnapshotBeforeUpdate)}var C=c.updateQueue;C!==null&&R1(c,C,x);break;case 3:var R=c.updateQueue;if(R!==null){if(h=null,c.child!==null)switch(c.child.tag){case 5:h=c.child.stateNode;break;case 1:h=c.child.stateNode}R1(c,R,h)}break;case 5:var B=c.stateNode;if(h===null&&c.flags&4){h=B;var G=c.memoizedProps;switch(c.type){case"button":case"input":case"select":case"textarea":G.autoFocus&&h.focus();break;case"img":G.src&&(h.src=G.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(c.memoizedState===null){var re=c.alternate;if(re!==null){var de=re.memoizedState;if(de!==null){var pe=de.dehydrated;pe!==null&&oi(pe)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(t(163))}rn||c.flags&512&&km(c)}catch(ce){wt(c,c.return,ce)}}if(c===i){Se=null;break}if(h=c.sibling,h!==null){h.return=c.return,Se=h;break}Se=c.return}}function Rv(i){for(;Se!==null;){var c=Se;if(c===i){Se=null;break}var h=c.sibling;if(h!==null){h.return=c.return,Se=h;break}Se=c.return}}function _v(i){for(;Se!==null;){var c=Se;try{switch(c.tag){case 0:case 11:case 15:var h=c.return;try{Sc(4,c)}catch(G){wt(c,h,G)}break;case 1:var x=c.stateNode;if(typeof x.componentDidMount=="function"){var S=c.return;try{x.componentDidMount()}catch(G){wt(c,S,G)}}var C=c.return;try{km(c)}catch(G){wt(c,C,G)}break;case 5:var R=c.return;try{km(c)}catch(G){wt(c,R,G)}}}catch(G){wt(c,c.return,G)}if(c===i){Se=null;break}var B=c.sibling;if(B!==null){B.return=c.return,Se=B;break}Se=c.return}}var YI=Math.ceil,$c=k.ReactCurrentDispatcher,Em=k.ReactCurrentOwner,Yn=k.ReactCurrentBatchConfig,Ue=0,Vt=null,It=null,Yt=0,Bn=0,ha=ws(0),Ot=0,Ti=null,uo=0,Cc=0,Rm=0,Ei=null,Sn=null,_m=0,ma=1/0,Kr=null,Nc=!1,Om=null,ks=null,kc=!1,Is=null,Ic=0,Ri=0,Dm=null,Tc=-1,Ec=0;function hn(){return(Ue&6)!==0?Ct():Tc!==-1?Tc:Tc=Ct()}function Ts(i){return(i.mode&1)===0?1:(Ue&2)!==0&&Yt!==0?Yt&-Yt:DI.transition!==null?(Ec===0&&(Ec=C0()),Ec):(i=Qe,i!==0||(i=window.event,i=i===void 0?16:D0(i.type)),i)}function pr(i,c,h,x){if(50<Ri)throw Ri=0,Dm=null,Error(t(185));ei(i,h,x),((Ue&2)===0||i!==Vt)&&(i===Vt&&((Ue&2)===0&&(Cc|=h),Ot===4&&Es(i,Yt)),$n(i,x),h===1&&Ue===0&&(c.mode&1)===0&&(ma=Ct()+500,rc&&Ss()))}function $n(i,c){var h=i.callbackNode;Dk(i,c);var x=Vu(i,i===Vt?Yt:0);if(x===0)h!==null&&b0(h),i.callbackNode=null,i.callbackPriority=0;else if(c=x&-x,i.callbackPriority!==c){if(h!=null&&b0(h),c===1)i.tag===0?OI(Dv.bind(null,i)):x1(Dv.bind(null,i)),TI(function(){(Ue&6)===0&&Ss()}),h=null;else{switch(N0(x)){case 1:h=ph;break;case 4:h=S0;break;case 16:h=Au;break;case 536870912:h=$0;break;default:h=Au}h=zv(h,Ov.bind(null,i))}i.callbackPriority=c,i.callbackNode=h}}function Ov(i,c){if(Tc=-1,Ec=0,(Ue&6)!==0)throw Error(t(327));var h=i.callbackNode;if(ga()&&i.callbackNode!==h)return null;var x=Vu(i,i===Vt?Yt:0);if(x===0)return null;if((x&30)!==0||(x&i.expiredLanes)!==0||c)c=Rc(i,x);else{c=x;var S=Ue;Ue|=2;var C=Fv();(Vt!==i||Yt!==c)&&(Kr=null,ma=Ct()+500,po(i,c));do try{JI();break}catch(B){Av(i,B)}while(!0);Qh(),$c.current=C,Ue=S,It!==null?c=0:(Vt=null,Yt=0,c=Ot)}if(c!==0){if(c===2&&(S=fh(i),S!==0&&(x=S,c=Am(i,S))),c===1)throw h=Ti,po(i,0),Es(i,x),$n(i,Ct()),h;if(c===6)Es(i,x);else{if(S=i.current.alternate,(x&30)===0&&!QI(S)&&(c=Rc(i,x),c===2&&(C=fh(i),C!==0&&(x=C,c=Am(i,C))),c===1))throw h=Ti,po(i,0),Es(i,x),$n(i,Ct()),h;switch(i.finishedWork=S,i.finishedLanes=x,c){case 0:case 1:throw Error(t(345));case 2:fo(i,Sn,Kr);break;case 3:if(Es(i,x),(x&130023424)===x&&(c=_m+500-Ct(),10<c)){if(Vu(i,0)!==0)break;if(S=i.suspendedLanes,(S&x)!==x){hn(),i.pingedLanes|=i.suspendedLanes&S;break}i.timeoutHandle=Mh(fo.bind(null,i,Sn,Kr),c);break}fo(i,Sn,Kr);break;case 4:if(Es(i,x),(x&4194240)===x)break;for(c=i.eventTimes,S=-1;0<x;){var R=31-ar(x);C=1<<R,R=c[R],R>S&&(S=R),x&=~C}if(x=S,x=Ct()-x,x=(120>x?120:480>x?480:1080>x?1080:1920>x?1920:3e3>x?3e3:4320>x?4320:1960*YI(x/1960))-x,10<x){i.timeoutHandle=Mh(fo.bind(null,i,Sn,Kr),x);break}fo(i,Sn,Kr);break;case 5:fo(i,Sn,Kr);break;default:throw Error(t(329))}}}return $n(i,Ct()),i.callbackNode===h?Ov.bind(null,i):null}function Am(i,c){var h=Ei;return i.current.memoizedState.isDehydrated&&(po(i,c).flags|=256),i=Rc(i,c),i!==2&&(c=Sn,Sn=h,c!==null&&Fm(c)),i}function Fm(i){Sn===null?Sn=i:Sn.push.apply(Sn,i)}function QI(i){for(var c=i;;){if(c.flags&16384){var h=c.updateQueue;if(h!==null&&(h=h.stores,h!==null))for(var x=0;x<h.length;x++){var S=h[x],C=S.getSnapshot;S=S.value;try{if(!ir(C(),S))return!1}catch{return!1}}}if(h=c.child,c.subtreeFlags&16384&&h!==null)h.return=c,c=h;else{if(c===i)break;for(;c.sibling===null;){if(c.return===null||c.return===i)return!0;c=c.return}c.sibling.return=c.return,c=c.sibling}}return!0}function Es(i,c){for(c&=~Rm,c&=~Cc,i.suspendedLanes|=c,i.pingedLanes&=~c,i=i.expirationTimes;0<c;){var h=31-ar(c),x=1<<h;i[h]=-1,c&=~x}}function Dv(i){if((Ue&6)!==0)throw Error(t(327));ga();var c=Vu(i,0);if((c&1)===0)return $n(i,Ct()),null;var h=Rc(i,c);if(i.tag!==0&&h===2){var x=fh(i);x!==0&&(c=x,h=Am(i,x))}if(h===1)throw h=Ti,po(i,0),Es(i,c),$n(i,Ct()),h;if(h===6)throw Error(t(345));return i.finishedWork=i.current.alternate,i.finishedLanes=c,fo(i,Sn,Kr),$n(i,Ct()),null}function Pm(i,c){var h=Ue;Ue|=1;try{return i(c)}finally{Ue=h,Ue===0&&(ma=Ct()+500,rc&&Ss())}}function co(i){Is!==null&&Is.tag===0&&(Ue&6)===0&&ga();var c=Ue;Ue|=1;var h=Yn.transition,x=Qe;try{if(Yn.transition=null,Qe=1,i)return i()}finally{Qe=x,Yn.transition=h,Ue=c,(Ue&6)===0&&Ss()}}function Lm(){Bn=ha.current,dt(ha)}function po(i,c){i.finishedWork=null,i.finishedLanes=0;var h=i.timeoutHandle;if(h!==-1&&(i.timeoutHandle=-1,II(h)),It!==null)for(h=It.return;h!==null;){var x=h;switch(jh(x),x.tag){case 1:x=x.type.childContextTypes,x!=null&&tc();break;case 3:da(),dt(vn),dt(en),om();break;case 5:rm(x);break;case 4:da();break;case 13:dt(gt);break;case 19:dt(gt);break;case 10:Zh(x.type._context);break;case 22:case 23:Lm()}h=h.return}if(Vt=i,It=i=Rs(i.current,null),Yt=Bn=c,Ot=0,Ti=null,Rm=Cc=uo=0,Sn=Ei=null,ao!==null){for(c=0;c<ao.length;c++)if(h=ao[c],x=h.interleaved,x!==null){h.interleaved=null;var S=x.next,C=h.pending;if(C!==null){var R=C.next;C.next=S,x.next=R}h.pending=x}ao=null}return i}function Av(i,c){do{var h=It;try{if(Qh(),fc.current=yc,hc){for(var x=yt.memoizedState;x!==null;){var S=x.queue;S!==null&&(S.pending=null),x=x.next}hc=!1}if(lo=0,Lt=_t=yt=null,Si=!1,$i=0,Em.current=null,h===null||h.return===null){Ot=1,Ti=c,It=null;break}e:{var C=i,R=h.return,B=h,G=c;if(c=Yt,B.flags|=32768,G!==null&&typeof G=="object"&&typeof G.then=="function"){var re=G,de=B,pe=de.tag;if((de.mode&1)===0&&(pe===0||pe===11||pe===15)){var ce=de.alternate;ce?(de.updateQueue=ce.updateQueue,de.memoizedState=ce.memoizedState,de.lanes=ce.lanes):(de.updateQueue=null,de.memoizedState=null)}var be=ov(R);if(be!==null){be.flags&=-257,av(be,R,B,C,c),be.mode&1&&sv(C,re,c),c=be,G=re;var Ce=c.updateQueue;if(Ce===null){var ke=new Set;ke.add(G),c.updateQueue=ke}else Ce.add(G);break e}else{if((c&1)===0){sv(C,re,c),Vm();break e}G=Error(t(426))}}else if(ft&&B.mode&1){var Nt=ov(R);if(Nt!==null){(Nt.flags&65536)===0&&(Nt.flags|=256),av(Nt,R,B,C,c),Xh(pa(G,B));break e}}C=G=pa(G,B),Ot!==4&&(Ot=2),Ei===null?Ei=[C]:Ei.push(C),C=R;do{switch(C.tag){case 3:C.flags|=65536,c&=-c,C.lanes|=c;var ee=nv(C,G,c);E1(C,ee);break e;case 1:B=G;var q=C.type,te=C.stateNode;if((C.flags&128)===0&&(typeof q.getDerivedStateFromError=="function"||te!==null&&typeof te.componentDidCatch=="function"&&(ks===null||!ks.has(te)))){C.flags|=65536,c&=-c,C.lanes|=c;var fe=rv(C,B,c);E1(C,fe);break e}}C=C.return}while(C!==null)}Lv(h)}catch(Ie){c=Ie,It===h&&h!==null&&(It=h=h.return);continue}break}while(!0)}function Fv(){var i=$c.current;return $c.current=yc,i===null?yc:i}function Vm(){(Ot===0||Ot===3||Ot===2)&&(Ot=4),Vt===null||(uo&268435455)===0&&(Cc&268435455)===0||Es(Vt,Yt)}function Rc(i,c){var h=Ue;Ue|=2;var x=Fv();(Vt!==i||Yt!==c)&&(Kr=null,po(i,c));do try{ZI();break}catch(S){Av(i,S)}while(!0);if(Qh(),Ue=h,$c.current=x,It!==null)throw Error(t(261));return Vt=null,Yt=0,Ot}function ZI(){for(;It!==null;)Pv(It)}function JI(){for(;It!==null&&!Ck();)Pv(It)}function Pv(i){var c=Mv(i.alternate,i,Bn);i.memoizedProps=i.pendingProps,c===null?Lv(i):It=c,Em.current=null}function Lv(i){var c=i;do{var h=c.alternate;if(i=c.return,(c.flags&32768)===0){if(h=HI(h,c,Bn),h!==null){It=h;return}}else{if(h=jI(h,c),h!==null){h.flags&=32767,It=h;return}if(i!==null)i.flags|=32768,i.subtreeFlags=0,i.deletions=null;else{Ot=6,It=null;return}}if(c=c.sibling,c!==null){It=c;return}It=c=i}while(c!==null);Ot===0&&(Ot=5)}function fo(i,c,h){var x=Qe,S=Yn.transition;try{Yn.transition=null,Qe=1,eT(i,c,h,x)}finally{Yn.transition=S,Qe=x}return null}function eT(i,c,h,x){do ga();while(Is!==null);if((Ue&6)!==0)throw Error(t(327));h=i.finishedWork;var S=i.finishedLanes;if(h===null)return null;if(i.finishedWork=null,i.finishedLanes=0,h===i.current)throw Error(t(177));i.callbackNode=null,i.callbackPriority=0;var C=h.lanes|h.childLanes;if(Ak(i,C),i===Vt&&(It=Vt=null,Yt=0),(h.subtreeFlags&2064)===0&&(h.flags&2064)===0||kc||(kc=!0,zv(Au,function(){return ga(),null})),C=(h.flags&15990)!==0,(h.subtreeFlags&15990)!==0||C){C=Yn.transition,Yn.transition=null;var R=Qe;Qe=1;var B=Ue;Ue|=4,Em.current=null,KI(i,h),Iv(h,i),wI(Vh),zu=!!Lh,Vh=Lh=null,i.current=h,XI(h),Nk(),Ue=B,Qe=R,Yn.transition=C}else i.current=h;if(kc&&(kc=!1,Is=i,Ic=S),C=i.pendingLanes,C===0&&(ks=null),Tk(h.stateNode),$n(i,Ct()),c!==null)for(x=i.onRecoverableError,h=0;h<c.length;h++)S=c[h],x(S.value,{componentStack:S.stack,digest:S.digest});if(Nc)throw Nc=!1,i=Om,Om=null,i;return(Ic&1)!==0&&i.tag!==0&&ga(),C=i.pendingLanes,(C&1)!==0?i===Dm?Ri++:(Ri=0,Dm=i):Ri=0,Ss(),null}function ga(){if(Is!==null){var i=N0(Ic),c=Yn.transition,h=Qe;try{if(Yn.transition=null,Qe=16>i?16:i,Is===null)var x=!1;else{if(i=Is,Is=null,Ic=0,(Ue&6)!==0)throw Error(t(331));var S=Ue;for(Ue|=4,Se=i.current;Se!==null;){var C=Se,R=C.child;if((Se.flags&16)!==0){var B=C.deletions;if(B!==null){for(var G=0;G<B.length;G++){var re=B[G];for(Se=re;Se!==null;){var de=Se;switch(de.tag){case 0:case 11:case 15:Ii(8,de,C)}var pe=de.child;if(pe!==null)pe.return=de,Se=pe;else for(;Se!==null;){de=Se;var ce=de.sibling,be=de.return;if(Sv(de),de===re){Se=null;break}if(ce!==null){ce.return=be,Se=ce;break}Se=be}}}var Ce=C.alternate;if(Ce!==null){var ke=Ce.child;if(ke!==null){Ce.child=null;do{var Nt=ke.sibling;ke.sibling=null,ke=Nt}while(ke!==null)}}Se=C}}if((C.subtreeFlags&2064)!==0&&R!==null)R.return=C,Se=R;else e:for(;Se!==null;){if(C=Se,(C.flags&2048)!==0)switch(C.tag){case 0:case 11:case 15:Ii(9,C,C.return)}var ee=C.sibling;if(ee!==null){ee.return=C.return,Se=ee;break e}Se=C.return}}var q=i.current;for(Se=q;Se!==null;){R=Se;var te=R.child;if((R.subtreeFlags&2064)!==0&&te!==null)te.return=R,Se=te;else e:for(R=q;Se!==null;){if(B=Se,(B.flags&2048)!==0)try{switch(B.tag){case 0:case 11:case 15:Sc(9,B)}}catch(Ie){wt(B,B.return,Ie)}if(B===R){Se=null;break e}var fe=B.sibling;if(fe!==null){fe.return=B.return,Se=fe;break e}Se=B.return}}if(Ue=S,Ss(),$r&&typeof $r.onPostCommitFiberRoot=="function")try{$r.onPostCommitFiberRoot(Fu,i)}catch{}x=!0}return x}finally{Qe=h,Yn.transition=c}}return!1}function Vv(i,c,h){c=pa(h,c),c=nv(i,c,1),i=Cs(i,c,1),c=hn(),i!==null&&(ei(i,1,c),$n(i,c))}function wt(i,c,h){if(i.tag===3)Vv(i,i,h);else for(;c!==null;){if(c.tag===3){Vv(c,i,h);break}else if(c.tag===1){var x=c.stateNode;if(typeof c.type.getDerivedStateFromError=="function"||typeof x.componentDidCatch=="function"&&(ks===null||!ks.has(x))){i=pa(h,i),i=rv(c,i,1),c=Cs(c,i,1),i=hn(),c!==null&&(ei(c,1,i),$n(c,i));break}}c=c.return}}function tT(i,c,h){var x=i.pingCache;x!==null&&x.delete(c),c=hn(),i.pingedLanes|=i.suspendedLanes&h,Vt===i&&(Yt&h)===h&&(Ot===4||Ot===3&&(Yt&130023424)===Yt&&500>Ct()-_m?po(i,0):Rm|=h),$n(i,c)}function Bv(i,c){c===0&&((i.mode&1)===0?c=1:(c=Lu,Lu<<=1,(Lu&130023424)===0&&(Lu=4194304)));var h=hn();i=Hr(i,c),i!==null&&(ei(i,c,h),$n(i,h))}function nT(i){var c=i.memoizedState,h=0;c!==null&&(h=c.retryLane),Bv(i,h)}function rT(i,c){var h=0;switch(i.tag){case 13:var x=i.stateNode,S=i.memoizedState;S!==null&&(h=S.retryLane);break;case 19:x=i.stateNode;break;default:throw Error(t(314))}x!==null&&x.delete(c),Bv(i,h)}var Mv;Mv=function(i,c,h){if(i!==null)if(i.memoizedProps!==c.pendingProps||vn.current)bn=!0;else{if((i.lanes&h)===0&&(c.flags&128)===0)return bn=!1,GI(i,c,h);bn=(i.flags&131072)!==0}else bn=!1,ft&&(c.flags&1048576)!==0&&v1(c,oc,c.index);switch(c.lanes=0,c.tag){case 2:var x=c.type;wc(i,c),i=c.pendingProps;var S=sa(c,en.current);ca(c,h),S=lm(null,c,x,i,S,h);var C=um();return c.flags|=1,typeof S=="object"&&S!==null&&typeof S.render=="function"&&S.$$typeof===void 0?(c.tag=1,c.memoizedState=null,c.updateQueue=null,wn(x)?(C=!0,nc(c)):C=!1,c.memoizedState=S.state!==null&&S.state!==void 0?S.state:null,tm(c),S.updater=xc,c.stateNode=S,S._reactInternals=c,mm(c,x,i,h),c=vm(null,c,x,!0,C,h)):(c.tag=0,ft&&C&&Hh(c),fn(null,c,S,h),c=c.child),c;case 16:x=c.elementType;e:{switch(wc(i,c),i=c.pendingProps,S=x._init,x=S(x._payload),c.type=x,S=c.tag=oT(x),i=ur(x,i),S){case 0:c=xm(null,c,x,i,h);break e;case 1:c=pv(null,c,x,i,h);break e;case 11:c=iv(null,c,x,i,h);break e;case 14:c=lv(null,c,x,ur(x.type,i),h);break e}throw Error(t(306,x,""))}return c;case 0:return x=c.type,S=c.pendingProps,S=c.elementType===x?S:ur(x,S),xm(i,c,x,S,h);case 1:return x=c.type,S=c.pendingProps,S=c.elementType===x?S:ur(x,S),pv(i,c,x,S,h);case 3:e:{if(fv(c),i===null)throw Error(t(387));x=c.pendingProps,C=c.memoizedState,S=C.element,T1(i,c),dc(c,x,null,h);var R=c.memoizedState;if(x=R.element,C.isDehydrated)if(C={element:x,isDehydrated:!1,cache:R.cache,pendingSuspenseBoundaries:R.pendingSuspenseBoundaries,transitions:R.transitions},c.updateQueue.baseState=C,c.memoizedState=C,c.flags&256){S=pa(Error(t(423)),c),c=hv(i,c,x,h,S);break e}else if(x!==S){S=pa(Error(t(424)),c),c=hv(i,c,x,h,S);break e}else for(Vn=vs(c.stateNode.containerInfo.firstChild),Ln=c,ft=!0,lr=null,h=k1(c,null,x,h),c.child=h;h;)h.flags=h.flags&-3|4096,h=h.sibling;else{if(ia(),x===S){c=qr(i,c,h);break e}fn(i,c,x,h)}c=c.child}return c;case 5:return _1(c),i===null&&Kh(c),x=c.type,S=c.pendingProps,C=i!==null?i.memoizedProps:null,R=S.children,Bh(x,S)?R=null:C!==null&&Bh(x,C)&&(c.flags|=32),dv(i,c),fn(i,c,R,h),c.child;case 6:return i===null&&Kh(c),null;case 13:return mv(i,c,h);case 4:return nm(c,c.stateNode.containerInfo),x=c.pendingProps,i===null?c.child=la(c,null,x,h):fn(i,c,x,h),c.child;case 11:return x=c.type,S=c.pendingProps,S=c.elementType===x?S:ur(x,S),iv(i,c,x,S,h);case 7:return fn(i,c,c.pendingProps,h),c.child;case 8:return fn(i,c,c.pendingProps.children,h),c.child;case 12:return fn(i,c,c.pendingProps.children,h),c.child;case 10:e:{if(x=c.type._context,S=c.pendingProps,C=c.memoizedProps,R=S.value,ut(lc,x._currentValue),x._currentValue=R,C!==null)if(ir(C.value,R)){if(C.children===S.children&&!vn.current){c=qr(i,c,h);break e}}else for(C=c.child,C!==null&&(C.return=c);C!==null;){var B=C.dependencies;if(B!==null){R=C.child;for(var G=B.firstContext;G!==null;){if(G.context===x){if(C.tag===1){G=jr(-1,h&-h),G.tag=2;var re=C.updateQueue;if(re!==null){re=re.shared;var de=re.pending;de===null?G.next=G:(G.next=de.next,de.next=G),re.pending=G}}C.lanes|=h,G=C.alternate,G!==null&&(G.lanes|=h),Jh(C.return,h,c),B.lanes|=h;break}G=G.next}}else if(C.tag===10)R=C.type===c.type?null:C.child;else if(C.tag===18){if(R=C.return,R===null)throw Error(t(341));R.lanes|=h,B=R.alternate,B!==null&&(B.lanes|=h),Jh(R,h,c),R=C.sibling}else R=C.child;if(R!==null)R.return=C;else for(R=C;R!==null;){if(R===c){R=null;break}if(C=R.sibling,C!==null){C.return=R.return,R=C;break}R=R.return}C=R}fn(i,c,S.children,h),c=c.child}return c;case 9:return S=c.type,x=c.pendingProps.children,ca(c,h),S=Kn(S),x=x(S),c.flags|=1,fn(i,c,x,h),c.child;case 14:return x=c.type,S=ur(x,c.pendingProps),S=ur(x.type,S),lv(i,c,x,S,h);case 15:return uv(i,c,c.type,c.pendingProps,h);case 17:return x=c.type,S=c.pendingProps,S=c.elementType===x?S:ur(x,S),wc(i,c),c.tag=1,wn(x)?(i=!0,nc(c)):i=!1,ca(c,h),ev(c,x,S),mm(c,x,S,h),vm(null,c,x,!0,i,h);case 19:return yv(i,c,h);case 22:return cv(i,c,h)}throw Error(t(156,c.tag))};function zv(i,c){return w0(i,c)}function sT(i,c,h,x){this.tag=i,this.key=h,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=c,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=x,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Qn(i,c,h,x){return new sT(i,c,h,x)}function Bm(i){return i=i.prototype,!(!i||!i.isReactComponent)}function oT(i){if(typeof i=="function")return Bm(i)?1:0;if(i!=null){if(i=i.$$typeof,i===W)return 11;if(i===Q)return 14}return 2}function Rs(i,c){var h=i.alternate;return h===null?(h=Qn(i.tag,c,i.key,i.mode),h.elementType=i.elementType,h.type=i.type,h.stateNode=i.stateNode,h.alternate=i,i.alternate=h):(h.pendingProps=c,h.type=i.type,h.flags=0,h.subtreeFlags=0,h.deletions=null),h.flags=i.flags&14680064,h.childLanes=i.childLanes,h.lanes=i.lanes,h.child=i.child,h.memoizedProps=i.memoizedProps,h.memoizedState=i.memoizedState,h.updateQueue=i.updateQueue,c=i.dependencies,h.dependencies=c===null?null:{lanes:c.lanes,firstContext:c.firstContext},h.sibling=i.sibling,h.index=i.index,h.ref=i.ref,h}function _c(i,c,h,x,S,C){var R=2;if(x=i,typeof i=="function")Bm(i)&&(R=1);else if(typeof i=="string")R=5;else e:switch(i){case A:return ho(h.children,S,C,c);case V:R=8,S|=8;break;case P:return i=Qn(12,h,c,S|2),i.elementType=P,i.lanes=C,i;case j:return i=Qn(13,h,c,S),i.elementType=j,i.lanes=C,i;case Y:return i=Qn(19,h,c,S),i.elementType=Y,i.lanes=C,i;case ne:return Oc(h,S,C,c);default:if(typeof i=="object"&&i!==null)switch(i.$$typeof){case F:R=10;break e;case E:R=9;break e;case W:R=11;break e;case Q:R=14;break e;case Z:R=16,x=null;break e}throw Error(t(130,i==null?i:typeof i,""))}return c=Qn(R,h,c,S),c.elementType=i,c.type=x,c.lanes=C,c}function ho(i,c,h,x){return i=Qn(7,i,x,c),i.lanes=h,i}function Oc(i,c,h,x){return i=Qn(22,i,x,c),i.elementType=ne,i.lanes=h,i.stateNode={isHidden:!1},i}function Mm(i,c,h){return i=Qn(6,i,null,c),i.lanes=h,i}function zm(i,c,h){return c=Qn(4,i.children!==null?i.children:[],i.key,c),c.lanes=h,c.stateNode={containerInfo:i.containerInfo,pendingChildren:null,implementation:i.implementation},c}function aT(i,c,h,x,S){this.tag=c,this.containerInfo=i,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=hh(0),this.expirationTimes=hh(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=hh(0),this.identifierPrefix=x,this.onRecoverableError=S,this.mutableSourceEagerHydrationData=null}function Wm(i,c,h,x,S,C,R,B,G){return i=new aT(i,c,h,B,G),c===1?(c=1,C===!0&&(c|=8)):c=0,C=Qn(3,null,null,c),i.current=C,C.stateNode=i,C.memoizedState={element:x,isDehydrated:h,cache:null,transitions:null,pendingSuspenseBoundaries:null},tm(C),i}function iT(i,c,h){var x=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:O,key:x==null?null:""+x,children:i,containerInfo:c,implementation:h}}function Wv(i){if(!i)return bs;i=i._reactInternals;e:{if(to(i)!==i||i.tag!==1)throw Error(t(170));var c=i;do{switch(c.tag){case 3:c=c.stateNode.context;break e;case 1:if(wn(c.type)){c=c.stateNode.__reactInternalMemoizedMergedChildContext;break e}}c=c.return}while(c!==null);throw Error(t(171))}if(i.tag===1){var h=i.type;if(wn(h))return g1(i,h,c)}return c}function Uv(i,c,h,x,S,C,R,B,G){return i=Wm(h,x,!0,i,S,C,R,B,G),i.context=Wv(null),h=i.current,x=hn(),S=Ts(h),C=jr(x,S),C.callback=c??null,Cs(h,C,S),i.current.lanes=S,ei(i,S,x),$n(i,x),i}function Dc(i,c,h,x){var S=c.current,C=hn(),R=Ts(S);return h=Wv(h),c.context===null?c.context=h:c.pendingContext=h,c=jr(C,R),c.payload={element:i},x=x===void 0?null:x,x!==null&&(c.callback=x),i=Cs(S,c,R),i!==null&&(pr(i,S,R,C),cc(i,S,R)),R}function Ac(i){if(i=i.current,!i.child)return null;switch(i.child.tag){case 5:return i.child.stateNode;default:return i.child.stateNode}}function Gv(i,c){if(i=i.memoizedState,i!==null&&i.dehydrated!==null){var h=i.retryLane;i.retryLane=h!==0&&h<c?h:c}}function Um(i,c){Gv(i,c),(i=i.alternate)&&Gv(i,c)}function lT(){return null}var Hv=typeof reportError=="function"?reportError:function(i){console.error(i)};function Gm(i){this._internalRoot=i}Fc.prototype.render=Gm.prototype.render=function(i){var c=this._internalRoot;if(c===null)throw Error(t(409));Dc(i,c,null,null)},Fc.prototype.unmount=Gm.prototype.unmount=function(){var i=this._internalRoot;if(i!==null){this._internalRoot=null;var c=i.containerInfo;co(function(){Dc(null,i,null,null)}),c[zr]=null}};function Fc(i){this._internalRoot=i}Fc.prototype.unstable_scheduleHydration=function(i){if(i){var c=T0();i={blockedOn:null,target:i,priority:c};for(var h=0;h<gs.length&&c!==0&&c<gs[h].priority;h++);gs.splice(h,0,i),h===0&&_0(i)}};function Hm(i){return!(!i||i.nodeType!==1&&i.nodeType!==9&&i.nodeType!==11)}function Pc(i){return!(!i||i.nodeType!==1&&i.nodeType!==9&&i.nodeType!==11&&(i.nodeType!==8||i.nodeValue!==" react-mount-point-unstable "))}function jv(){}function uT(i,c,h,x,S){if(S){if(typeof x=="function"){var C=x;x=function(){var re=Ac(R);C.call(re)}}var R=Uv(c,x,i,0,null,!1,!1,"",jv);return i._reactRootContainer=R,i[zr]=R.current,hi(i.nodeType===8?i.parentNode:i),co(),R}for(;S=i.lastChild;)i.removeChild(S);if(typeof x=="function"){var B=x;x=function(){var re=Ac(G);B.call(re)}}var G=Wm(i,0,!1,null,null,!1,!1,"",jv);return i._reactRootContainer=G,i[zr]=G.current,hi(i.nodeType===8?i.parentNode:i),co(function(){Dc(c,G,h,x)}),G}function Lc(i,c,h,x,S){var C=h._reactRootContainer;if(C){var R=C;if(typeof S=="function"){var B=S;S=function(){var G=Ac(R);B.call(G)}}Dc(c,R,i,S)}else R=uT(h,c,i,S,x);return Ac(R)}k0=function(i){switch(i.tag){case 3:var c=i.stateNode;if(c.current.memoizedState.isDehydrated){var h=Ja(c.pendingLanes);h!==0&&(mh(c,h|1),$n(c,Ct()),(Ue&6)===0&&(ma=Ct()+500,Ss()))}break;case 13:co(function(){var x=Hr(i,1);if(x!==null){var S=hn();pr(x,i,1,S)}}),Um(i,1)}},gh=function(i){if(i.tag===13){var c=Hr(i,134217728);if(c!==null){var h=hn();pr(c,i,134217728,h)}Um(i,134217728)}},I0=function(i){if(i.tag===13){var c=Ts(i),h=Hr(i,c);if(h!==null){var x=hn();pr(h,i,c,x)}Um(i,c)}},T0=function(){return Qe},E0=function(i,c){var h=Qe;try{return Qe=i,c()}finally{Qe=h}},lh=function(i,c,h){switch(c){case"input":if(et(i,h),c=h.name,h.type==="radio"&&c!=null){for(h=i;h.parentNode;)h=h.parentNode;for(h=h.querySelectorAll("input[name="+JSON.stringify(""+c)+'][type="radio"]'),c=0;c<h.length;c++){var x=h[c];if(x!==i&&x.form===i.form){var S=ec(x);if(!S)throw Error(t(90));We(x),et(x,S)}}}break;case"textarea":xn(i,h);break;case"select":c=h.value,c!=null&&pn(i,!!h.multiple,c,!1)}},f0=Pm,h0=co;var cT={usingClientEntryPoint:!1,Events:[yi,na,ec,d0,p0,Pm]},_i={findFiberByHostInstance:no,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},dT={bundleType:_i.bundleType,version:_i.version,rendererPackageName:_i.rendererPackageName,rendererConfig:_i.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(i){return i=x0(i),i===null?null:i.stateNode},findFiberByHostInstance:_i.findFiberByHostInstance||lT,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Vc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Vc.isDisabled&&Vc.supportsFiber)try{Fu=Vc.inject(dT),$r=Vc}catch{}}return Cn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=cT,Cn.createPortal=function(i,c){var h=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Hm(c))throw Error(t(200));return iT(i,c,null,h)},Cn.createRoot=function(i,c){if(!Hm(i))throw Error(t(299));var h=!1,x="",S=Hv;return c!=null&&(c.unstable_strictMode===!0&&(h=!0),c.identifierPrefix!==void 0&&(x=c.identifierPrefix),c.onRecoverableError!==void 0&&(S=c.onRecoverableError)),c=Wm(i,1,!1,null,null,h,!1,x,S),i[zr]=c.current,hi(i.nodeType===8?i.parentNode:i),new Gm(c)},Cn.findDOMNode=function(i){if(i==null)return null;if(i.nodeType===1)return i;var c=i._reactInternals;if(c===void 0)throw typeof i.render=="function"?Error(t(188)):(i=Object.keys(i).join(","),Error(t(268,i)));return i=x0(c),i=i===null?null:i.stateNode,i},Cn.flushSync=function(i){return co(i)},Cn.hydrate=function(i,c,h){if(!Pc(c))throw Error(t(200));return Lc(null,i,c,!0,h)},Cn.hydrateRoot=function(i,c,h){if(!Hm(i))throw Error(t(405));var x=h!=null&&h.hydratedSources||null,S=!1,C="",R=Hv;if(h!=null&&(h.unstable_strictMode===!0&&(S=!0),h.identifierPrefix!==void 0&&(C=h.identifierPrefix),h.onRecoverableError!==void 0&&(R=h.onRecoverableError)),c=Uv(c,null,i,1,h??null,S,!1,C,R),i[zr]=c.current,hi(i),x)for(i=0;i<x.length;i++)h=x[i],S=h._getVersion,S=S(h._source),c.mutableSourceEagerHydrationData==null?c.mutableSourceEagerHydrationData=[h,S]:c.mutableSourceEagerHydrationData.push(h,S);return new Fc(c)},Cn.render=function(i,c,h){if(!Pc(c))throw Error(t(200));return Lc(null,i,c,!1,h)},Cn.unmountComponentAtNode=function(i){if(!Pc(i))throw Error(t(40));return i._reactRootContainer?(co(function(){Lc(null,null,i,!1,function(){i._reactRootContainer=null,i[zr]=null})}),!0):!1},Cn.unstable_batchedUpdates=Pm,Cn.unstable_renderSubtreeIntoContainer=function(i,c,h,x){if(!Pc(h))throw Error(t(200));if(i==null||i._reactInternals===void 0)throw Error(t(38));return Lc(i,c,h,!1,x)},Cn.version="18.3.1-next-f1338f8080-20240426",Cn}var ew;function wT(){if(ew)return Km.exports;ew=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(e){console.error(e)}}return n(),Km.exports=vT(),Km.exports}var tw;function bT(){if(tw)return Bc;tw=1;var n=wT();return Bc.createRoot=n.createRoot,Bc.hydrateRoot=n.hydrateRoot,Bc}var ST=bT(),Qc={exports:{}},$T=Qc.exports,nw;function CT(){return nw||(nw=1,function(n,e){(function(r,s){n.exports=s(Od())})($T,function(t){return function(r){var s={};function o(a){if(s[a])return s[a].exports;var l=s[a]={i:a,l:!1,exports:{}};return r[a].call(l.exports,l,l.exports,o),l.l=!0,l.exports}return o.m=r,o.c=s,o.d=function(a,l,u){o.o(a,l)||Object.defineProperty(a,l,{enumerable:!0,get:u})},o.r=function(a){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})},o.t=function(a,l){if(l&1&&(a=o(a)),l&8||l&4&&typeof a=="object"&&a&&a.__esModule)return a;var u=Object.create(null);if(o.r(u),Object.defineProperty(u,"default",{enumerable:!0,value:a}),l&2&&typeof a!="string")for(var d in a)o.d(u,d,(function(p){return a[p]}).bind(null,d));return u},o.n=function(a){var l=a&&a.__esModule?function(){return a.default}:function(){return a};return o.d(l,"a",l),l},o.o=function(a,l){return Object.prototype.hasOwnProperty.call(a,l)},o.p="",o(o.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(r,s,o){o.r(s);var a=o("react"),l=function(){var m=function(g,y){return m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(v,w){v.__proto__=w}||function(v,w){for(var b in w)w.hasOwnProperty(b)&&(v[b]=w[b])},m(g,y)};return function(g,y){m(g,y);function v(){this.constructor=g}g.prototype=y===null?Object.create(y):(v.prototype=y.prototype,new v)}}(),u=function(){return u=Object.assign||function(m){for(var g,y=1,v=arguments.length;y<v;y++){g=arguments[y];for(var w in g)Object.prototype.hasOwnProperty.call(g,w)&&(m[w]=g[w])}return m},u.apply(this,arguments)},d=function(m,g){var y={};for(var v in m)Object.prototype.hasOwnProperty.call(m,v)&&g.indexOf(v)<0&&(y[v]=m[v]);if(m!=null&&typeof Object.getOwnPropertySymbols=="function")for(var w=0,v=Object.getOwnPropertySymbols(m);w<v.length;w++)g.indexOf(v[w])<0&&Object.prototype.propertyIsEnumerable.call(m,v[w])&&(y[v[w]]=m[v[w]]);return y};(function(){typeof window>"u"||(navigator.mediaDevices===void 0&&(navigator.mediaDevices={}),navigator.mediaDevices.getUserMedia===void 0&&(navigator.mediaDevices.getUserMedia=function(g){var y=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return y?new Promise(function(v,w){y.call(navigator,g,v,w)}):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}))})();function p(){return!!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)}var f=function(m){l(g,m);function g(y){var v=m.call(this,y)||this;return v.canvas=null,v.ctx=null,v.requestUserMediaId=0,v.unmounted=!1,v.state={hasUserMedia:!1},v}return g.prototype.componentDidMount=function(){var y=this,v=y.state,w=y.props;if(this.unmounted=!1,!p()){w.onUserMediaError("getUserMedia not supported");return}v.hasUserMedia||this.requestUserMedia(),w.children&&typeof w.children!="function"&&console.warn("children must be a function")},g.prototype.componentDidUpdate=function(y){var v=this.props;if(!p()){v.onUserMediaError("getUserMedia not supported");return}var w=JSON.stringify(y.audioConstraints)!==JSON.stringify(v.audioConstraints),b=JSON.stringify(y.videoConstraints)!==JSON.stringify(v.videoConstraints),$=y.minScreenshotWidth!==v.minScreenshotWidth,I=y.minScreenshotHeight!==v.minScreenshotHeight;(b||$||I)&&(this.canvas=null,this.ctx=null),(w||b)&&(this.stopAndCleanup(),this.requestUserMedia())},g.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},g.stopMediaStream=function(y){y&&(y.getVideoTracks&&y.getAudioTracks?(y.getVideoTracks().map(function(v){y.removeTrack(v),v.stop()}),y.getAudioTracks().map(function(v){y.removeTrack(v),v.stop()})):y.stop())},g.prototype.stopAndCleanup=function(){var y=this.state;y.hasUserMedia&&(g.stopMediaStream(this.stream),y.src&&window.URL.revokeObjectURL(y.src))},g.prototype.getScreenshot=function(y){var v=this,w=v.state,b=v.props;if(!w.hasUserMedia)return null;var $=this.getCanvas(y);return $&&$.toDataURL(b.screenshotFormat,b.screenshotQuality)},g.prototype.getCanvas=function(y){var v=this,w=v.state,b=v.props;if(!this.video||!w.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var $=this.video.videoWidth,I=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var k=$/I;$=b.minScreenshotWidth||this.video.clientWidth,I=$/k,b.minScreenshotHeight&&I<b.minScreenshotHeight&&(I=b.minScreenshotHeight,$=I*k)}this.canvas=document.createElement("canvas"),this.canvas.width=(y==null?void 0:y.width)||$,this.canvas.height=(y==null?void 0:y.height)||I,this.ctx=this.canvas.getContext("2d")}var T=this,O=T.ctx,A=T.canvas;return O&&A&&(A.width=(y==null?void 0:y.width)||A.width,A.height=(y==null?void 0:y.height)||A.height,b.mirrored&&(O.translate(A.width,0),O.scale(-1,1)),O.imageSmoothingEnabled=b.imageSmoothing,O.drawImage(this.video,0,0,(y==null?void 0:y.width)||A.width,(y==null?void 0:y.height)||A.height),b.mirrored&&(O.scale(-1,1),O.translate(-A.width,0))),A},g.prototype.requestUserMedia=function(){var y=this,v=this.props,w=function(I,k){var T={video:typeof k<"u"?k:!0};v.audio&&(T.audio=typeof I<"u"?I:!0),y.requestUserMediaId++;var O=y.requestUserMediaId;navigator.mediaDevices.getUserMedia(T).then(function(A){y.unmounted||O!==y.requestUserMediaId?g.stopMediaStream(A):y.handleUserMedia(null,A)}).catch(function(A){y.handleUserMedia(A)})};if("mediaDevices"in navigator)w(v.audioConstraints,v.videoConstraints);else{var b=function(I){return{optional:[{sourceId:I}]}},$=function(I){var k=I.deviceId;return typeof k=="string"?k:Array.isArray(k)&&k.length>0?k[0]:typeof k=="object"&&k.ideal?k.ideal:null};MediaStreamTrack.getSources(function(I){var k=null,T=null;I.forEach(function(V){V.kind==="audio"?k=V.id:V.kind==="video"&&(T=V.id)});var O=$(v.audioConstraints);O&&(k=O);var A=$(v.videoConstraints);A&&(T=A),w(b(k),b(T))})}},g.prototype.handleUserMedia=function(y,v){var w=this.props;if(y||!v){this.setState({hasUserMedia:!1}),w.onUserMediaError(y);return}this.stream=v;try{this.video&&(this.video.srcObject=v),this.setState({hasUserMedia:!0})}catch{this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(v)})}w.onUserMedia(v)},g.prototype.render=function(){var y=this,v=this,w=v.state,b=v.props,$=b.audio;b.forceScreenshotSourceSize;var I=b.disablePictureInPicture;b.onUserMedia,b.onUserMediaError,b.screenshotFormat,b.screenshotQuality,b.minScreenshotWidth,b.minScreenshotHeight,b.audioConstraints,b.videoConstraints,b.imageSmoothing;var k=b.mirrored,T=b.style,O=T===void 0?{}:T,A=b.children,V=d(b,["audio","forceScreenshotSourceSize","disablePictureInPicture","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),P=k?u(u({},O),{transform:(O.transform||"")+" scaleX(-1)"}):O,F={getScreenshot:this.getScreenshot.bind(this)};return a.createElement(a.Fragment,null,a.createElement("video",u({autoPlay:!0,disablePictureInPicture:I,src:w.src,muted:!$,playsInline:!0,ref:function(E){y.video=E},style:P},V)),A&&A(F))},g.defaultProps={audio:!1,disablePictureInPicture:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},g}(a.Component);s.default=f},react:function(r,s){r.exports=t}}).default})}(Qc)),Qc.exports}var NT=CT();const kT=Xg(NT);var vb={color:void 0,size:void 0,className:void 0,style:void 0,attr:void 0},rw=Co.createContext&&Co.createContext(vb),IT=["attr","size","title"];function TT(n,e){if(n==null)return{};var t=ET(n,e),r,s;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(s=0;s<o.length;s++)r=o[s],!(e.indexOf(r)>=0)&&Object.prototype.propertyIsEnumerable.call(n,r)&&(t[r]=n[r])}return t}function ET(n,e){if(n==null)return{};var t={};for(var r in n)if(Object.prototype.hasOwnProperty.call(n,r)){if(e.indexOf(r)>=0)continue;t[r]=n[r]}return t}function ud(){return ud=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},ud.apply(this,arguments)}function sw(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter(function(s){return Object.getOwnPropertyDescriptor(n,s).enumerable})),t.push.apply(t,r)}return t}function cd(n){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};e%2?sw(Object(t),!0).forEach(function(r){RT(n,r,t[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):sw(Object(t)).forEach(function(r){Object.defineProperty(n,r,Object.getOwnPropertyDescriptor(t,r))})}return n}function RT(n,e,t){return e=_T(e),e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function _T(n){var e=OT(n,"string");return typeof e=="symbol"?e:e+""}function OT(n,e){if(typeof n!="object"||!n)return n;var t=n[Symbol.toPrimitive];if(t!==void 0){var r=t.call(n,e);if(typeof r!="object")return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return(e==="string"?String:Number)(n)}function wb(n){return n&&n.map((e,t)=>Co.createElement(e.tag,cd({key:t},e.attr),wb(e.child)))}function Bo(n){return e=>Co.createElement(DT,ud({attr:cd({},n.attr)},e),wb(n.child))}function DT(n){var e=t=>{var{attr:r,size:s,title:o}=n,a=TT(n,IT),l=s||t.size||"1em",u;return t.className&&(u=t.className),n.className&&(u=(u?u+" ":"")+n.className),Co.createElement("svg",ud({stroke:"currentColor",fill:"currentColor",strokeWidth:"0"},t.attr,r,a,{className:u,style:cd(cd({color:n.color||t.color},t.style),n.style),height:l,width:l,xmlns:"http://www.w3.org/2000/svg"}),o&&Co.createElement("title",null,o),n.children)};return rw!==void 0?Co.createElement(rw.Consumer,null,t=>e(t)):e(vb)}function AT(n){return Bo({attr:{viewBox:"0 0 24 24"},child:[{tag:"path",attr:{fill:"none",d:"M0 0h24v24H0V0zm0 0h24v24H0V0z"},child:[]},{tag:"path",attr:{d:"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"},child:[]}]})(n)}function FT(n){return Bo({attr:{viewBox:"0 0 24 24"},child:[{tag:"path",attr:{fill:"none",d:"M0 0h24v24H0V0z"},child:[]},{tag:"path",attr:{d:"M11 7h2v2h-2V7zm0 4h2v6h-2v-6zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"},child:[]}]})(n)}const PT=({prediction:n,setEntries:e,removePredictionToShow:t,darkMode:r})=>{const s=()=>{const o=JSON.parse(localStorage.getItem("entries"))||[],a=o.length>0?[n,...o]:[n];localStorage.setItem("entries",JSON.stringify(a)),t(n.id),e(a)};return ge.jsxs("div",{className:`container flex lg:flex-row backdrop-blur-md justify-between items-center px-[24px] py-[16px] rounded-xl ${r?"bg-[#1B1B1B]/75":"bg-slate-100/75"}`,children:[ge.jsxs("div",{className:"info__containter flex flex-col lg:flex-row items-left lg:items-center gap-[4px] lg:gap-[16px]",children:[ge.jsx(FT,{className:"text-[#888888] text-[48px]"}),ge.jsxs("div",{className:"flex-column",children:[ge.jsx("span",{className:"text-[#888888] text-[16px] font-semibold",children:"Object detected"}),ge.jsxs("h4",{className:`text-[20px] font-bold ${r?"text-[#FFFFFF]":"text-[#2F2F2F]"}`,children:[n.objectName.charAt(0).toUpperCase()+n.objectName.slice(1)," "]})]})]}),ge.jsxs("div",{className:"user-choice__container flex flex-col lg:flex-row gap-[8px] lg:gap-4",children:[ge.jsxs("button",{className:"flex flex-row items-center text-[20px] font-semibold bg-[#00A158] hover:bg-white rounded-[12px] text-white  hover:text-[#00A150] gap-[12px] px-[12px] py-[4px] group cursor-pointer transition",onClick:s,children:[ge.jsx(AT,{className:"group-hover:text-[#00A150] text-white text-[20px]"}),ge.jsx("p",{className:"lg:text-[20px]",children:"Save it"})]}),ge.jsx("button",{className:`text-[20px] font-semibold rounded-[12px] transition p-2 cursor-pointer ${r?"bg-transparent hover:bg-white text-white hover:text-[#1B1B1B]":"bg-transparent hover:bg-[#2F2F2F] text-[#2F2F2F] hover:text-slate-200"}`,onClick:o=>{console.log("azeaze"),t(n.id)},children:"Discard"})]})]})},LT=n=>{const[e,t]=Tt.useState(null),[r,s]=Tt.useState(null),o=Tt.useRef(null);let a=0;const l=1.5;Tt.useEffect(()=>{u()},[]);const u=()=>{t(Date.now()),s(Date.now()),clearInterval(o.current),o.current=setInterval(()=>{s(Date.now)},10),a=0},d=async()=>{e!=null&&r!=null&&(a=(r-e)/1e3,a>=l&&(u(),n.onTimerTriggerReached()))};return n.requestPending||d(),ge.jsx(ge.Fragment,{children:ge.jsx("h3",{children:a})})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VT=1e-7,BT=1e-4;class Qg{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Dd{refCount(e){return Nn("refCount")}incRef(e){return Nn("incRef")}timerAvailable(){return!0}time(e){return Nn("time")}read(e){return Nn("read")}readSync(e){return Nn("readSync")}readToGPU(e,t){return Nn("readToGPU")}numDataIds(){return Nn("numDataIds")}disposeData(e,t){return Nn("disposeData")}write(e,t,r){return Nn("write")}move(e,t,r,s,o){return Nn("move")}createTensorFromGPUData(e,t,r){return Nn("createTensorFromGPUData")}memory(){return Nn("memory")}floatPrecision(){return Nn("floatPrecision")}epsilon(){return this.floatPrecision()===32?VT:BT}dispose(){return Nn("dispose")}}function Nn(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bb(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Zr(n,e,t)}function MT(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,r=0;for(;t>0;)r=Math.random()*t|0,t--,Zr(n,t,r),Zr(e,t,r)}function Vs(n,e,t){return Math.max(n,Math.min(e,t))}function Ad(n){return n%2===0?n:n+1}function Zr(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function Sb(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function zT(n,e){const t=Math.random();return e*t+(1-t)*n}function WT(n,e){let t=0;for(let r=0;r<n.length;r++){const s=Number(n[r])-Number(e[r]);t+=s*s}return t}function D(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Ut(n,e,t=""){D(Ze(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Mo(n){D(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function oe(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function UT(n){return n.length===0}function $b(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function Ze(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function To(n){return n%1===0}function GT(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function dd(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function HT(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return bb(e),e}function No(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function pg(n,e=s=>0,t,r){return new Promise((s,o)=>{let a=0;const l=()=>{if(n()){s();return}a++;const u=e(a);if(t!=null&&a>=t){o();return}r!=null?r(l,u):setTimeout(l,u)};l()})}function Zg(n,e){let t=1,r=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const s=n.slice();return s[r]=e/t,s}function ze(n,e){const t=e.length;return n=n==null?e.map((r,s)=>s):[].concat(n),D(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),D(n.every(r=>To(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function as(n,e){const t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:ze(e,n).sort();let a=0;for(let l=0;l<n.length;++l){if(o!=null){if(o[a]===l&&n[l]!==1)throw new Error(`Can't squeeze axis ${l} since its dim '${n[l]}' is not 1`);(o[a]==null||o[a]>l)&&n[l]===1&&(t.push(n[l]),r.push(l)),o[a]<=l&&a++}n[l]!==1&&(t.push(n[l]),r.push(l))}return{newShape:t,keptDims:r}}function Ft(n,e){return vt(n,e)}function vt(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function Cb(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function Nb(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Jg(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function zi(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function kb(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Tr(n){return typeof n=="string"||n instanceof String}function Ib(n){return typeof n=="boolean"}function Tb(n){return typeof n=="number"}function zo(n){return Array.isArray(n)?zo(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Tb(n)?"float32":Tr(n)?"string":Ib(n)?"bool":"float32"}function Bs(n){return!!(n&&n.constructor&&n.call&&n.apply)}function pd(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Te(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function Eb(n,e,t,r=!1){const s=new Array;if(e.length===1){const o=e[0]*(r?2:1);for(let a=0;a<o;a++)s[a]=t[n+a]}else{const o=e[0],a=e.slice(1),l=a.reduce((u,d)=>u*d)*(r?2:1);for(let u=0;u<o;u++)s[u]=Eb(n+u*l,a,t,r)}return s}function Un(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((s,o)=>s*o)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return Eb(0,n,e,t)}function Rb(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function Fd(n,e){const t=Wt(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function Wt(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function ey(n,e){const t=n.reduce((r,s)=>r*s,1);if(e==null||e==="float32")return Un(n,new Float32Array(t));if(e==="int32")return Un(n,new Int32Array(t));if(e==="bool")return Un(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Dn(n){n.forEach(e=>{D(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function yr(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function Wo(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}function Ms(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ow="tfjsflags";class _b{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=jT,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ms(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);ow in e&&e[ow].split(",").forEach(r=>{const[s,o]=r.split(":");this.urlFlags[s]=KT(s,o)})}}function jT(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>(qT(e,r[0],r[1]),r.join("="))),e}function qT(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function KT(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function J(){return ty}let ty=null;function XT(n){ty=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qm;function Ob(){if(Qm==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Qm=n}return Qm}function YT(){const n=Ob();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function ny(n,e){const t=YT();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const Pd="Abs",il="Acos",ll="Acosh",Va="Add",Ld="AddN",Vd="All",Bd="Any",Md="ArgMax",zd="ArgMin",ul="Asin",cl="Asinh",dl="Atan",pl="Atanh",fl="Atan2",Wd="AvgPool",ry="AvgPoolGrad",Ud="AvgPool3D",sy="AvgPool3DGrad",Gd="BatchMatMul",Hd="BatchToSpaceND",jd="Bincount",hl="BitwiseAnd",QT="BroadcastTo",qd="BroadcastArgs",ml="Cast",gl="Ceil",yl="ClipByValue",Kd="Complex",Xd="ComplexAbs",Yd="Concat",Qd="Conv2D",Zd="Conv2DBackpropFilter",Jd="Conv2DBackpropInput",ep="Conv3D",oy="Conv3DBackpropFilterV2",tp="Conv3DBackpropInputV2",xl="Cos",vl="Cosh",np="Cumprod",rp="Cumsum",sp="CropAndResize",op="DenseBincount",ap="DepthToSpace",ip="DepthwiseConv2dNative",lp="DepthwiseConv2dNativeBackpropFilter",up="DepthwiseConv2dNativeBackpropInput",cp="Diag",dp="Dilation2D",fg="Dilation2DBackpropInput",hg="Dilation2DBackpropFilter",pp="Draw",wl="RealDiv",fp="Einsum",bl="Elu",ay="EluGrad",Sl="Erf",$l="Equal",Cl="Exp",hp="ExpandDims",Nl="Expm1",mp="FFT",gp="Fill",yp="FlipLeftRight",kl="Floor",Il="FloorDiv",xp="FusedBatchNorm",vp="GatherV2",wp="GatherNd",Tl="Greater",El="GreaterEqual",Rl="Identity",bp="IFFT",Sp="Imag",_l="IsFinite",Ol="IsInf",Dl="IsNan",$p="LeakyRelu",Al="Less",Fl="LessEqual",Cp="LinSpace",Pl="Log",Ll="Log1p",Vl="LogicalAnd",Bl="LogicalNot",Ml="LogicalOr",ZT="LogicalXor",JT="LogSoftmax",eE="LowerBound",Np="LRN",iy="LRNGrad",tE="MatrixBandPart",kp="Max",zl="Maximum",Ip="MaxPool",ly="MaxPoolGrad",Tp="MaxPool3D",uy="MaxPool3DGrad",Ep="MaxPoolWithArgmax",Rp="Mean",_p="Min",Wl="Minimum",Op="MirrorPad",Ul="Mod",Dp="Multinomial",Gl="Multiply",Ap="Neg",Hl="NotEqual",Fp="NonMaxSuppressionV3",Pp="NonMaxSuppressionV4",Lp="NonMaxSuppressionV5",Vp="OnesLike",Bp="OneHot",Mp="Pack",zp="PadV2",nE="Pool",jl="Pow",Wp="Prelu",Up="Prod",Gp="RaggedGather",Hp="RaggedRange",jp="RaggedTensorToTensor",qp="Range",Kp="Real",ql="Reciprocal",Kl="Relu",Xp="Reshape",Yp="ResizeNearestNeighbor",cy="ResizeNearestNeighborGrad",Qp="ResizeBilinear",dy="ResizeBilinearGrad",Xl="Relu6",Zp="Reverse",Yl="Round",Ql="Rsqrt",Jp="ScatterNd",ef="TensorScatterUpdate",tf="SearchSorted",nf="Select",Zl="Selu",rf="Slice",Jl="Sin",eu="Sinh",tu="Sign",nu="Sigmoid",ru="Softplus",su="Sqrt",sf="Sum",of="SpaceToBatchND",af="SplitV",lf="Softmax",uf="SparseFillEmptyRows",cf="SparseReshape",df="SparseSegmentMean",pf="SparseSegmentSum",ff="SparseToDense",ou="SquaredDifference",py="Square",au="StaticRegexReplace",hf="StridedSlice",mf="StringNGrams",gf="StringSplit",yf="StringToHashBucketFast",iu="Sub",lu="Tan",uu="Tanh",cu="Tile",xf="TopK",vf="Transform",wa="Transpose",wf="Unique",bf="Unpack",Sf="UnsortedSegmentSum",rE="UpperBound",$f="ZerosLike",du="Step",fd="FromPixels",Cf="RotateWithOffset",Wi="_FusedMatMul",Ui="FusedConv2D",Gi="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mn(...n){J().getBool("IS_TEST")||J().getBool("PROD")||console.warn(...n)}function sE(...n){J().getBool("IS_TEST")||J().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ka=ny("kernelRegistry",()=>new Map),Hi=ny("gradRegistry",()=>new Map);function ji(n,e){const t=fy(n,e);return ka.get(t)}function mg(n){return Hi.get(n)}function hd(n){const e=ka.entries(),t=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[o,a]=s,[l]=o.split("_");l===n&&t.push(a)}return t}function Nf(n){const{kernelName:e,backendName:t}=n,r=fy(e,t);ka.has(r)&&Mn(`The kernel '${e}' for backend '${t}' is already registered`),ka.set(r,n)}function oE(n){const{kernelName:e}=n;Hi.has(e)&&J().getBool("DEBUG")&&Mn(`Overriding the gradient for '${e}'`),Hi.set(e,n)}function aE(n,e){const t=fy(n,e);if(!ka.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);ka.delete(t)}function iE(n){if(!Hi.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Hi.delete(n)}function lE(n,e){hd(n).forEach(r=>{const s=Object.assign({},r,{backendName:e});Nf(s)})}function fy(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Db(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Zm,aw;function uE(){if(aw)return Zm;aw=1,Zm=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(F,E,W){this.low=F|0,this.high=E|0,this.unsigned=!!W}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(F){return(F&&F.__isLong__)===!0}e.isLong=t;var r={},s={};function o(F,E){var W,j,Y;return E?(F>>>=0,(Y=0<=F&&F<256)&&(j=s[F],j)?j:(W=l(F,(F|0)<0?-1:0,!0),Y&&(s[F]=W),W)):(F|=0,(Y=-128<=F&&F<128)&&(j=r[F],j)?j:(W=l(F,F<0?-1:0,!1),Y&&(r[F]=W),W))}e.fromInt=o;function a(F,E){if(isNaN(F))return E?$:b;if(E){if(F<0)return $;if(F>=y)return A}else{if(F<=-9223372036854776e3)return V;if(F+1>=v)return O}return F<0?a(-F,E).neg():l(F%g|0,F/g|0,E)}e.fromNumber=a;function l(F,E,W){return new e(F,E,W)}e.fromBits=l;var u=Math.pow;function d(F,E,W){if(F.length===0)throw Error("empty string");if(F==="NaN"||F==="Infinity"||F==="+Infinity"||F==="-Infinity")return b;if(typeof E=="number"?(W=E,E=!1):E=!!E,W=W||10,W<2||36<W)throw RangeError("radix");var j;if((j=F.indexOf("-"))>0)throw Error("interior hyphen");if(j===0)return d(F.substring(1),E,W).neg();for(var Y=a(u(W,8)),Q=b,Z=0;Z<F.length;Z+=8){var ne=Math.min(8,F.length-Z),U=parseInt(F.substring(Z,Z+ne),W);if(ne<8){var K=a(u(W,ne));Q=Q.mul(K).add(a(U))}else Q=Q.mul(Y),Q=Q.add(a(U))}return Q.unsigned=E,Q}e.fromString=d;function p(F,E){return typeof F=="number"?a(F,E):typeof F=="string"?d(F,E):l(F.low,F.high,typeof E=="boolean"?E:F.unsigned)}e.fromValue=p;var f=65536,m=1<<24,g=f*f,y=g*g,v=y/2,w=o(m),b=o(0);e.ZERO=b;var $=o(0,!0);e.UZERO=$;var I=o(1);e.ONE=I;var k=o(1,!0);e.UONE=k;var T=o(-1);e.NEG_ONE=T;var O=l(-1,2147483647,!1);e.MAX_VALUE=O;var A=l(-1,-1,!0);e.MAX_UNSIGNED_VALUE=A;var V=l(0,-2147483648,!1);e.MIN_VALUE=V;var P=e.prototype;return P.toInt=function(){return this.unsigned?this.low>>>0:this.low},P.toNumber=function(){return this.unsigned?(this.high>>>0)*g+(this.low>>>0):this.high*g+(this.low>>>0)},P.toString=function(E){if(E=E||10,E<2||36<E)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(V)){var W=a(E),j=this.div(W),Y=j.mul(W).sub(this);return j.toString(E)+Y.toInt().toString(E)}else return"-"+this.neg().toString(E);for(var Q=a(u(E,6),this.unsigned),Z=this,ne="";;){var U=Z.div(Q),K=Z.sub(U.mul(Q)).toInt()>>>0,X=K.toString(E);if(Z=U,Z.isZero())return X+ne;for(;X.length<6;)X="0"+X;ne=""+X+ne}},P.getHighBits=function(){return this.high},P.getHighBitsUnsigned=function(){return this.high>>>0},P.getLowBits=function(){return this.low},P.getLowBitsUnsigned=function(){return this.low>>>0},P.getNumBitsAbs=function(){if(this.isNegative())return this.eq(V)?64:this.neg().getNumBitsAbs();for(var E=this.high!=0?this.high:this.low,W=31;W>0&&(E&1<<W)==0;W--);return this.high!=0?W+33:W+1},P.isZero=function(){return this.high===0&&this.low===0},P.eqz=P.isZero,P.isNegative=function(){return!this.unsigned&&this.high<0},P.isPositive=function(){return this.unsigned||this.high>=0},P.isOdd=function(){return(this.low&1)===1},P.isEven=function(){return(this.low&1)===0},P.equals=function(E){return t(E)||(E=p(E)),this.unsigned!==E.unsigned&&this.high>>>31===1&&E.high>>>31===1?!1:this.high===E.high&&this.low===E.low},P.eq=P.equals,P.notEquals=function(E){return!this.eq(E)},P.neq=P.notEquals,P.ne=P.notEquals,P.lessThan=function(E){return this.comp(E)<0},P.lt=P.lessThan,P.lessThanOrEqual=function(E){return this.comp(E)<=0},P.lte=P.lessThanOrEqual,P.le=P.lessThanOrEqual,P.greaterThan=function(E){return this.comp(E)>0},P.gt=P.greaterThan,P.greaterThanOrEqual=function(E){return this.comp(E)>=0},P.gte=P.greaterThanOrEqual,P.ge=P.greaterThanOrEqual,P.compare=function(E){if(t(E)||(E=p(E)),this.eq(E))return 0;var W=this.isNegative(),j=E.isNegative();return W&&!j?-1:!W&&j?1:this.unsigned?E.high>>>0>this.high>>>0||E.high===this.high&&E.low>>>0>this.low>>>0?-1:1:this.sub(E).isNegative()?-1:1},P.comp=P.compare,P.negate=function(){return!this.unsigned&&this.eq(V)?V:this.not().add(I)},P.neg=P.negate,P.add=function(E){t(E)||(E=p(E));var W=this.high>>>16,j=this.high&65535,Y=this.low>>>16,Q=this.low&65535,Z=E.high>>>16,ne=E.high&65535,U=E.low>>>16,K=E.low&65535,X=0,L=0,H=0,se=0;return se+=Q+K,H+=se>>>16,se&=65535,H+=Y+U,L+=H>>>16,H&=65535,L+=j+ne,X+=L>>>16,L&=65535,X+=W+Z,X&=65535,l(H<<16|se,X<<16|L,this.unsigned)},P.subtract=function(E){return t(E)||(E=p(E)),this.add(E.neg())},P.sub=P.subtract,P.multiply=function(E){if(this.isZero())return b;if(t(E)||(E=p(E)),n){var W=n.mul(this.low,this.high,E.low,E.high);return l(W,n.get_high(),this.unsigned)}if(E.isZero())return b;if(this.eq(V))return E.isOdd()?V:b;if(E.eq(V))return this.isOdd()?V:b;if(this.isNegative())return E.isNegative()?this.neg().mul(E.neg()):this.neg().mul(E).neg();if(E.isNegative())return this.mul(E.neg()).neg();if(this.lt(w)&&E.lt(w))return a(this.toNumber()*E.toNumber(),this.unsigned);var j=this.high>>>16,Y=this.high&65535,Q=this.low>>>16,Z=this.low&65535,ne=E.high>>>16,U=E.high&65535,K=E.low>>>16,X=E.low&65535,L=0,H=0,se=0,ae=0;return ae+=Z*X,se+=ae>>>16,ae&=65535,se+=Q*X,H+=se>>>16,se&=65535,se+=Z*K,H+=se>>>16,se&=65535,H+=Y*X,L+=H>>>16,H&=65535,H+=Q*K,L+=H>>>16,H&=65535,H+=Z*U,L+=H>>>16,H&=65535,L+=j*X+Y*K+Q*U+Z*ne,L&=65535,l(se<<16|ae,L<<16|H,this.unsigned)},P.mul=P.multiply,P.divide=function(E){if(t(E)||(E=p(E)),E.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&E.low===-1&&E.high===-1)return this;var W=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,E.low,E.high);return l(W,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?$:b;var j,Y,Q;if(this.unsigned){if(E.unsigned||(E=E.toUnsigned()),E.gt(this))return $;if(E.gt(this.shru(1)))return k;Q=$}else{if(this.eq(V)){if(E.eq(I)||E.eq(T))return V;if(E.eq(V))return I;var Z=this.shr(1);return j=Z.div(E).shl(1),j.eq(b)?E.isNegative()?I:T:(Y=this.sub(E.mul(j)),Q=j.add(Y.div(E)),Q)}else if(E.eq(V))return this.unsigned?$:b;if(this.isNegative())return E.isNegative()?this.neg().div(E.neg()):this.neg().div(E).neg();if(E.isNegative())return this.div(E.neg()).neg();Q=b}for(Y=this;Y.gte(E);){j=Math.max(1,Math.floor(Y.toNumber()/E.toNumber()));for(var ne=Math.ceil(Math.log(j)/Math.LN2),U=ne<=48?1:u(2,ne-48),K=a(j),X=K.mul(E);X.isNegative()||X.gt(Y);)j-=U,K=a(j,this.unsigned),X=K.mul(E);K.isZero()&&(K=I),Q=Q.add(K),Y=Y.sub(X)}return Q},P.div=P.divide,P.modulo=function(E){if(t(E)||(E=p(E)),n){var W=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,E.low,E.high);return l(W,n.get_high(),this.unsigned)}return this.sub(this.div(E).mul(E))},P.mod=P.modulo,P.rem=P.modulo,P.not=function(){return l(~this.low,~this.high,this.unsigned)},P.and=function(E){return t(E)||(E=p(E)),l(this.low&E.low,this.high&E.high,this.unsigned)},P.or=function(E){return t(E)||(E=p(E)),l(this.low|E.low,this.high|E.high,this.unsigned)},P.xor=function(E){return t(E)||(E=p(E)),l(this.low^E.low,this.high^E.high,this.unsigned)},P.shiftLeft=function(E){return t(E)&&(E=E.toInt()),(E&=63)===0?this:E<32?l(this.low<<E,this.high<<E|this.low>>>32-E,this.unsigned):l(0,this.low<<E-32,this.unsigned)},P.shl=P.shiftLeft,P.shiftRight=function(E){return t(E)&&(E=E.toInt()),(E&=63)===0?this:E<32?l(this.low>>>E|this.high<<32-E,this.high>>E,this.unsigned):l(this.high>>E-32,this.high>=0?0:-1,this.unsigned)},P.shr=P.shiftRight,P.shiftRightUnsigned=function(E){if(t(E)&&(E=E.toInt()),E&=63,E===0)return this;var W=this.high;if(E<32){var j=this.low;return l(j>>>E|W<<32-E,W>>>E,this.unsigned)}else return E===32?l(W,0,this.unsigned):l(W>>>E-32,0,this.unsigned)},P.shru=P.shiftRightUnsigned,P.shr_u=P.shiftRightUnsigned,P.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},P.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},P.toBytes=function(E){return E?this.toBytesLE():this.toBytesBE()},P.toBytesLE=function(){var E=this.high,W=this.low;return[W&255,W>>>8&255,W>>>16&255,W>>>24,E&255,E>>>8&255,E>>>16&255,E>>>24]},P.toBytesBE=function(){var E=this.high,W=this.low;return[E>>>24,E>>>16&255,E>>>8&255,E&255,W>>>24,W>>>16&255,W>>>8&255,W&255]},e.fromBytes=function(E,W,j){return j?e.fromBytesLE(E,W):e.fromBytesBE(E,W)},e.fromBytesLE=function(E,W){return new e(E[0]|E[1]<<8|E[2]<<16|E[3]<<24,E[4]|E[5]<<8|E[6]<<16|E[7]<<24,W)},e.fromBytesBE=function(E,W){return new e(E[4]<<24|E[5]<<16|E[6]<<8|E[7],E[0]<<24|E[1]<<16|E[2]<<8|E[3],W)},Zm}var Ab=uE();const Fb=Xg(Ab),cE=fT({__proto__:null,default:Fb},[Ab]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xo=Fb||cE;function pu(n){return xo.fromString(n,!0,16)}const Pb=pu("c3a5c85c97cb3127"),yo=pu("b492b66fbe98f273"),on=pu("9ae16a3b2f90404f");function gg(n){return n.xor(n.shru(47))}function Lb(n,e,t){const r=n.slice(e,e+t);return xo.fromBytes(Array.from(r),!0,!0)}function st(n,e){return Lb(n,e,8)}function iw(n,e){return Lb(n,e,4)}function Dt(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Ls(n,e,t=pu("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let s=e.xor(r).mul(t);return s=s.xor(s.shru(47)),s=s.mul(t),s}function dE(n,e,t,r,s,o){s=s.add(n),o=Dt(o.add(s).add(r),21);const a=s;return s=s.add(e),s=s.add(t),o=o.add(Dt(s,44)),[s.add(r),o.add(a)]}function Mc(n,e,t,r){return dE(st(n,e),st(n,e+8),st(n,e+16),st(n,e+24),t,r)}function pE(n,e=n.length){if(e>=8){const t=on.add(e*2),r=st(n,0).add(on),s=st(n,e-8),o=Dt(s,37).mul(t).add(r),a=Dt(r,25).add(s).mul(t);return Ls(o,a,t)}if(e>=4){const t=on.add(e*2),r=iw(n,0);return Ls(r.shl(3).add(e),iw(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],s=n[e-1],o=t+(r<<8),a=e+(s<<2);return gg(on.mul(o).xor(Pb.mul(a))).mul(on)}return on}function fE(n,e=n.length){const t=on.add(e*2),r=st(n,0).mul(yo),s=st(n,8),o=st(n,e-8).mul(t),a=st(n,e-16).mul(on);return Ls(Dt(r.add(s),43).add(Dt(o,30)).add(a),r.add(Dt(s.add(on),18)).add(o),t)}function hE(n,e=n.length){const t=on.add(e*2),r=st(n,0).mul(on),s=st(n,8),o=st(n,e-8).mul(t),a=st(n,e-16).mul(on),l=Dt(r.add(s),43).add(Dt(o,30)).add(a),u=Ls(l,r.add(Dt(s.add(on),18)).add(o),t),d=st(n,16).mul(t),p=st(n,24),f=l.add(st(n,e-32)).mul(t),m=u.add(st(n,e-24)).mul(t);return Ls(Dt(d.add(p),43).add(Dt(f,30)).add(m),d.add(Dt(p.add(r),18)).add(f),t)}function Vb(n,e=n.length){const t=xo.fromNumber(81,!0);if(e<=32)return e<=16?pE(n,e):fE(n,e);if(e<=64)return hE(n,e);let r=t,s=t.mul(yo).add(113),o=gg(s.mul(on).add(113)).mul(on),a=[xo.UZERO,xo.UZERO],l=[xo.UZERO,xo.UZERO];r=r.mul(on).add(st(n,0));let u=0;const d=(e-1>>6)*64,p=d+(e-1&63)-63;do r=Dt(r.add(s).add(a[0]).add(st(n,u+8)),37).mul(yo),s=Dt(s.add(a[1]).add(st(n,u+48)),42).mul(yo),r=r.xor(l[1]),s=s.add(a[0]).add(st(n,u+40)),o=Dt(o.add(l[0]),33).mul(yo),a=Mc(n,u,a[1].mul(yo),r.add(l[0])),l=Mc(n,u+32,o.add(l[1]),s.add(st(n,u+16))),[o,r]=[r,o],u+=64;while(u!==d);const f=yo.add(o.and(255).shl(1));return u=p,l[0]=l[0].add(e-1&63),a[0]=a[0].add(l[0]),l[0]=l[0].add(a[0]),r=Dt(r.add(s).add(a[0]).add(st(n,u+8)),37).mul(f),s=Dt(s.add(a[1]).add(st(n,u+48)),42).mul(f),r=r.xor(l[1].mul(9)),s=s.add(a[0].mul(9).add(st(n,u+40))),o=Dt(o.add(l[0]),33).mul(f),a=Mc(n,u,a[1].mul(f),r.add(l[0])),l=Mc(n,u+32,o.add(l[1]),s.add(st(n,u+16))),[o,r]=[r,o],Ls(Ls(a[0],l[0],f).add(gg(s).mul(Pb)).add(o),Ls(a[1],l[1],f).add(r),f)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function is(n,e){return e==="string"?Rr(n):js([n],e)}function mE(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function js(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Or(n)),J().getBool("DEBUG")&&Cb(n,e),mE(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function En(){return J().platform.now()}function gE(n,e){return J().platform.fetch(n,e)}function Rr(n,e="utf-8"){return e=e||"utf-8",J().platform.encode(n,e)}function ns(n,e="utf-8"){return e=e||"utf-8",J().platform.decode(n,e)}function At(n){return J().platform.isTypedArray!=null?J().platform.isTypedArray(n):Db(n)}function Or(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||Ms(n)||n==null||At(n)&&t)e.push(n);else if(Array.isArray(n)||At(n))for(let r=0;r<n.length;++r)Or(n[r],e,t);else{let r=-1;for(const s of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)Or(n[s],e,t)}return e}const yE=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:Ze,arraysEqualWithNull:$b,assert:D,assertNonNegativeIntegerDimensions:Dn,assertNonNull:Mo,assertShapesMatch:Ut,bytesFromStringArray:kb,bytesPerElement:zi,checkConversionForErrors:Cb,clamp:Vs,computeStrides:Te,convertBackendValuesAndArrayBuffer:Rb,createScalarValue:is,createShuffledIndices:HT,decodeString:ns,distSquared:WT,encodeString:Rr,fetch:gE,fingerPrint64:Vb,flatten:Or,getArrayFromDType:vt,getTypedArrayFromDType:Ft,hasEncodingLoss:Jg,hexToLong:pu,indexToLoc:Wo,inferDtype:zo,inferFromImplicitShape:Zg,isBoolean:Ib,isFunction:Bs,isInt:To,isNumber:Tb,isPromise:Ms,isScalarShape:UT,isString:Tr,isTypedArray:At,isValidDtype:Nb,locToIndex:yr,makeOnesTypedArray:Fd,makeZerosNestedTypedArray:ey,makeZerosTypedArray:Wt,nearestDivisor:pd,nearestLargerEven:Ad,now:En,parseAxisParam:ze,randUniform:zT,repeatedTry:pg,rightPad:No,shuffle:bb,shuffleCombo:MT,sizeFromShape:oe,sizeToSquarishShape:dd,squeezeShape:as,sum:Sb,swap:Zr,tanh:GT,toNestedArray:Un,toTypedArray:js},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xE{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new wE)}profileKernel(e,t,r){let s;const o=()=>{s=r()};let a;const l=En();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const d of s)d.dataSync();a=Promise.resolve({kernelMs:En()-l})}if(J().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let d=0;d<s.length;d++){const p=s[d];p.data().then(f=>{vE(f,p.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(d=>d.kernelMs),extraInfo:a.then(d=>d.getExtraProfileInfo!=null?d.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:s,inputs:o,extraInfo:a}=e;r.forEach(l=>{Promise.all([l.data(),s,a]).then(u=>{this.logger.logKernelProfile(t,l,u[0],u[1],o,u[2])})})}}function vE(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${t}'`),!0}return!1}class wE{logKernelProfile(e,t,r,s,o,a){const l=typeof s=="number"?No(`${s}ms`,9):s.error,u=No(e,25),d=t.rank,p=t.size,f=No(t.shape.toString(),14);let m="";for(const g in o){const y=o[g];if(y!=null){const v=y.shape||t.shape,w=v.length;m+=`${g}: ${w}D ${w>0?v:""} `}}console.log(`%c${u}	%c${l}	%c${d}D ${f}	%c${p}	%c${m}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(n,e,t){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<n.length;u++){const d=n[u],p=d.inputs;for(const f in p){const m=p[f];let g=!1;for(let y=0;y<e.length;y++)if(r[m.id]){d.outputs.forEach(v=>r[v.id]=!0),g=!0,s[d.id]=!0;break}if(g)break}}const o={};o[t.id]=!0;const a={};for(let u=n.length-1;u>=0;u--){const d=n[u],p=d.inputs;for(let f=0;f<d.outputs.length;f++)if(o[d.outputs[f].id]){for(const m in p)o[p[m].id]=!0,a[d.id]=!0;break}}const l=[];for(let u=0;u<n.length;u++){const d=n[u];if(s[d.id]&&a[d.id]){const p={};for(const m in d.inputs){const g=d.inputs[m];r[g.id]&&(p[m]=g)}const f=Object.assign({},d);f.inputs=p,f.outputs=d.outputs,l.push(f)}}return l}function SE(n,e,t,r){for(let s=e.length-1;s>=0;s--){const o=e[s],a=[];if(o.outputs.forEach(u=>{const d=n[u.id];d!=null?a.push(d):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const l=o.gradient(a);for(const u in o.inputs){if(!(u in l))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(l)}.`);const d=t(()=>l[u]());if(d.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${d.dtype}'`);const p=o.inputs[u];if(!Ze(d.shape,p.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${d.shape}', which does not match the shape of the input '${p.shape}'`);if(n[p.id]==null)n[p.id]=d;else{const f=n[p.id];n[p.id]=r(f,d),f.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lw=20,Di=3,Jm=7;function $E(n,e,t,r){const s=Te(e),o=CE(n,e,t,s),a=e.length,l=Zc(n,e,t,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(l.map(d=>"    "+d).join(`
`)),u.join(`
`)}function CE(n,e,t,r){const s=oe(e),o=r[r.length-1],a=new Array(o).fill(0),l=e.length,u=t==="complex64"?Pi(n):n;if(l>1)for(let d=0;d<s/o;d++){const p=d*o;for(let f=0;f<o;f++)a[f]=Math.max(a[f],Fi(u[p+f],0,t).length)}return a}function Fi(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed(Jm))} + ${parseFloat(n[1].toFixed(Jm))}j`:Tr(n)?r=`'${n}'`:t==="bool"?r=Bb(n):r=parseFloat(n.toFixed(Jm)).toString(),No(r,e)}function Bb(n){return n===0?"false":"true"}function Zc(n,e,t,r,s,o=!0){const a=t==="complex64"?2:1,l=e[0],u=e.length;if(u===0){if(t==="complex64"){const v=Pi(n);return[Fi(v[0],0,t)]}return t==="bool"?[Bb(n[0])]:[n[0].toString()]}if(u===1){if(l>lw){const w=Di*a;let b=Array.from(n.slice(0,w)),$=Array.from(n.slice((l-Di)*a,l*a));return t==="complex64"&&(b=Pi(b),$=Pi($)),["["+b.map((I,k)=>Fi(I,s[k],t)).join(", ")+", ..., "+$.map((I,k)=>Fi(I,s[l-Di+k],t)).join(", ")+"]"]}return["["+(t==="complex64"?Pi(n):Array.from(n)).map((w,b)=>Fi(w,s[b],t)).join(", ")+"]"]}const d=e.slice(1),p=r.slice(1),f=r[0]*a,m=[];if(l>lw){for(let v=0;v<Di;v++){const w=v*f,b=w+f;m.push(...Zc(n.slice(w,b),d,t,p,s,!1))}m.push("...");for(let v=l-Di;v<l;v++){const w=v*f,b=w+f;m.push(...Zc(n.slice(w,b),d,t,p,s,v===l-1))}}else for(let v=0;v<l;v++){const w=v*f,b=w+f;m.push(...Zc(n.slice(w,b),d,t,p,s,v===l-1))}const g=u===2?",":"";m[0]="["+(l>0?m[0]+g:"");for(let v=1;v<m.length-1;v++)m[v]=" "+m[v]+g;let y=`,
`;for(let v=2;v<u;v++)y+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(o?"":y),m}function Pi(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kt{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=oe(e),r!=null){const s=r.length;D(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||vt(t,this.size),this.strides=Te(e)}set(e,...t){t.length===0&&(t=[0]),D(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return hr().makeTensor(this.values,this.shape,this.dtype)}}let hr=null,xa=null;function NE(n){hr=n}function kE(n){xa=n}class xt{constructor(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=oe(e),this.strides=Te(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return xa.buffer(this.shape,this.dtype,e)}bufferSync(){return xa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Un(this.shape,e,this.dtype==="complex64")}arraySync(){return Un(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=hr().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(r=>ns(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),hr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=hr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>ns(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await hr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),hr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return xa.print(this,e)}clone(){return this.throwIfDisposed(),xa.clone(this)}toString(e=!1){const t=this.dataSync();return $E(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),xa.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),hr().makeVariable(this,e,t,r)}}Object.defineProperty(xt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function Mb(){return ny("Tensor",()=>xt)}Mb();class qi extends xt{constructor(e,t,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ze(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);hr().disposeTensor(this),this.dataId=e.dataId,hr().incRef(this,null)}dispose(){hr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(qi,Symbol.hasInstance,{value:n=>n instanceof xt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var yg;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(yg||(yg={}));var xg;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(xg||(xg={}));var vg;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(vg||(vg={}));var wg;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(wg||(wg={}));var bg;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(bg||(bg={}));const IE={float32:wg,int32:xg,bool:vg,complex64:bg};function mn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return IE[n][e]}function kf(n){return mn(n,"int32")}function zb(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function Wb(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mt(n,e){if(n.dtype===e.dtype)return[n,e];const t=mn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function Ub(n,e){D(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function TE(n,e){return e.some(t=>t.id===n.id)}function hy(n){const e=[];return Gb(n,e,new Set),e}function Gb(n,e,t){if(n==null)return;if(n instanceof xt){e.push(n);return}if(!EE(n))return;const r=n;for(const s in r){const o=r[s];t.has(o)||(t.add(o),Gb(o,e,t))}}function EE(n){return Array.isArray(n)||typeof n=="object"}const RE=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:Ub,getTensorsInContainer:hy,isTensorInList:TE,makeTypesMatch:mt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eg(n){return n.kernelName!=null}class uw{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ia{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new uw}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(Mn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new xE(this.backendInstance),!0}setupRegisteredKernels(){hd(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){hd(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof Dd)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,o=r.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Mn(`Initialization of backend ${e} failed`),Mn(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return Mn(`Initialization of backend ${e} failed`),Mn(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:s,asyncInit:o}=this.initializeBackend(r);if(o||s)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),s=r.backend,o=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),r.backend=e,e.move(t,o,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,r){e();try{const s=r();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Ia.nextTensorId++}nextVariableId(){return Ia.nextVariableId++}clone(e){const t=z.runKernel(Rl,{x:e}),r={x:e},s=a=>({x:()=>{const l="float32",u={x:a},d={dtype:l};return z.runKernel(ml,u,d)}}),o=[];return this.addTapeNode(this.state.activeScope.name,r,[t],s,o,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,!(ji(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const s=this.backend.numDataIds();let o=0;r.forEach(u=>{o+=u.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=s-t-o-a;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const s=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u;const d=eg(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(eg(e)){const{kernelName:y,inputs:v,attrs:w}=e;this.backendName==null&&this.backend;const b=ji(y,this.backendName);D(b!=null,()=>`Cannot find registered kernel '${y}' for backend '${this.backendName}'`),l=()=>{const $=this.backend.numDataIds();u=b.kernelFunc({inputs:v,attrs:w,backend:this.backend});const I=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(y,$,I);const k=I.map(T=>T.rank!=null?T:this.makeTensorFromTensorInfo(T));if(s){const T=this.getTensorsForGradient(y,v,k);r=this.saveTensorsForBackwardMode(T)}return k}}else{const{forwardFunc:y}=e,v=w=>{s&&(r=w.map(b=>this.keep(this.clone(b))))};l=()=>{const w=this.backend.numDataIds();u=this.tidy(()=>y(this.backend,v));const b=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,w,b),b}}const{inputs:p,attrs:f}=e,m=eg(e)?null:e.backwardsFunc;let g;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=l():(g=this.profiler.profileKernel(d,p,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),t=g.outputs)}),s&&this.addTapeNode(d,p,t,m,r,f),this.state.profiling&&this.state.activeProfile.kernels.push({name:d,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(y=>p[y]!=null?p[y].shape:null),outputShapes:t.map(y=>y.shape),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,t,r){const s=mg(e);if(s!=null){const o=s.inputsToSave||[],a=s.outputsToSave||[];let l;s.saveAllInputs?(D(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(t).map(d=>t[d])):l=o.map(d=>t[d]);const u=r.filter((d,p)=>a[p]);return l.concat(u)}return[]}makeTensor(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let o=e;r==="string"&&Tr(e[0])&&(o=e.map(u=>Rr(u)));const a=s.write(o,t,r),l=new xt(t,r,a,this.nextTensorId());if(this.trackTensor(l,s),r==="string"){const u=this.state.tensorInfo.get(a),d=kb(o);this.state.numBytes+=d-u.bytes,u.bytes=d}return l}makeTensorFromDataId(e,t,r,s){r=r||"float32";const o={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(o,s)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:s,dtype:o}=e,a=new xt(s,o,r,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const o=new qi(e,t,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*zi(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof qi||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*zi(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,s,o,a){const l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:o},u=mg(e);u!=null&&(s=u.gradFunc),s!=null&&(l.gradient=d=>(d=d.map((p,f)=>{if(p==null){const m=r[f],g=Wt(m.size,m.dtype);return this.makeTensor(g,m.shape,m.dtype)}return p}),s(d.length>1?d:d[0],o,a))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=hy(e),r=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!r.has(a.id)&&a.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===s.id&&this.track(o)})}gradients(e,t,r,s=!1){if(D(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));D(o instanceof xt,()=>"The result y returned by f() must be a tensor.");const a=bE(this.state.activeTape,t,o);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[o.id]=r??_E(o.shape),SE(l,a,d=>this.tidy(d),OE);const u=t.map(d=>l[d.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(d=>{for(const p of d.saved)p.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return D(Bs(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{D(t.every(l=>l instanceof xt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};t.forEach((l,u)=>{s[u]=l});const o=(l,u)=>(r=e(...t,u),D(r.value instanceof xt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(Bs(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(l,u)=>{const d=r.gradFunc(l,u),p=Array.isArray(d)?d:[d];D(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(p.every(m=>m instanceof xt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const f={};return p.forEach((m,g)=>{f[g]=()=>m}),f};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=En(),r=await this.backend.time(e);return r.wallMs=En()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new uw;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ia.nextTensorId=0;Ia.nextVariableId=0;function _E(n){const e=Fd(oe(n),"float32");return z.makeTensor(e,n,"float32")}function Hb(){const n=Ob();if(n._tfengine==null){const e=new _b(n);n._tfengine=new Ia(e)}return XT(n._tfengine.ENV),NE(()=>n._tfengine),n._tfengine}const z=Hb();function OE(n,e){const t={a:n,b:e};return z.runKernel(Va,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(){return typeof navigator<"u"&&navigator!=null}let Sg;function AE(n){Sg=n}function my(n){if(Sg!==void 0)return Sg;if(n||DE()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function gy(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const FE=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:gy,isMobile:my,mockIsMobile:AE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gn=J();gn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});gn.registerFlag("IS_BROWSER",()=>gy());gn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");gn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));gn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));gn.registerFlag("PROD",()=>!1);gn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>gn.getBool("DEBUG"));gn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);gn.registerFlag("IS_TEST",()=>!1);gn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>gn.getBool("DEBUG"));gn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);gn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);gn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(n,e){let t=n;if(At(n))return e==="string"?[]:[n.length];if(zb(n)){const s=n.channels||"RGBA";return[n.height,n.width*s.length]}else if(Wb(n))return[n.buffer.size/(e==null?4:zi(e))];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(t)||At(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&J().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&jb(n,r,[]),r}function jb(n,e,t){if(t=t||[],!Array.isArray(n)&&!At(n)){D(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}D(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),D(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let s=0;s<n.length;++s)jb(n[s],r,t.concat(s))}function cw(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function _(n,e,t,r="numeric"){if(n instanceof Mb())return cw(r,n.dtype,e,t),n;let s=zo(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),cw(r,s,e,t),n==null||!At(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}const o=Dr(n,s);!At(n)&&!Array.isArray(n)&&(n=[n]);const l=s!=="string"?js(n,s):Or(n,[],!0);return z.makeTensor(l,o,s)}function Ki(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>_(o,`${e}[${a}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yy="__op";function M(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+yy;const s=(...o)=>{z.startScope(t);try{const a=r(...o);return Ms(a)&&console.error("Cannot return a Promise inside of tidy."),z.endScope(a),a}catch(a){throw z.endScope(null),a}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PE(n,e){const t=_(n,"real","complex"),r=_(e,"imag","complex");Ut(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:t,imag:r};return z.runKernel(Kd,s)}const rs=M({complex_:PE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qs(n,e,t,r){if(r==null)r=zo(n);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Wb(n)||zb(n)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return z.backend.createTensorFromGPUData(n,e||t,r)}if(!At(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Dn(e);const s=oe(e),o=oe(t);D(s===o,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${o}`);for(let a=0;a<t.length;++a){const l=t[a],u=a===t.length-1?l!==oe(e.slice(a)):!0;D(t[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!At(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?js(n,r):Or(n,[],!0),z.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xr(n,e,t){const r=Dr(n,t);return qs(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eo={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class br{static join(e){return new br(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>At(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+s.byteLength;this.shards.push({buffer:s,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=t-e,o=new ArrayBuffer(s),a=new Uint8Array(o);let l=0;for(let u=r;u<this.shards.length;u++){const d=this.shards[u],f=e+l-d.start,m=l,y=Math.min(t,d.end)-d.start,v=new Uint8Array(d.buffer,f,y-f);if(a.set(v,m),l+=v.length,t<d.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(s){return e<s.start?-1:e>=s.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=LE(this.shards,t);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function LE(n,e){let t=0,r=n.length;for(;t<=r;){const s=Math.floor((r-t)/2)+t,o=e(n[s]);if(o===0)return s;o<0?r=s:t=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(){J().set("PROD",!0)}function BE(){J().set("DEBUG",!0)}function ME(){J().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function zE(n){J().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function WE(){z.disposeVariables()}function fr(){return z}function UE(){return z.memory()}function GE(n){return z.profile(n)}function Ge(n,e){return z.tidy(n,e)}function un(n){hy(n).forEach(t=>t.dispose())}function gr(n){return z.keep(n)}function HE(n){return z.time(n)}function jE(n){return z.setBackend(n)}function qE(){return z.ready()}function qb(){return z.backendName}function KE(n){z.removeBackend(n)}function XE(n){return z.findBackend(n)}function YE(n){return z.findBackendFactory(n)}function xy(n,e,t=1){return z.registerBackend(n,e,t)}function Kb(){return z.backend}function QE(n,e){J().setPlatform(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zs=4;async function ZE(n,e){const t=[],r=[],s=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<s.length;++a){const l=s[a],u=Array.isArray(n)?n[a].tensor:n[l];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${l}': ${u.dtype}`);const d={name:l,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const p=new Promise(async f=>{const m=await u.bytes(),g=m.reduce((w,b)=>w+b.length,0)+zs*m.length,y=new Uint8Array(g);let v=0;for(let w=0;w<m.length;w++){const b=m[w],$=new Uint8Array(new Uint32Array([b.length]).buffer);y.set($,v),v+=zs,y.set(b,v),v+=b.length}f(y)});r.push(p)}else r.push(u.data());e!=null&&(d.group=e),t.push(d)}const o=await Promise.all(r);return{data:tR(o),specs:t}}function Xb(n,e){const t=new br(n),r={};let s=0;for(const o of e){const a=JE(o,(l,u)=>t.slice(s+l,s+u));r[o.name]=Yb(o,t.slice(s,s+a)),s+=a}return r}function JE(n,e){const t=oe(n.shape);let r;if("quantization"in n){const s=n.quantization;r=Eo[s.dtype]}else if(n.dtype==="string"){let s=0;for(let o=0;o<t;o++)s+=zs+new Uint32Array(e(s,s+zs))[0];return s}else r=Eo[n.dtype];return t*r}async function eR(n,e){const t=oe(n.shape);let r;if("quantization"in n){const s=n.quantization;r=Eo[s.dtype]}else if(n.dtype==="string"){let s=0;for(let o=0;o<t;o++)s+=zs+new Uint32Array(await e(s,s+zs))[0];return s}else r=Eo[n.dtype];return t*r}function Yb(n,e){const t=n.name,r=n.dtype,s=n.shape,o=oe(s);let a,l=0;if("quantization"in n){const u=n.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${n.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${n.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const d=Eo[u.dtype],p=u.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(r==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){a=new Float32Array(p.length);for(let f=0;f<p.length;f++){const m=p[f];a[f]=m*u.scale+u.min}}else if(u.dtype==="float16")a=lR()(p);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(r==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);a=new Int32Array(p.length);for(let f=0;f<p.length;f++){const m=p[f];a[f]=Math.round(m*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);l+=o*d}else if(r==="string"){const u=oe(n.shape);a=[];for(let d=0;d<u;d++){const p=new Uint32Array(e.slice(l,l+zs))[0];l+=zs;const f=new Uint8Array(e.slice(l,l+p));a.push(f),l+=p}}else{const u=Eo[r];if(r==="float32")a=new Float32Array(e);else if(r==="int32")a=new Int32Array(e);else if(r==="bool")a=new Uint8Array(e);else if(r==="complex64"){a=new Float32Array(e);const d=new Float32Array(a.length/2),p=new Float32Array(a.length/2);for(let y=0;y<d.length;y++)d[y]=a[y*2],p[y]=a[y*2+1];const f=xr(d,s,"float32"),m=xr(p,s,"float32"),g=rs(f,m);return f.dispose(),m.dispose(),g}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);l+=o*u}return xr(a,s,r)}async function dw(n,e,t){let r=new Uint8Array(e);for(;r.byteLength<t;){const{done:s,value:o}=await n.read();if(s&&o==null){const l=t-r.byteLength;throw new Error(`Reader is done but ${l} bytes are still expected`)}const a=new Uint8Array(r.length+o.byteLength);a.set(r,0),a.set(new Uint8Array(o),r.length),r=a}return r.buffer}async function Qb(n,e){const t={},r=n.getReader();let s=new ArrayBuffer(0);for(const o of e){const a=await eR(o,async(d,p)=>(s=await dw(r,s,p),s.slice(d,p)));s=await dw(r,s,a);const l=s.slice(0,a);s=s.slice(a);const u=Yb(o,l);if(t[o.name]=u,qb()==="webgpu"){const d=Kb();"uploadToGPU"in d&&oe(u.shape)>=J().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&d.uploadToGPU(u.dataId)}}return t}function tR(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const r=new Uint8Array(e);let s=0;return t.forEach(o=>{r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}const vy=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function pw(n){return vy?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function nR(n){if(vy)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,s=e.length;r<s;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function rR(n){if(vy){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function sR(n){return br.join(n)}function fw(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function Zb(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function wy(n,e,t){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(r.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=t}return n.signature!=null&&(r.signature=n.signature),n.userDefinedMetadata!=null&&(r.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(r.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(r.initializerSignature=n.initializerSignature),r}async function by(n,e){let t,r;return n.weightsManifest!=null&&([t,r]=await e(n.weightsManifest)),wy(n,t,r)}function fu(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:pw(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:pw(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new br(n.weightData).byteLength}}function md(n){const e=[];for(const t of n)e.push(...t.weights);return e}function oR(){const n=t=>{let r=t<<13,s=0;for(;(r&8388608)===0;)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function aR(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function iR(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function lR(){const n=oR(),e=aR(),t=iR();return r=>{const s=new ArrayBuffer(4*r.length),o=new Uint32Array(s);for(let a=0;a<r.length;a++){const l=r[a],u=n[t[l>>10]+(l&1023)]+e[l>>10];o[a]=u}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ht{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return ht.instance==null&&(ht.instance=new ht),ht.instance}static registerSaveRouter(e){ht.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ht.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ht.getHandlers(e,"save")}static getLoadHandlers(e,t){return ht.getHandlers(e,"load",t)}static getHandlers(e,t,r){const s=[];return(t==="load"?ht.getInstance().loadRouters:ht.getInstance().saveRouters).forEach(a=>{const l=a(e,r);l!==null&&s.push(l)}),s}}const uR=n=>ht.registerSaveRouter(n),cR=n=>ht.registerLoadRouter(n),dR=n=>ht.getSaveHandlers(n),pR=(n,e)=>ht.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $g="tensorflowjs",Cg=1,So="models_store",As="model_info_store";function Jb(){if(!J().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Ng(n){const e=n.result;e.createObjectStore(So,{keyPath:"modelPath"}),e.createObjectStore(As,{keyPath:"modelPath"})}class Ro{constructor(e){if(this.indexedDB=Jb(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,s)=>{const o=this.indexedDB.open($g,Cg);o.onupgradeneeded=()=>Ng(o),o.onsuccess=()=>{const a=o.result;if(t==null){const l=a.transaction(So,"readonly"),d=l.objectStore(So).get(this.modelPath);d.onsuccess=()=>{if(d.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(d.result.modelArtifacts)},d.onerror=p=>(a.close(),s(d.error)),l.oncomplete=()=>a.close()}else{t.weightData=br.join(t.weightData);const l=fu(t),u=a.transaction(As,"readwrite");let d=u.objectStore(As),p;try{p=d.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(m){return s(m)}let f;p.onsuccess=()=>{f=a.transaction(So,"readwrite");const m=f.objectStore(So);let g;try{g=m.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:l})}catch(y){return s(y)}g.onsuccess=()=>r({modelArtifactsInfo:l}),g.onerror=y=>{d=u.objectStore(As);const v=d.delete(this.modelPath);v.onsuccess=()=>(a.close(),s(g.error)),v.onerror=w=>(a.close(),s(g.error))}},p.onerror=m=>(a.close(),s(p.error)),u.oncomplete=()=>{f==null?a.close():f.oncomplete=()=>a.close()}}},o.onerror=a=>s(o.error)})}}Ro.URL_SCHEME="indexeddb://";const eS=n=>J().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ro.URL_SCHEME)?fR(n.slice(Ro.URL_SCHEME.length)):null;ht.registerSaveRouter(eS);ht.registerLoadRouter(eS);function fR(n){return new Ro(n)}function hR(n){return n.startsWith(Ro.URL_SCHEME)?n.slice(Ro.URL_SCHEME.length):n}class mR{constructor(){this.indexedDB=Jb()}async listModels(){return new Promise((e,t)=>{const r=this.indexedDB.open($g,Cg);r.onupgradeneeded=()=>Ng(r),r.onsuccess=()=>{const s=r.result,o=s.transaction(As,"readonly"),l=o.objectStore(As).getAll();l.onsuccess=()=>{const u={};for(const d of l.result)u[d.modelPath]=d.modelArtifactsInfo;e(u)},l.onerror=u=>(s.close(),t(l.error)),o.oncomplete=()=>s.close()},r.onerror=s=>t(r.error)})}async removeModel(e){return e=hR(e),new Promise((t,r)=>{const s=this.indexedDB.open($g,Cg);s.onupgradeneeded=()=>Ng(s),s.onsuccess=()=>{const o=s.result,a=o.transaction(As,"readwrite"),l=a.objectStore(As),u=l.get(e);let d;u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const p=l.delete(e),f=()=>{d=o.transaction(So,"readwrite");const g=d.objectStore(So).delete(e);g.onsuccess=()=>t(u.result.modelArtifactsInfo),g.onerror=y=>r(u.error)};p.onsuccess=f,p.onerror=m=>(f(),o.close(),r(u.error))}},u.onerror=p=>(o.close(),r(u.error)),a.oncomplete=()=>{d==null?o.close():d.oncomplete=()=>o.close()}},s.onerror=o=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jr="/",va="tensorflowjs_models",tS="info",gR="model_topology",yR="weight_specs",xR="weight_data",vR="model_metadata";function nS(n){return{info:[va,n,tS].join(Jr),topology:[va,n,gR].join(Jr),weightSpecs:[va,n,yR].join(Jr),weightData:[va,n,xR].join(Jr),modelMetadata:[va,n,vR].join(Jr)}}function rS(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function wR(n){const e=n.split(Jr);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Jr)}function bR(n){return n.startsWith(_o.URL_SCHEME)?n.slice(_o.URL_SCHEME.length):n}class _o{constructor(e){if(!J().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=nS(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=fu(e),o=br.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,nR(o));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw rS(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const l=JSON.parse(o);t.format=l.format,t.generatedBy=l.generatedBy,t.convertedBy=l.convertedBy,l.signature!=null&&(t.signature=l.signature),l.userDefinedMetadata!=null&&(t.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(t.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(t.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(t.trainingConfig=l.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=rR(a),t}}_o.URL_SCHEME="localstorage://";const sS=n=>J().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(_o.URL_SCHEME)?SR(n.slice(_o.URL_SCHEME.length)):null;ht.registerSaveRouter(sS);ht.registerLoadRouter(sS);function SR(n){return new _o(n)}class $R{constructor(){D(J().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=va+Jr,r=Jr+tS;for(let s=0;s<this.LS.length;++s){const o=this.LS.key(s);if(o.startsWith(t)&&o.endsWith(r)){const a=wR(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=bR(e);const t=nS(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return rS(t),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ba="://";class sn{constructor(){this.managers={}}static getInstance(){return sn.instance==null&&(sn.instance=new sn),sn.instance}static registerManager(e,t){D(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(ba)&&(e=e.slice(0,e.indexOf(ba))),D(e.length>0,()=>"scheme must not be an empty string.");const r=sn.getInstance();D(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=sn.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(sn.getInstance().managers)}}function Jc(n){if(n.indexOf(ba)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${sn.getSchemes().join(",")}`);return{scheme:n.split(ba)[0],path:n.split(ba)[1]}}async function oS(n,e,t=!1){D(n!==e,()=>`Old path and new path are the same: '${n}'`);const r=ht.getLoadHandlers(n);D(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),D(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const s=r[0],o=ht.getSaveHandlers(e);D(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),D(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const a=o[0],l=Jc(n).scheme,u=Jc(n).path,d=l===Jc(n).scheme,p=await s.load();t&&d&&await sn.getManager(l).removeModel(u);const f=await a.save(p);return t&&!d&&await sn.getManager(l).removeModel(u),f.modelArtifactsInfo}async function CR(){const n=sn.getSchemes(),e={};for(const t of n){const r=await sn.getManager(t).listModels();for(const s in r){const o=t+ba+s;e[o]=r[s]}}return e}async function NR(n){const e=Jc(n);return sn.getManager(e.scheme).removeModel(e.path)}async function kR(n,e){return oS(n,e,!1)}async function IR(n,e){return oS(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TR{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!J().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return Db(e)}}if(J().get("IS_BROWSER")){J().setPlatform("browser",new TR);try{sn.registerManager(_o.URL_SCHEME,new $R)}catch{}try{sn.registerManager(Ro.URL_SCHEME,new mR)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ER={importFetch:()=>require("node-fetch")};let tg;class RR{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return J().global.fetch!=null?J().global.fetch(e,t):(tg==null&&(tg=ER.importFetch()),tg(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}J().get("IS_NODE")&&!J().get("IS_BROWSER")&&J().setPlatform("node",new RR);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fe(n,e="float32",t){return e=e||"float32",Dn(n),new kt(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _R(n,e){const t=_(n,"x","cast");if(!Nb(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},s={dtype:e};return z.runKernel(ml,r,s)}const it=M({cast_:_R});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(n){const t={x:_(n,"x","clone","string_or_numeric")};return z.runKernel(Rl,t)}const es=M({clone_:OR});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sy(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Hb();const DR={buffer:Fe,cast:it,clone:es,print:Sy};kE(DR);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(n,e){let t=_(n,"a","add"),r=_(e,"b","add");[t,r]=mt(t,r);const s={a:t,b:r};return z.runKernel(Va,s)}const Oe=M({add_:AR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FR(n,e){let t=_(n,"a","floorDiv"),r=_(e,"b","floorDiv");[t,r]=mt(t,r);const s={a:t,b:r};return z.runKernel(Il,s)}const $y=M({floorDiv_:FR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PR(n,e){let t=_(n,"a","div"),r=_(e,"b","div");if([t,r]=mt(t,r),t.dtype==="int32"&&r.dtype==="int32")return $y(t,r);const s={a:t,b:r},o={};return z.runKernel(wl,s,o)}const at=M({div_:PR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(n,e){let t=_(n,"a","mul"),r=_(e,"b","mul");[t,r]=mt(t,r);const s={a:t,b:r};return z.runKernel(Gl,s)}const ve=M({mul_:LR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VR(n){const e=_(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return z.runKernel(Xd,t)}else{const t={x:e};return z.runKernel(Pd,t)}}const Tn=M({abs_:VR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BR(n){const t={x:_(n,"x","acos")};return z.runKernel(il,t)}const aS=M({acos_:BR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MR(n){const t={x:_(n,"x","acosh")};return z.runKernel(ll,t)}const iS=M({acosh_:MR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zR(n){D(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),D(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((s,o)=>_(s,`tensors${o}`,"addN")),t=e[0];e.forEach(s=>{if(s.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!Ze(s.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return z.runKernel(Ld,r)}const lS=M({addN_:zR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WR(n,e=null,t=!1){const s={x:_(n,"x","all","bool")},o={axis:e,keepDims:t};return z.runKernel(Vd,s,o)}const uS=M({all_:WR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UR(n,e=null,t=!1){const s={x:_(n,"x","any","bool")},o={axis:e,keepDims:t};return z.runKernel(Bd,s,o)}const cS=M({any_:UR});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(n,e=0){const r={x:_(n,"x","argMax")},s={axis:e};return z.runKernel(Md,r,s)}const dS=M({argMax_:GR});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n,e=0){const r={x:_(n,"x","argMin")},s={axis:e};return z.runKernel(zd,r,s)}const pS=M({argMin_:HR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jR(n){const t={x:_(n,"x","asin")};return z.runKernel(ul,t)}const fS=M({asin_:jR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n){const t={x:_(n,"x","asinh")};return z.runKernel(cl,t)}const hS=M({asinh_:qR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KR(n){const t={x:_(n,"x","atan")};return z.runKernel(dl,t)}const mS=M({atan_:KR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(n,e){let t=_(n,"a","atan2"),r=_(e,"b","atan2");[t,r]=mt(t,r);const s={a:t,b:r};return z.runKernel(fl,s)}const gS=M({atan2_:XR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YR(n){const t={x:_(n,"x","atanh")};return z.runKernel(pl,t)}const yS=M({atanh_:YR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hu(n,e,t,r,s="NHWC",o){const a=n[3],l=[...e,a],u=us(s);return Pt(n,l,t,o,r,null,null,u)}function nr(n,e,t,r,s,o,a="channelsLast"){const[l,u]=Xi(e);let d;if(a==="channelsLast")d=[l,u,n[3],n[3]];else if(a==="channelsFirst")d=[l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Pt(n,d,t,r,s,o,!1,a)}function ls(n,e,t,r,s,o,a="NDHWC"){const[l,u,d]=kg(e);let p,f;if(a==="NDHWC")f="channelsLast",p=[l,u,d,n[4],n[4]];else if(a==="NCDHW")f="channelsFirst",p=[l,u,d,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Ks(n,p,t,r,s,!1,f,o)}function Pt(n,e,t,r,s,o,a=!1,l="channelsLast"){let[u,d,p,f]=[-1,-1,-1,-1];if(l==="channelsLast")[u,d,p,f]=n;else if(l==="channelsFirst")[u,f,d,p]=n;else throw new Error(`Unknown dataFormat ${l}`);const[m,g,,y]=e,[v,w]=Xi(t),[b,$]=Xi(r),I=Sa(m,b),k=Sa(g,$),{padInfo:T,outHeight:O,outWidth:A}=JR(s,d,p,v,w,I,k,o,l),V=a?y*f:y;let P;return l==="channelsFirst"?P=[u,V,O,A]:l==="channelsLast"&&(P=[u,O,A,V]),{batchSize:u,dataFormat:l,inHeight:d,inWidth:p,inChannels:f,outHeight:O,outWidth:A,outChannels:V,padInfo:T,strideHeight:v,strideWidth:w,filterHeight:m,filterWidth:g,effectiveFilterHeight:I,effectiveFilterWidth:k,dilationHeight:b,dilationWidth:$,inShape:n,outShape:P,filterShape:e}}function Ks(n,e,t,r,s,o=!1,a="channelsLast",l){let[u,d,p,f,m]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,d,p,f,m]=n;else if(a==="channelsFirst")[u,m,d,p,f]=n;else throw new Error(`Unknown dataFormat ${a}`);const[g,y,v,,w]=e,[b,$,I]=kg(t),[k,T,O]=kg(r),A=Sa(g,k),V=Sa(y,T),P=Sa(v,O),{padInfo:F,outDepth:E,outHeight:W,outWidth:j}=e_(s,d,p,f,b,$,I,A,V,P,l),Y=o?w*m:w;let Q;return a==="channelsFirst"?Q=[u,Y,E,W,j]:a==="channelsLast"&&(Q=[u,E,W,j,Y]),{batchSize:u,dataFormat:a,inDepth:d,inHeight:p,inWidth:f,inChannels:m,outDepth:E,outHeight:W,outWidth:j,outChannels:Y,padInfo:F,strideDepth:b,strideHeight:$,strideWidth:I,filterDepth:g,filterHeight:y,filterWidth:v,effectiveFilterDepth:A,effectiveFilterHeight:V,effectiveFilterWidth:P,dilationDepth:k,dilationHeight:T,dilationWidth:O,inShape:n,outShape:Q,filterShape:e}}function QR(n,e,t,r,s){r==null&&(r=Cy(n,e,t));const o=n[0],a=n[1],l=Yi((o-e+2*r)/t+1,s),u=Yi((a-e+2*r)/t+1,s);return[l,u]}function ZR(n,e,t,r,s,o){s==null&&(s=Cy(n,e[0],r[0]));const a=[0,0,0,t];for(let l=0;l<3;l++)n[l]+2*s>=e[l]&&(a[l]=Yi((n[l]-e[l]+2*s)/r[l]+1,o));return a}function Cy(n,e,t,r=1){const s=Sa(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function Xi(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function kg(n){return typeof n=="number"?[n,n,n]:n}function Sa(n,e){return e<=1?n:n+(n-1)*(e-1)}function JR(n,e,t,r,s,o,a,l,u){let d,p,f;if(typeof n=="number"){d={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const g=QR([e,t],o,r,n,l);p=g[0],f=g[1]}else if(n==="same"){p=Math.ceil(e/r),f=Math.ceil(t/s);const m=Math.max(0,(p-1)*r+o-e),g=Math.max(0,(f-1)*s+a-t),y=Math.floor(m/2),v=m-y,w=Math.floor(g/2),b=g-w;d={top:y,bottom:v,left:w,right:b,type:"SAME"}}else if(n==="valid")d={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((e-o+1)/r),f=Math.ceil((t-a+1)/s);else if(typeof n=="object"){const m=u==="channelsLast"?n[1][0]:n[2][0],g=u==="channelsLast"?n[1][1]:n[2][1],y=u==="channelsLast"?n[2][0]:n[3][0],v=u==="channelsLast"?n[2][1]:n[3][1];d={top:m,bottom:g,left:y,right:v,type:m===0&&g===0&&y===0&&v===0?"VALID":"EXPLICIT"},p=Yi((e-o+m+g)/r+1,l),f=Yi((t-a+y+v)/s+1,l)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outHeight:p,outWidth:f}}function e_(n,e,t,r,s,o,a,l,u,d,p){let f,m,g,y;if(n==="valid"&&(n=0),typeof n=="number"){f={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const w=ZR([e,t,r,1],[l,u,d],1,[s,o,a],n,p);m=w[0],g=w[1],y=w[2]}else if(n==="same"){m=Math.ceil(e/s),g=Math.ceil(t/o),y=Math.ceil(r/a);const v=(m-1)*s+l-e,w=(g-1)*o+u-t,b=(y-1)*a+d-r,$=Math.floor(v/2),I=v-$,k=Math.floor(w/2),T=w-k,O=Math.floor(b/2),A=b-O;f={top:k,bottom:T,left:O,right:A,front:$,back:I,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:f,outDepth:m,outHeight:g,outWidth:y}}function Yi(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Qi(n){const[e,t,r]=Xi(n);return e===1&&t===1&&r===1}function Zt(n,e){return Qi(n)||Qi(e)}function Oo(n){return Xi(n).every(e=>e>0)}function us(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function rr(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")D(To(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{D(To(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${s}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t_(n,e){const r={x:_(n,"x","reshape","string_or_numeric")},s={shape:e};return z.runKernel(Xp,r,s)}const le=M({reshape_:t_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(n,e,t,r,s){const o=_(n,"x","avgPool","float32"),a=1;D(Zt(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let l=o,u=!1;o.rank===3&&(u=!0,l=le(o,[1,o.shape[0],o.shape[1],o.shape[2]])),D(l.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`),rr("avgPool",r,s);const d={x:l},p={filterSize:e,strides:t,pad:r,dimRoundingMode:s};let f=z.runKernel(Wd,d,p);return f=it(f,o.dtype),u?le(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Ny=M({avgPool_:n_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r_(n,e,t,r,s,o="NDHWC"){const a=_(n,"x","avgPool3d","float32");let l=a,u=!1;a.rank===4&&(u=!0,l=le(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),D(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),D(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),rr("avgPool3d",r,s);const d={x:l},p={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o};let f=z.runKernel(Ud,d,p);return f=it(f,l.dtype),u?le(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const xS=M({avgPool3d_:r_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(n,e=0){D(n.length>=1,()=>"Pass at least one tensor to concat");const t=Ki(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return es(t[0]);const r=t,s={axis:e};return z.runKernel(Yd,r,s)}const Qt=M({concat_:s_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_(n,e,t=!1,r=!1){let s=_(n,"a","matMul"),o=_(e,"b","matMul");[s,o]=mt(s,o);const a={a:s,b:o},l={transposeA:t,transposeB:r};return z.runKernel(Gd,a,l)}const Ke=M({matMul_:o_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_(n){const t={x:_(n,"x","sigmoid","float32")};return z.runKernel(nu,t)}const ko=M({sigmoid_:a_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_(n,e,t){const r=_(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:e,size:t};return z.runKernel(rf,s,o)}const nt=M({slice_:i_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l_(n){const t={x:_(n,"x","tanh","float32")};return z.runKernel(uu,t)}const gd=M({tanh_:l_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(n,e,t,r,s,o){const a=_(n,"forgetBias","basicLSTMCell"),l=_(e,"lstmKernel","basicLSTMCell"),u=_(t,"lstmBias","basicLSTMCell"),d=_(r,"data","basicLSTMCell"),p=_(s,"c","basicLSTMCell"),f=_(o,"h","basicLSTMCell"),m=Qt([d,f],1),g=Ke(m,l),y=Oe(g,u),v=y.shape[0],w=y.shape[1]/4,b=[v,w],$=nt(y,[0,0],b),I=nt(y,[0,w],b),k=nt(y,[0,w*2],b),T=nt(y,[0,w*3],b),O=Oe(ve(ko($),gd(I)),ve(p,ko(Oe(a,k)))),A=ve(gd(O),ko(T));return[O,A]}const vS=M({basicLSTMCell_:u_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c_(n,e,t){const r=_(n,"x","batchToSpaceND"),s=e.reduce((l,u)=>l*u);D(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),D(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),D(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const o={x:r},a={blockShape:e,crops:t};return z.runKernel(Hd,o,a)}const ky=M({batchToSpaceND_:c_});function d_(n){let e;return n.rank===0||n.rank===1?e=le(n,[1,1,1,n.size]):n.rank===2?e=le(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=le(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p_(n,e,t,r,s,o){o==null&&(o=.001);const a=_(n,"x","batchNorm"),l=_(e,"mean","batchNorm"),u=_(t,"variance","batchNorm");let d;s!=null&&(d=_(s,"scale","batchNorm"));let p;r!=null&&(p=_(r,"offset","batchNorm")),D(l.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(p==null||l.rank===p.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(d==null||l.rank===d.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const m={x:d_(a),scale:d,offset:p,mean:l,variance:u},g={varianceEpsilon:o},y=z.runKernel(xp,m,g);return le(y,a.shape)}const mu=M({batchNorm_:p_});function f_(n,e,t,r,s,o){const a=_(n,"x","batchNorm"),l=_(e,"mean","batchNorm"),u=_(t,"variance","batchNorm");let d;s!=null&&(d=_(s,"scale","batchNorm"));let p;return r!=null&&(p=_(r,"offset","batchNorm")),D(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),d!=null&&D(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${d.rank}.`),p!=null&&D(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${p.rank}.`),mu(a,l,u,p,d,o)}const wS=M({batchNorm2d_:f_});function h_(n,e,t,r,s,o){const a=_(n,"x","batchNorm"),l=_(e,"mean","batchNorm"),u=_(t,"variance","batchNorm");let d;s!=null&&(d=_(s,"scale","batchNorm"));let p;return r!=null&&(p=_(r,"offset","batchNorm")),D(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),d!=null&&D(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${d.rank}.`),p!=null&&D(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${p.rank}.`),mu(a,l,u,p,d,o)}const bS=M({batchNorm3d_:h_});function m_(n,e,t,r,s,o){const a=_(n,"x","batchNorm"),l=_(e,"mean","batchNorm"),u=_(t,"variance","batchNorm");let d;s!=null&&(d=_(s,"scale","batchNorm"));let p;return r!=null&&(p=_(r,"offset","batchNorm")),D(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),d!=null&&D(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${d.rank}.`),p!=null&&D(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${p.rank}.`),mu(a,l,u,p,d,o)}const SS=M({batchNorm4d_:m_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(n,e,t){const r=_(n,"x","bincount"),s=_(e,"weights","bincount");D(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const o={x:r,weights:s},a={size:t};return z.runKernel(jd,o,a)}const Iy=M({bincount_:g_});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_(n,e){const t=_(n,"x","bitwiseAnd"),r=_(e,"y","bitwiseAnd");if(!Ze(t.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${r.shape}`);if(t.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${r.dtype}`);const s={a:t,b:r};return z.runKernel(hl,s)}const $S=M({bitwiseAnd_:y_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x_(n,e){const t=_(n,"s0","broadcastArgs","int32"),r=_(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:t,s1:r};return z.runKernel(qd,s)}const CS=M({broadcastArgs_:x_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v_(n,e){let t=_(n,"broadcastTo","x");const r=t.shape;if(Dn(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const d=t.shape.slice();for(;d.length<e.length;)d.unshift(1);t=le(t,d)}const s=t.shape,o=Array.from(e);for(let d=e.length-1;d>=0;d--)if(s[d]===e[d])o[d]=1;else if(t.shape[d]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(o.map((d,p)=>d>1?p:-1).filter(d=>d>=0).length===0)return es(t);const l={x:t},u={reps:o};return z.runKernel(cu,l,u)}const $a=M({broadcastTo_:v_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w_(n){const t={x:_(n,"x","ceil","float32")};return z.runKernel(gl,t)}const NS=M({ceil_:w_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ba(n,e,t){Dn(n),t=t||zo(e);const r={shape:n,value:e,dtype:t};return z.runKernel(gp,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b_(n,e,t){const r=_(n,"x","clipByValue");if(D(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Ba(r.shape,e,r.dtype);const s={x:r},o={clipValueMin:e,clipValueMax:t};return z.runKernel(yl,s,o)}const kS=M({clipByValue_:b_});function S_(n){return Qt(n,0)}const IS=M({concat1d_:S_});function $_(n,e){return Qt(n,e)}const TS=M({concat2d_:$_});function C_(n,e){return Qt(n,e)}const ES=M({concat3d_:C_});function N_(n,e){return Qt(n,e)}const RS=M({concat4d_:N_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k_(n,e,t,r,s="NHWC",o=[1,1],a){const l=_(n,"x","conv2d","float32"),u=_(e,"filter","conv2d","float32");let d=l,p=!1;l.rank===3&&(p=!0,d=le(l,[1,l.shape[0],l.shape[1],l.shape[2]])),D(d.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${d.rank}.`),D(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),rr("conv2d",r,a);const f=s==="NHWC"?d.shape[3]:d.shape[1];D(f===u.shape[2],()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${u.shape[2]}.`),D(Zt(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),D(Oo(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),D(Oo(t),()=>"Error in conv2D: Strides should be larger than 0.");const m={x:d,filter:u},g={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},y=z.runKernel(Qd,m,g);return p?le(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const gu=M({conv2d_:k_});function I_(n,e,t,r,s="NWC",o=1,a){const l=_(n,"x","conv1d"),u=_(e,"filter","conv1d");let d=l,p=!1;l.rank===2&&(p=!0,d=le(l,[1,l.shape[0],l.shape[1]])),D(d.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${d.rank}.`),D(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),rr("conv1d",r,a),D(d.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${d.shape[2]}) must match input depth for filter ${u.shape[1]}.`),D(Zt(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),D(Oo(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),D(Oo(t),()=>"Error in conv1D: Stride should be larger than 0."),D(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const f=le(u,[1,u.shape[0],u.shape[1],u.shape[2]]),m=le(d,[d.shape[0],1,d.shape[1],d.shape[2]]),w=gu(m,f,[1,t],r,"NHWC",[1,o],a);return p?le(w,[w.shape[2],w.shape[3]]):le(w,[w.shape[0],w.shape[2],w.shape[3]])}const _S=M({conv1d_:I_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_(n,e,t,r,s,o="NHWC",a){D(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let l=n,u=e,d=!1;e.rank===3&&(d=!0,u=le(e,[1,e.shape[0],e.shape[1],e.shape[2]]),l=[1,n[0],n[1],n[2]]),D(l.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`),D(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),D(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const p=o==="NHWC"?l[3]:l[1],f=o==="NHWC"?u.shape[3]:u.shape[1];D(p===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[2]}.`),D(f===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${f}) must match output depth for filter ${t.shape[3]}.`),rr("conv2dDerInput",s,a);const m={dy:u,filter:t},g={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,inputShape:l},y=z.runKernel(Jd,m,g);return d?le(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const OS=M({conv2DBackpropInput_:T_});function E_(n,e,t,r,s,o){const a=_(n,"x","conv2dTranspose"),l=_(e,"filter","conv2dTranspose");return OS(t,a,l,r,s,"NHWC",o)}const DS=M({conv2dTranspose_:E_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R_(n,e,t,r,s="NDHWC",o=[1,1,1]){const a=_(n,"x","conv3d"),l=_(e,"filter","conv3d");let u=a,d=!1;a.rank===4&&(d=!0,u=le(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),D(l.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`),D(u.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${l.shape[3]}.`),D(Zt(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),D(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),D(Oo(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),D(Oo(t),()=>"Error in conv3D: Strides should be larger than 0.");const p={x:u,filter:l},f={strides:t,pad:r,dataFormat:s,dilations:o},m=z.runKernel(ep,p,f);return d?le(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const AS=M({conv3d_:R_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function __(n,e,t,r,s){D(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,a=e,l=!1;e.rank===4&&(l=!0,a=le(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const u=o[4],d=a.shape[4];D(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),D(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),D(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),D(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),D(d===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[4]}.`);const p={dy:a,filter:t},f={pad:s,strides:r,inputShape:o},m=z.runKernel(tp,p,f);return l?le(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const O_=M({conv3DBackpropInput_:__});function D_(n,e,t,r,s){const o=_(n,"x","conv3dTranspose"),a=_(e,"filter","conv3dTranspose");return O_(t,o,a,r,s)}const FS=M({conv3dTranspose_:D_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(n){const t={x:_(n,"x","cos","float32")};return z.runKernel(xl,t)}const PS=M({cos_:A_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(n){const t={x:_(n,"x","cosh","float32")};return z.runKernel(vl,t)}const LS=M({cosh_:F_});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(n,e=0,t=!1,r=!1){const o={x:_(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:r};return z.runKernel(np,o,a)}const VS=M({cumprod_:P_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L_(n,e=0,t=!1,r=!1){const o={x:_(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:r};return z.runKernel(rp,o,a)}const BS=M({cumsum_:L_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V_(n,e,t,r=!1){const s=_(n,"x","denseBincount"),o=_(e,"weights","denseBincount");D(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),D(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),D(t>=0,()=>`size must be non-negative, but got ${t}.`),D(o.size===s.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${o.shape}.`);const a={x:s,weights:o},l={size:t,binaryOutput:r};return z.runKernel(op,a,l)}const MS=M({denseBincount_:V_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(n,e,t="NHWC"){const r=_(n,"x","depthToSpace","float32"),s=t==="NHWC"?r.shape[1]:r.shape[2],o=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];D(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),D(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),D(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${r.shape}`),D(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const l={x:r},u={blockSize:e,dataFormat:t};return z.runKernel(ap,l,u)}const zS=M({depthToSpace_:B_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(n,e,t,r,s="NHWC",o=[1,1],a){const l=_(n,"x","depthwiseConv2d","float32"),u=_(e,"filter","depthwiseConv2d","float32");let d=l,p=!1;l.rank===3&&(p=!0,d=le(l,[1,l.shape[0],l.shape[1],l.shape[2]])),D(d.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),D(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const f=s==="NHWC"?d.shape[3]:d.shape[1];D(f===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${f}) must match the inChannels dimension in filter ${u.shape[2]}.`),rr("depthwiseConv2d",r,a);const m={x:d,filter:u},g={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},y=z.runKernel(ip,m,g);return p?le(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const If=M({depthwiseConv2d_:M_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z_(n){const t={x:_(n,"x","diag")};return z.runKernel(cp,t)}const WS=M({diag_:z_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(n,e,t,r,s=[1,1],o="NHWC"){const a=_(n,"x","dilation2d"),l=_(e,"filter","dilation2d");D(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),D(l.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`),D(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=a,d=!1;a.rank===3&&(u=le(a,[1,a.shape[0],a.shape[1],a.shape[2]]),d=!0),D(u.shape[3]===l.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${l.shape[2]}`);const p={x:u,filter:l},f={strides:t,pad:r,dilations:s},m=z.runKernel(dp,p,f);return d?le(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const US=M({dilation2d_:W_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Do(n,e){const t=n.length,r=[];for(let s=0;s<t;s++){const o=t-1-s,a=n[o]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(o)}return r}function Ty(n,e){const t=[];for(let r=0;r<e.length;r++){const s=n[n.length-r-1],o=e.length-r-1,a=e[o];(s==null||s===1&&a>1)&&t.unshift(o)}return t}function Ve(n,e){const t=Math.max(n.length,e.length),r=new Array(t);for(let s=0;s<t;s++){let o=n[n.length-s-1];o==null&&(o=1);let a=e[e.length-s-1];if(a==null&&(a=1),o===1)r[t-s-1]=a;else if(a===1)r[t-s-1]=o;else if(o!==a){const l=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(l)}else r[t-s-1]=o}return r}const U_=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:Ve,getBroadcastDims:Do,getReductionAxes:Ty},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G_(n,e){let t=_(n,"a","equal","string_or_numeric"),r=_(e,"b","equal","string_or_numeric");[t,r]=mt(t,r),Ve(t.shape,r.shape);const s={a:t,b:r};return z.runKernel($l,s)}const Ey=M({equal_:G_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n,e,t){const r=_(e,"a","where"),s=_(t,"b","where"),o=_(n,"condition","where","bool"),a=Ve(Ve(o.shape,r.shape),s.shape),l=$a(o,a),u=$a(r,a),d=$a(s,a),p={condition:l,t:u,e:d};return z.runKernel(nf,p)}const ts=M({where_:H_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(n){const t={x:_(n,"x","zerosLike")};return z.runKernel($f,t)}const _n=M({zerosLike_:j_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_(n,e){let t=_(n,"a","div"),r=_(e,"b","div");[t,r]=mt(t,r);const s=at(t,r),o=_n(s),a=Ey(r,o);return ts(a,o,s)}const GS=M({divNoNan_:q_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(n,e){const t=_(n,"t1","dot"),r=_(e,"t2","dot");D((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const s=t.rank===1?t.size:t.shape[1],o=r.rank===1?r.size:r.shape[0];if(D(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),t.rank===1&&r.rank===1){const a=le(t,[1,-1]),l=le(r,[-1,1]),u=Ke(a,l);return le(u,[])}else if(t.rank===1&&r.rank===2){const a=le(t,[1,-1]),l=le(r,[r.shape[0],r.shape[1]]),u=Ke(a,l);return le(u,[u.size])}else if(t.rank===2&&r.rank===1){const a=le(r,[-1,1]),l=Ke(t,a);return le(l,[l.size])}else{const a=le(r,[r.shape[0],r.shape[1]]);return Ke(t,a)}}const HS=M({dot_:K_});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_(n,...e){const t=e.map((s,o)=>_(s,`tensors${o}`,"einsum")),r={equation:n};return z.runKernel(fp,t,r)}const vo=M({einsum_:X_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_(n){const t={x:_(n,"x","elu","float32")};return z.runKernel(bl,t)}const Ry=M({elu_:Y_});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(n,e){const t=_(n,"x","ensureShape","string_or_numeric");if(!$b(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const jS=M({ensureShape_:Q_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_(n){let e=_(n,"x","erf");D(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=it(e,"float32"));const t={x:e};return z.runKernel(Sl,t)}const qS=M({erf_:Z_});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _y(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function KS(n,e,t){const r=n.length+e.length,s=[];let o=0,a=0;for(let l=0;l<r;l++)t.indexOf(l)===-1?s.push(n[o++]):s.push(e[a++]);return s}function Gt(n,e){const t=[],r=n.length;for(let o=0;o<r;o++)e.indexOf(o)===-1&&t.push(n[o]);const s=e.map(o=>n[o]);return[t,s]}function Et(n,e){const t=e.map(r=>1);return KS(n,t,e)}function Ht(n,e,t){D(_y(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function bt(n,e){if(_y(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function yu(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function St(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J_(n,e=null,t=!1){const s={x:_(n,"x","max")},o={reductionIndices:e,keepDims:t};return z.runKernel(kp,s,o)}const Io=M({max_:J_});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(n,e=null,t=!1){const s={x:_(n,"x","min")},o={axis:e,keepDims:t};return z.runKernel(_p,s,o)}const yd=M({min_:eO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tO(n,e){let t=_(n,"base","pow"),r=_(e,"exp","pow");[t,r]=mt(t,r);const s={a:t,b:r};return z.runKernel(jl,s)}const Ta=M({pow_:tO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(n,e){if((At(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&At(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return qs(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nO(n){const t={x:_(n,"x","sqrt","float32")};return z.runKernel(su,t)}const Ar=M({sqrt_:nO});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(n){const e=_(n,"x","square"),t={};return z.runKernel("Square",{x:e},t)}const tr=M({square_:rO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sO(n,e=null,t=!1){let r=_(n,"x","sum");r.dtype==="bool"&&(r=it(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return z.runKernel(sf,s,o)}const ot=M({sum_:sO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oO(n,e="euclidean",t=null,r=!1){n=_(n,"x","norm");const s=XS(n,e,t);let o=s.shape;if(r){const a=ze(t,n.shape);o=Et(s.shape,a)}return le(s,o)}function XS(n,e,t=null){if(n.rank===0)return Tn(n);if(n.rank!==1&&t===null)return XS(le(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return ot(Tn(n),t);if(e===1/0)return Io(Tn(n),t);if(e===-1/0)return yd(Tn(n),t);if(e==="euclidean"||e===2)return Ar(ot(Ta(Tn(n),Be(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return Io(ot(Tn(n),t[0]),t[1]-1);if(e===1/0)return Io(ot(Tn(n),t[1]),t[0]);if(e===-1/0)return yd(ot(Tn(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Ar(ot(tr(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const xu=M({norm_:oO});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aO(n,e=null,t=!1){return xu(n,"euclidean",e,t)}const YS=M({euclideanNorm_:aO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iO(n){const t={x:_(n,"x","exp")};return z.runKernel(Cl,t)}const Ws=M({exp_:iO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lO(n,e=0){const t=_(n,"x","expandDims","string_or_numeric");D(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},s={dim:e};return z.runKernel(hp,r,s)}const Xr=M({expandDims_:lO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(n){const t={x:_(n,"x","expm1")};return z.runKernel(Nl,t)}const QS=M({expm1_:uO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cO(n,e){const t=_(n,"x","tile","string_or_numeric");D(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},s={reps:e};return z.runKernel(cu,r,s)}const Ca=M({tile_:cO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dO(n,e,t,r="float32"){e==null&&(e=n);const s=Fe([n,e],r),o=n<=e?n:e;for(let l=0;l<o;++l)s.set(1,l,l);const a=le(s.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return Ca(Xr(a,0),[t[0],1,1]);if(t.length===2)return Ca(Xr(Xr(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Ca(Xr(Xr(Xr(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Oy=M({eye_:dO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(n){const t={x:_(n,"x","floor","float32")};return z.runKernel(kl,t)}const Dy=M({floor_:pO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fO(n,e,t=0,r=0){const s=_(n,"x","gather"),o=_(e,"indices","gather","int32"),a={x:s,indices:o},l={axis:t,batchDims:r};return z.runKernel(vp,a,l)}const Ay=M({gather_:fO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hO(n,e){let t=_(n,"a","greater","string_or_numeric"),r=_(e,"b","greater","string_or_numeric");[t,r]=mt(t,r),Ve(t.shape,r.shape);const s={a:t,b:r};return z.runKernel(Tl,s)}const vu=M({greater_:hO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mO(n,e){let t=_(n,"a","greaterEqual","string_or_numeric"),r=_(e,"b","greaterEqual","string_or_numeric");[t,r]=mt(t,r),Ve(t.shape,r.shape);const s={a:t,b:r};return z.runKernel(El,s)}const Fy=M({greaterEqual_:mO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gO(n){const t={input:_(n,"input","imag")};return z.runKernel(Sp,t)}const wu=M({imag_:gO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(n){const t={x:_(n,"x","isFinite")};return z.runKernel(_l,t)}const ZS=M({isFinite_:yO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n){const t={x:_(n,"x","isInf")};return z.runKernel(Ol,t)}const JS=M({isInf_:xO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vO(n){const t={x:_(n,"x","isNaN")};return z.runKernel(Dl,t)}const e$=M({isNaN_:vO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wO(n,e=.2){const r={x:_(n,"x","leakyRelu")},s={alpha:e};return z.runKernel($p,r,s)}const Py=M({leakyRelu_:wO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bO(n,e){let t=_(n,"a","less","string_or_numeric"),r=_(e,"b","less","string_or_numeric");[t,r]=mt(t,r),Ve(t.shape,r.shape);const s={a:t,b:r};return z.runKernel(Al,s)}const xd=M({less_:bO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(n,e){let t=_(n,"a","lessEqual","string_or_numeric"),r=_(e,"b","lessEqual","string_or_numeric");[t,r]=mt(t,r),Ve(t.shape,r.shape);const s={a:t,b:r};return z.runKernel(Fl,s)}const Tf=M({lessEqual_:SO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const r={start:n,stop:e,num:t};return z.runKernel(Cp,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $O(n,e=5,t=1,r=1,s=.5){const o=_(n,"x","localResponseNormalization");D(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),D(To(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,l=!1;o.rank===3&&(l=!0,a=le(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:a},d={depthRadius:e,bias:t,alpha:r,beta:s},p=z.runKernel(Np,u,d);return l?le(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const n$=M({localResponseNormalization_:$O});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CO(n){const t={x:_(n,"x","log","float32")};return z.runKernel(Pl,t)}const Ea=M({log_:CO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(n){const t={x:_(n,"x","log1p")};return z.runKernel(Ll,t)}const Ly=M({log1p_:NO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(n){return D(Bs(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const r=_(e,"x","tf.grad","string_or_numeric"),s=t!=null?_(t,"dy","tf.grad"):null;return z.tidy(()=>{const{value:o,grads:a}=z.gradients(()=>n(r),[r],s);return s!=null&&Ut(o.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Ef(a),a[0]})}}function IO(n){return D(Bs(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{D(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Ki(e,"args","tf.grads","string_or_numeric"),s=t!=null?_(t,"dy","tf.grads"):null;return z.tidy(()=>{const{value:o,grads:a}=z.gradients(()=>n(...r),r,s);return s!=null&&Ut(o.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ef(a),a})}}function TO(n){return D(Bs(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{D(e instanceof xt,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),D(t==null||t instanceof xt,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=z.gradients(()=>n(e),[e],t);return Ef(r),{grad:r[0],value:s}}}function EO(n){return D(Bs(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{D(Array.isArray(e)&&e.every(s=>s instanceof xt),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),D(t==null||t instanceof xt,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=z.gradients(()=>n(...e),e,t);return t!=null&&Ut(r.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Ef(r.grads),r}}function r$(n,e){D(Bs(n),()=>"The f passed in variableGrads(f) must be a function"),D(e==null||Array.isArray(e)&&e.every(d=>d instanceof qi),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const d in z.registeredVariables)e.push(z.registeredVariables[d])}const r=t?e.filter(d=>!d.trainable):null,s=e.length;e=e.filter(d=>d.trainable),D(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const o=!0,{value:a,grads:l}=z.gradients(n,e,null,o);D(l.some(d=>d!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const u={};return e.forEach((d,p)=>{l[p]!=null&&(u[d.name]=l[p])}),r!=null&&r.forEach(d=>u[d.name]=null),{value:a,grads:u}}function Fr(n){return z.customGrad(n)}function Ef(n){if(n.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(n){const t={x:_(n,"x","neg")};return z.runKernel(Ap,t)}const vr=M({neg_:RO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _O(n){const t={x:_(n,"x","softplus")};return z.runKernel(ru,t)}const Vy=M({softplus_:_O});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(n){const e=_(n,"x","logSigmoid");return Fr(r=>({value:vr(Vy(vr(r))),gradFunc:a=>ve(a,ko(vr(r)))}))(e)}const s$=M({logSigmoid_:OO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(n,e){let t=_(n,"a","sub"),r=_(e,"b","sub");[t,r]=mt(t,r);const s={a:t,b:r};return z.runKernel(iu,s)}const Pe=M({sub_:DO});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(n,e=-1){const t=_(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Fr((s,o)=>{const l=Io(s,e,!0),u=Pe(s,l),d=Pe(it(u,"float32"),Ea(ot(Ws(u),e,!0)));return o([d]),{value:d,gradFunc:(f,m)=>{const[g]=m,y=!0,v=Ws(g);return Pe(f,ve(ot(f,e,y),v))}}})(t)}const o$=M({logSoftmax_:AO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(n,e=null,t=!1){const r=_(n,"x","logSumExp"),s=ze(e,r.shape),o=Io(r,s,!0),a=Pe(r,o),l=Ws(a),u=ot(l,s),d=Ea(u),p=Oe(le(o,d.shape),d);if(t){const f=Et(p.shape,s);return le(p,f)}return p}const By=M({logSumExp_:FO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PO(n,e){const t=_(n,"a","logicalAnd","bool"),r=_(e,"b","logicalAnd","bool");Ve(t.shape,r.shape);const s={a:t,b:r};return z.runKernel(Vl,s)}const Zi=M({logicalAnd_:PO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LO(n){const t={x:_(n,"x","logicalNot","bool")};return z.runKernel(Bl,t)}const My=M({logicalNot_:LO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VO(n,e){const t=_(n,"a","logicalOr","bool"),r=_(e,"b","logicalOr","bool");Ve(t.shape,r.shape);const s={a:t,b:r};return z.runKernel(Ml,s)}const zy=M({logicalOr_:VO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BO(n,e){const t=_(n,"a","logicalXor","bool"),r=_(e,"b","logicalXor","bool");return Ve(t.shape,r.shape),Zi(zy(n,e),My(Zi(n,e)))}const a$=M({logicalXor_:BO});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zc=2147483648;function MO(n,e,t="left"){const r=_(n,"sortedSequence","searchSorted"),s=_(e,"values","searchSorted"),o=r.shape[r.shape.length-1],a=s.shape[s.shape.length-1],l=le(r,[-1,o]),u=le(s,[-1,a]);if(l.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(l.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(oe(u.shape)>=zc)throw new Error(`values tensor size must less than ${zc}`);if(l.shape[1]>=zc)throw new Error(`trailing dim_size must less than ${zc} for int32 output type, was ${l.shape[1]}`);const d={sortedSequence:l,values:u},p={side:t};return z.runKernel(tf,d,p)}const Rf=M({searchSorted_:MO});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(n,e){return Rf(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zO(n,e,t,r,s){const o=_(n,"x","maxPool"),a=1;let l=o,u=!1;o.rank===3&&(u=!0,l=le(o,[1,o.shape[0],o.shape[1],o.shape[2]])),D(l.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`),D(Zt(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),rr("maxPool",r,s);const d={x:l},p={filterSize:e,strides:t,pad:r,dimRoundingMode:s},f=z.runKernel(Ip,d,p);return u?le(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Wy=M({maxPool_:zO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WO(n,e=[1,1,1],t,r,s,o="NDHWC"){const a=_(n,"x","maxPool3d");let l=a,u=!1;a.rank===4&&(u=!0,l=le(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),D(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),D(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),rr("maxPool3d",r,s);const d={x:l},p={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o},f=z.runKernel(Tp,d,p);return u?le(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const l$=M({maxPool3d_:WO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UO(n,e,t,r,s=!1){const a={x:_(n,"x","maxPoolWithArgmax")},l={filterSize:e,strides:t,pad:r,includeBatchInIndex:s},u=z.runKernel(Ep,a,l);return{result:u[0],indexes:u[1]}}const u$=M({maxPoolWithArgmax_:UO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GO(n,e){let t=_(n,"a","maximum"),r=_(e,"b","maximum");[t,r]=mt(t,r),t.dtype==="bool"&&(t=it(t,"int32"),r=it(r,"int32")),Ve(t.shape,r.shape);const s={a:t,b:r};return z.runKernel(zl,s)}const Uy=M({maximum_:GO});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HO(n,e=null,t=!1){const s={x:_(n,"x","mean")},o={axis:e,keepDims:t};return z.runKernel(Rp,s,o)}const Ji=M({mean_:HO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Us(n,e="float32"){if(Dn(n),e==="complex64"){const r=Us(n,"float32"),s=Us(n,"float32");return rs(r,s)}const t=Wt(oe(n),e);return z.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fs(n,e="float32"){if(Dn(n),e==="complex64"){const r=Fs(n,"float32"),s=Us(n,"float32");return rs(r,s)}const t=Fd(oe(n),e);return z.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c$(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let r=_(n,"x","meshgrid",n instanceof xt?n.dtype:"float32");if(e===void 0)return[r];let s=_(e,"y","meshgrid",e instanceof xt?e.dtype:"float32");const o=oe(r.shape),a=oe(s.shape);return t==="xy"?(r=le(r,[1,-1]),s=le(s,[-1,1]),[Ke(Fs([a,1],r.dtype),r),Ke(s,Fs([1,o],s.dtype))]):(r=le(r,[-1,1]),s=le(s,[1,-1]),[Ke(r,Fs([1,a],r.dtype)),Ke(Fs([o,1],s.dtype),s)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jO(n,e){let t=_(n,"a","minimum"),r=_(e,"b","minimum");[t,r]=mt(t,r),t.dtype==="bool"&&(t=it(t,"int32"),r=it(r,"int32")),Ve(t.shape,r.shape);const s={a:t,b:r};return z.runKernel(Wl,s)}const el=M({minimum_:jO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qO(n,e,t){D(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=_(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=t==="reflect"?1:0;for(let l=0;l<r.rank;l++)D(e[l].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(e[l][0]>=0&&e[l][0]<=r.shape[l]-s&&e[l][1]>=0&&e[l][1]<=r.shape[l]-s,()=>`Padding in dimension ${l} cannot be greater than or equal to ${r.shape[l]-s} or less than 0 for input of shape ${r.shape}`);const o={paddings:e,mode:t},a={x:r};return z.runKernel(Op,a,o)}const d$=M({mirrorPad_:qO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KO(n,e){let t=_(n,"a","mod"),r=_(e,"b","mod");[t,r]=mt(t,r);const s={a:t,b:r};return z.runKernel(Ul,s)}const p$=M({mod_:KO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XO(n,e=null,t=!1){n=_(n,"x","moments");const r=ze(e,n.shape),s=Ji(n,r,t);let o=s.shape;t||(o=Et(s.shape,r));const a=tr(Pe(it(n,"float32"),le(s,o))),l=Ji(a,r,t);return{mean:s,variance:l}}const f$=M({moments_:XO});function YO(n,e,t,r){const s=_(e,"data","multiRNNCell"),o=Ki(t,"c","multiRNNCell"),a=Ki(r,"h","multiRNNCell");let l=s;const u=[];for(let f=0;f<n.length;f++){const m=n[f](l,o[f],a[f]);u.push(m[0]),u.push(m[1]),l=m[1]}const d=[],p=[];for(let f=0;f<u.length;f+=2)d.push(u[f]),p.push(u[f+1]);return[d,p]}const h$=M({multiRNNCell_:YO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QO(n,e,t,r=!1){const s=_(n,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const u={logits:a===1?le(s,[1,-1]):s},d={numSamples:e,seed:t,normalized:r},p=z.runKernel(Dp,u,d);return a===1?le(p,[p.size]):p}const m$=M({multinomial_:QO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZO(n,e){let t=_(n,"a","notEqual","string_or_numeric"),r=_(e,"b","notEqual","string_or_numeric");[t,r]=mt(t,r),Ve(t.shape,r.shape);const s={a:t,b:r};return z.runKernel(Hl,s)}const Gy=M({notEqual_:ZO});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JO(n,e,t=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:_(n,"indices","oneHot","int32")},l={dtype:s,depth:e,onValue:t,offValue:r};return z.runKernel(Bp,a,l)}const vd=M({oneHot_:JO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eD(n){const t={x:_(n,"x","onesLike")};return z.runKernel(Vp,t)}const g$=M({onesLike_:eD});function tD(n,e){const t=_(n,"v1","outerProduct"),r=_(e,"v2","outerProduct");D(t.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${r.rank}.`);const s=le(t,[-1,1]),o=le(r,[1,-1]);return Ke(s,o)}const y$=M({outerProduct_:tD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(n,e,t=0){const r=_(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:t},o={x:r};return z.runKernel(zp,o,s)}const Ma=M({pad_:nD});function rD(n,e,t=0){return D(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Ma(n,[e],t)}const x$=M({pad1d_:rD});function sD(n,e,t=0){return D(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ma(n,e,t)}const v$=M({pad2d_:sD});function oD(n,e,t=0){return D(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ma(n,e,t)}const w$=M({pad3d_:oD});function aD(n,e,t=0){return D(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ma(n,e,t)}const b$=M({pad4d_:aD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n,e,t){const r=_(n,"x","spaceToBatchND");D(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),D(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),D(r.shape.reduce((a,l,u)=>u>0&&u<=e.length?a&&(l+t[u-1][0]+t[u-1][1])%e[u-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},o={blockShape:e,paddings:t};return z.runKernel(of,s,o)}const Hy=M({spaceToBatchND_:iD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n,e,t,r,s,o,a){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");const l=_(n,"x","maxPool");let u=l,d=!1;l.rank===3&&(d=!0,u=le(l,[1,l.shape[0],l.shape[1],l.shape[2]])),D(Zt(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const p=nr(u.shape,e,o,s,r),f=[p.dilationHeight,p.dilationWidth];let m;r==="same"?m=cD([p.filterHeight,p.filterWidth],f):m=[[0,0],[0,0]];const g=f[0]===1&&f[1]===1,[y,v]=uD([p.inHeight,p.inWidth],f,m),w=g?r:"valid",b=g?u:Hy(u,f,y),I=(t==="avg"?()=>Ny(b,e,o,w,a):()=>Wy(b,e,o,w,a))(),k=g?I:ky(I,f,v);return d?le(k,[k.shape[1],k.shape[2],k.shape[3]]):k}function uD(n,e,t){const r=t.map(p=>p[0]),s=t.map(p=>p[1]),o=n.concat(r,s),a=e.map((p,f)=>(p-o[f]%p)%p),l=s.map((p,f)=>p+a[f]),u=e.map((p,f)=>[r[f],l[f]]),d=e.map((p,f)=>[0,a[f]]);return[u,d]}function cD(n,e){const r=n.map((a,l)=>a+(a-1)*(e[l]-1)).map(a=>a-1),s=r.map(a=>Math.floor(a/2)),o=r.map((a,l)=>a-s[l]);return r.map((a,l)=>[s[l],o[l]])}const S$=M({pool_:lD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(n,e){const t=_(n,"x","prelu"),r=_(e,"alpha","prelu"),s={x:t,alpha:r};return z.runKernel(Wp,s)}const jy=M({prelu_:dD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pD(n,e=null,t=!1){let r=_(n,"x","prod");r.dtype==="bool"&&(r=it(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return z.runKernel(Up,s,o)}const $$=M({prod_:pD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fD(n,e,t,r){const s=n.map((p,f)=>_(p,`tensors${f}`,"raggedGather","int32")),o=_(e,"paramsDenseValues","raggedGather"),a=_(t,"indices","raggedGather","int32"),l={paramsNestedSplits:s,paramsDenseValues:o,indices:a},u={outputRaggedRank:r},d=z.runKernel(Gp,l,u);return{outputNestedSplits:d.slice(0,d.length-1),outputDenseValues:d[d.length-1]}}const C$=M({raggedGather_:fD});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hD(n,e,t){const r=_(n,"starts","raggedRange"),s=_(e,"limits","raggedRange",r.dtype),o=_(t,"deltas","raggedRange",r.dtype),a={starts:r,limits:s,deltas:o},l=z.runKernel(Hp,a);return{rtNestedSplits:l[0],rtDenseValues:l[1]}}const N$=M({raggedRange_:hD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(n,e,t,r,s){const o=_(n,"shape","raggedTensorToTensor","int32"),a=_(e,"values","raggedTensorToTensor"),l=_(t,"defaultValue","raggedTensorToTensor",a.dtype),u=r.map((f,m)=>_(f,`tensors${m}`,"raggedTensorToTensor","int32")),d={shape:o,values:a,defaultValue:l,rowPartitionTensors:u},p={rowPartitionTypes:s};return z.runKernel(jp,d,p)}const k$=M({raggedTensorToTensor_:mD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gD(n,e,t){Dn(n);const r=oe(n);let s=null;if(t==null||t==="float32")s=new Float32Array(r);else if(t==="int32")s=new Int32Array(r);else if(t==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<r;o++)s[o]=e();return z.makeTensor(s,n,t)}const I$=M({rand_:gD});var ed={exports:{}},yD=ed.exports,hw;function xD(){return hw||(hw=1,function(n){(function(e,t,r){function s(u){var d=this,p=l();d.next=function(){var f=2091639*d.s0+d.c*23283064365386963e-26;return d.s0=d.s1,d.s1=d.s2,d.s2=f-(d.c=f|0)},d.c=1,d.s0=p(" "),d.s1=p(" "),d.s2=p(" "),d.s0-=p(u),d.s0<0&&(d.s0+=1),d.s1-=p(u),d.s1<0&&(d.s1+=1),d.s2-=p(u),d.s2<0&&(d.s2+=1),p=null}function o(u,d){return d.c=u.c,d.s0=u.s0,d.s1=u.s1,d.s2=u.s2,d}function a(u,d){var p=new s(u),f=d&&d.state,m=p.next;return m.int32=function(){return p.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,f&&(typeof f=="object"&&o(f,p),m.state=function(){return o(p,{})}),m}function l(){var u=4022871197,d=function(p){p=String(p);for(var f=0;f<p.length;f++){u+=p.charCodeAt(f);var m=.02519603282416938*u;u=m>>>0,m-=u,m*=u,u=m>>>0,m-=u,u+=m*4294967296}return(u>>>0)*23283064365386963e-26};return d}t&&t.exports?t.exports=a:this.alea=a})(yD,n)}(ed)),ed.exports}var td={exports:{}},vD=td.exports,mw;function wD(){return mw||(mw=1,function(n){(function(e,t,r){function s(l){var u=this,d="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var f=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^f^f>>>8},l===(l|0)?u.x=l:d+=l;for(var p=0;p<d.length+64;p++)u.x^=d.charCodeAt(p)|0,u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function a(l,u){var d=new s(l),p=u&&u.state,f=function(){return(d.next()>>>0)/4294967296};return f.double=function(){do var m=d.next()>>>11,g=(d.next()>>>0)/4294967296,y=(m+g)/(1<<21);while(y===0);return y},f.int32=d.next,f.quick=f,p&&(typeof p=="object"&&o(p,d),f.state=function(){return o(d,{})}),f}t&&t.exports?t.exports=a:this.xor128=a})(vD,n)}(td)),td.exports}var nd={exports:{}},bD=nd.exports,gw;function SD(){return gw||(gw=1,function(n){(function(e,t,r){function s(l){var u=this,d="";u.next=function(){var f=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(f^f<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:d+=l;for(var p=0;p<d.length+64;p++)u.x^=d.charCodeAt(p)|0,p==d.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function a(l,u){var d=new s(l),p=u&&u.state,f=function(){return(d.next()>>>0)/4294967296};return f.double=function(){do var m=d.next()>>>11,g=(d.next()>>>0)/4294967296,y=(m+g)/(1<<21);while(y===0);return y},f.int32=d.next,f.quick=f,p&&(typeof p=="object"&&o(p,d),f.state=function(){return o(d,{})}),f}t&&t.exports?t.exports=a:this.xorwow=a})(bD,n)}(nd)),nd.exports}var rd={exports:{}},$D=rd.exports,yw;function CD(){return yw||(yw=1,function(n){(function(e,t,r){function s(l){var u=this;u.next=function(){var p=u.x,f=u.i,m,g;return m=p[f],m^=m>>>7,g=m^m<<24,m=p[f+1&7],g^=m^m>>>10,m=p[f+3&7],g^=m^m>>>3,m=p[f+4&7],g^=m^m<<7,m=p[f+7&7],m=m^m<<13,g^=m^m<<9,p[f]=g,u.i=f+1&7,g};function d(p,f){var m,g=[];if(f===(f|0))g[0]=f;else for(f=""+f,m=0;m<f.length;++m)g[m&7]=g[m&7]<<15^f.charCodeAt(m)+g[m+1&7]<<13;for(;g.length<8;)g.push(0);for(m=0;m<8&&g[m]===0;++m);for(m==8?g[7]=-1:g[m],p.x=g,p.i=0,m=256;m>0;--m)p.next()}d(u,l)}function o(l,u){return u.x=l.x.slice(),u.i=l.i,u}function a(l,u){l==null&&(l=+new Date);var d=new s(l),p=u&&u.state,f=function(){return(d.next()>>>0)/4294967296};return f.double=function(){do var m=d.next()>>>11,g=(d.next()>>>0)/4294967296,y=(m+g)/(1<<21);while(y===0);return y},f.int32=d.next,f.quick=f,p&&(p.x&&o(p,d),f.state=function(){return o(d,{})}),f}t&&t.exports?t.exports=a:this.xorshift7=a})($D,n)}(rd)),rd.exports}var sd={exports:{}},ND=sd.exports,xw;function kD(){return xw||(xw=1,function(n){(function(e,t,r){function s(l){var u=this;u.next=function(){var p=u.w,f=u.X,m=u.i,g,y;return u.w=p=p+1640531527|0,y=f[m+34&127],g=f[m=m+1&127],y^=y<<13,g^=g<<17,y^=y>>>15,g^=g>>>12,y=f[m]=y^g,u.i=m,y+(p^p>>>16)|0};function d(p,f){var m,g,y,v,w,b=[],$=128;for(f===(f|0)?(g=f,f=null):(f=f+"\0",g=0,$=Math.max($,f.length)),y=0,v=-32;v<$;++v)f&&(g^=f.charCodeAt((v+32)%f.length)),v===0&&(w=g),g^=g<<10,g^=g>>>15,g^=g<<4,g^=g>>>13,v>=0&&(w=w+1640531527|0,m=b[v&127]^=g+w,y=m==0?y+1:0);for(y>=128&&(b[(f&&f.length||0)&127]=-1),y=127,v=4*128;v>0;--v)g=b[y+34&127],m=b[y=y+1&127],g^=g<<13,m^=m<<17,g^=g>>>15,m^=m>>>12,b[y]=g^m;p.w=w,p.X=b,p.i=y}d(u,l)}function o(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function a(l,u){l==null&&(l=+new Date);var d=new s(l),p=u&&u.state,f=function(){return(d.next()>>>0)/4294967296};return f.double=function(){do var m=d.next()>>>11,g=(d.next()>>>0)/4294967296,y=(m+g)/(1<<21);while(y===0);return y},f.int32=d.next,f.quick=f,p&&(p.X&&o(p,d),f.state=function(){return o(d,{})}),f}t&&t.exports?t.exports=a:this.xor4096=a})(ND,n)}(sd)),sd.exports}var od={exports:{}},ID=od.exports,vw;function TD(){return vw||(vw=1,function(n){(function(e,t,r){function s(l){var u=this,d="";u.next=function(){var f=u.b,m=u.c,g=u.d,y=u.a;return f=f<<25^f>>>7^m,m=m-g|0,g=g<<24^g>>>8^y,y=y-f|0,u.b=f=f<<20^f>>>12^m,u.c=m=m-g|0,u.d=g<<16^m>>>16^y,u.a=y-f|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):d+=l;for(var p=0;p<d.length+20;p++)u.b^=d.charCodeAt(p)|0,u.next()}function o(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function a(l,u){var d=new s(l),p=u&&u.state,f=function(){return(d.next()>>>0)/4294967296};return f.double=function(){do var m=d.next()>>>11,g=(d.next()>>>0)/4294967296,y=(m+g)/(1<<21);while(y===0);return y},f.int32=d.next,f.quick=f,p&&(typeof p=="object"&&o(p,d),f.state=function(){return o(d,{})}),f}t&&t.exports?t.exports=a:this.tychei=a})(ID,n)}(od)),od.exports}var ad={exports:{}};const ED={},RD=Object.freeze(Object.defineProperty({__proto__:null,default:ED},Symbol.toStringTag,{value:"Module"})),_D=Yg(RD);var OD=ad.exports,ww;function DD(){return ww||(ww=1,function(n){(function(e,t,r){var s=256,o=6,a=52,l="random",u=r.pow(s,o),d=r.pow(2,a),p=d*2,f=s-1,m;function g(k,T,O){var A=[];T=T==!0?{entropy:!0}:T||{};var V=b(w(T.entropy?[k,I(t)]:k??$(),3),A),P=new y(A),F=function(){for(var E=P.g(o),W=u,j=0;E<d;)E=(E+j)*s,W*=s,j=P.g(1);for(;E>=p;)E/=2,W/=2,j>>>=1;return(E+j)/W};return F.int32=function(){return P.g(4)|0},F.quick=function(){return P.g(4)/4294967296},F.double=F,b(I(P.S),t),(T.pass||O||function(E,W,j,Y){return Y&&(Y.S&&v(Y,P),E.state=function(){return v(P,{})}),j?(r[l]=E,W):E})(F,V,"global"in T?T.global:this==r,T.state)}function y(k){var T,O=k.length,A=this,V=0,P=A.i=A.j=0,F=A.S=[];for(O||(k=[O++]);V<s;)F[V]=V++;for(V=0;V<s;V++)F[V]=F[P=f&P+k[V%O]+(T=F[V])],F[P]=T;(A.g=function(E){for(var W,j=0,Y=A.i,Q=A.j,Z=A.S;E--;)W=Z[Y=f&Y+1],j=j*s+Z[f&(Z[Y]=Z[Q=f&Q+W])+(Z[Q]=W)];return A.i=Y,A.j=Q,j})(s)}function v(k,T){return T.i=k.i,T.j=k.j,T.S=k.S.slice(),T}function w(k,T){var O=[],A=typeof k,V;if(T&&A=="object")for(V in k)try{O.push(w(k[V],T-1))}catch{}return O.length?O:A=="string"?k:k+"\0"}function b(k,T){for(var O=k+"",A,V=0;V<O.length;)T[f&V]=f&(A^=T[f&V]*19)+O.charCodeAt(V++);return I(T)}function $(){try{var k;return m&&(k=m.randomBytes)?k=k(s):(k=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(k)),I(k)}catch{var T=e.navigator,O=T&&T.plugins;return[+new Date,e,O,e.screen,I(t)]}}function I(k){return String.fromCharCode.apply(0,k)}if(b(r.random(),t),n.exports){n.exports=g;try{m=_D}catch{}}else r["seed"+l]=g})(typeof self<"u"?self:OD,[],Math)}(ad)),ad.exports}var ng,bw;function AD(){if(bw)return ng;bw=1;var n=xD(),e=wD(),t=SD(),r=CD(),s=kD(),o=TD(),a=DD();return a.alea=n,a.xor128=e,a.xorwow=t,a.xorshift7=r,a.xor4096=s,a.tychei=o,ng=a,ng}var _f=AD();/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FD=.001,T$=.1;function PD(n,e,t){return t==null&&(t=qy()),Ig(n,e,(r,s)=>Ky(r,s,t))}function qy(){return z.backend.floatPrecision()===32?FD:T$}function Ig(n,e,t){let r=!0;if((At(n)||At(e))&&(r=!1),At(n)&&At(e)&&(r=!0),r){const a=n.constructor.name,l=e.constructor.name;if(a!==l)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${l}`)}if(Array.isArray(n)&&Array.isArray(e)){const a=Dr(n),l=Dr(e);if(!Ze(a,l))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${l}]`)}const s=At(n)?n:Or(n),o=At(e)?e:Or(e);if(s.length!==o.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${o.length}.
Actual:   ${s}.
Expected: ${o}.`);for(let a=0;a<o.length;++a){const l=s[a],u=o[a];if(!t(l,u))throw new Error(`Arrays differ: actual[${a}] = ${l}, expected[${a}] = ${u}.
Actual:   ${s}.
Expected: ${o}.`)}typeof expect<"u"&&expect().nothing()}function LD(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function VD(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return Tr(n)||Tr(n[0])||Tr(e)||Tr(e[0])?Ig(n,t,(r,s)=>r==s):Ig(n,e,(r,s)=>Ky(r,s,0))}function BD(n,e,t){if(t==null&&(t=qy()),!Ky(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function Ky(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function MD(n,e,t){for(let r=0;r<n.length;r++)if(n[r]<e||n[r]>t)throw new Error(`Value out of range:${n[r]} low: ${e}, high: ${t}`)}function zD(n,e){const t=new Float32Array(n),r=new Float32Array(e);if(t.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${t.length}`);for(let s=0;s<r.length;s++)if(t[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${t[s]} instead`)}function E$(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?E$(t):n[e]=Rr(t)}return n}function WD(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",r=>t(e)),e.load()})}async function UD(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const GD=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:T$,createVideoElement:WD,encodeStrings:E$,expectArrayBuffersEqual:zD,expectArraysClose:PD,expectArraysEqual:VD,expectNumbersClose:BD,expectPromiseToFail:LD,expectValuesInRange:MD,play:UD,testEpsilon:qy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xy{constructor(e,t,r,s,o){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=_f.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,t,r=!1;for(;!r;){let s,o,a;do s=2*this.random()-1,o=2*this.random()-1,a=s*s+o*o;while(a>=1||a===0);const l=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*l,t=this.mean+this.stdDev*o*l,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class HD{constructor(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;const o=s||Math.random();this.randu=_f.alea(o.toString()),this.randn=new Xy(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,s,o,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,r=.5*e+this.d*(1-a+Math.log(a)),o=this.randu(),o<t||Math.log(o)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class jD{constructor(e=0,t=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=_f.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qD(n,e,t=1,r="float32",s){if(Dn(n),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const o=new HD(e,t,r,s),a=Fe(n,r);for(let l=0;l<a.values.length;l++)a.values[l]=o.nextValue();return a.toTensor()}const R$=M({randomGamma_:qD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KD(n,e=0,t=1,r,s){if(Dn(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const o=new Xy(e,t,r,!1,s),a=Fe(n,r);for(let l=0;l<a.values.length;l++)a.values[l]=o.nextValue();return a.toTensor()}const Yy=M({randomNormal_:KD});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Yy(n,0,1,e,t)}const _$=M({randomStandardNormal_:XD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YD(n,e=0,t=1,r="float32",s){Dn(n);const o=Fe(n,r),a=new jD(e,t,null,s);for(let l=0;l<o.values.length;l++)o.values[l]=a.nextValue();return o.toTensor()}const Of=M({randomUniform_:YD});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(n,e,t,r){return Of(n,e,t,"int32",r)}const O$=M({randomUniformInt_:QD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ra(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const s={start:n,stop:e,step:t,dtype:r};return z.runKernel(qp,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(n){const t={input:_(n,"input","real")};return z.runKernel(Kp,t)}const _a=M({real_:ZD});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JD(n){const t={x:_(n,"x","reciprocal")};return z.runKernel(ql,t)}const D$=M({reciprocal_:JD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(n){const t={x:_(n,"x","relu")};return z.runKernel(Kl,t)}const bu=M({relu_:eA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n){const t={x:_(n,"x","relu6")};return z.runKernel(Xl,t)}const Qy=M({relu6_:tA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n,e){const r={x:_(n,"x","reverse")},s={dims:e};return z.runKernel(Zp,r,s)}const Gs=M({reverse_:nA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rA(n){const e=_(n,"x","reverse");return D(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Gs(e,0)}const A$=M({reverse1d_:rA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(n,e){const t=_(n,"x","reverse");return D(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Gs(t,e)}const F$=M({reverse2d_:sA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oA(n,e){const t=_(n,"x","reverse");return D(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Gs(t,e)}const P$=M({reverse3d_:oA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(n,e){const t=_(n,"x","reverse");return D(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Gs(t,e)}const L$=M({reverse4d_:aA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iA(n){const t={x:_(n,"x","round")};return z.runKernel(Yl,t)}const Zy=M({round_:iA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n){const t={x:_(n,"x","rsqrt","float32")};return z.runKernel(Ql,t)}const V$=M({rsqrt_:lA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(n){const t={x:_(n,"x","selu")};return z.runKernel(Zl,t)}const B$=M({selu_:uA});function cA(n,e,t,r,s,o=[1,1],a="NHWC"){const l=_(n,"x","separableConv2d"),u=_(e,"depthwiseFilter","separableConv2d"),d=_(t,"pointwiseFilter","separableConv2d");let p=l,f=!1;if(l.rank===3&&(f=!0,p=le(l,[1,l.shape[0],l.shape[1],l.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(p.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),D(d.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),D(d.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${d.shape[0]}.`),D(d.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${d.shape[1]}.`);const m=u.shape[2],g=u.shape[3];D(d.shape[2]===m*g,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*g}, but got ${d.shape[2]}.`);const y=If(p,u,r,s,a,o),w=gu(y,d,1,"valid",a);return f?le(w,[w.shape[1],w.shape[2],w.shape[3]]):w}const M$=M({separableConv2d_:cA});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function dA(n,e){const t=_(n,"x","setdiff1d"),r=_(e,"y","setdiff1d");D(t.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${r.dtype}).`),D(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),D(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await t.data(),o=await r.data(),a=new Set(o);let l=0;for(let p=0;p<s.length;p++)a.has(s[p])||l++;const u=new kt([l],t.dtype),d=new kt([l],"int32");for(let p=0,f=0;p<s.length;p++)a.has(s[p])||(u.values[f]=s[p],d.values[f]=p,f++);return[u.toTensor(),d.toTensor()]}const z$=dA;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pA(n){const t={x:_(n,"x","sign")};return z.runKernel(tu,t)}const W$=M({sign_:pA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fA(n){const t={x:_(n,"x","sin","float32")};return z.runKernel(Jl,t)}const U$=M({sin_:fA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hA(n){const t={x:_(n,"x","sinh")};return z.runKernel(eu,t)}const G$=M({sinh_:hA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mA(n,e,t){const r=_(n,"x","slice1d");return D(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),nt(r,[e],[t])}const H$=M({slice1d_:mA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(n,e,t){const r=_(n,"x","slice2d");return D(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),nt(r,e,t)}const j$=M({slice2d_:gA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yA(n,e,t){const r=_(n,"x","slice3d");return D(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),nt(r,e,t)}const q$=M({slice3d_:yA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(n,e,t){const r=_(n,"x","slice4d");return D(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),nt(r,e,t)}const K$=M({slice4d_:xA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(n,e=-1){const t=_(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},s={dim:e};return z.runKernel(lf,r,s)}const X$=M({softmax_:vA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wA(n){D(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return z.runKernel(mp,e)}const Df=M({fft_:wA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(n){D(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return z.runKernel(bp,e)}const tl=M({ifft_:bA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const s=le(n,[t,e]);r=tl(s)}else{const s=[t,2*(e-1)],o=le(_a(n),[t,e]),a=le(wu(n),[t,e]),l=Gs(nt(o,[0,1],[t,e-2]),1),u=ve(Gs(nt(a,[0,1],[t,e-2]),1),Be(-1)),d=Qt([o,l],1),p=Qt([a,u],1),f=le(rs(d,p),[s[0],s[1]]);r=tl(f)}if(r=_a(r),n.rank===3&&n.shape[0]!==0){const s=r,o=n.shape[0];r=le(r,[o,r.shape[0]/o,r.shape[1]]),s.dispose()}return r}const Jy=M({irfft_:SA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(n,e,t=0){const s={x:_(n,"x","split")},o={numOrSizeSplits:e,axis:t};return z.runKernel(af,s,o)}const Oa=M({split_:$A});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n,e){D(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let s;if(e!=null&&e<t){const y=n.shape.map(w=>0),v=n.shape.map(w=>w);v[n.shape.length-1]=e,s=nt(n,y,v),t=e}else if(e!=null&&e>t){const y=n.shape.map(v=>v);y[n.shape.length-1]=e-t,s=Qt([n,Us(y)],n.shape.length-1),t=e}else s=n;const o=_n(s),a=le(rs(s,o),[r,t]),l=Df(a),u=Math.floor(t/2)+1,d=_a(l),p=wu(l),f=Oa(d,[u,t-u],d.shape.length-1),m=Oa(p,[u,t-u],p.shape.length-1),g=s.shape.slice();return g[s.shape.length-1]=u,le(rs(f[0],m[0]),g)}const Af=M({rfft_:CA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n,e){let t=_(n,"a","squaredDifference"),r=_(e,"b","squaredDifference");[t,r]=mt(t,r),Ve(t.shape,r.shape);const s={a:t,b:r},o={};return z.runKernel(ou,s,o)}const ex=M({squaredDifference_:NA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kA(n,e){const t=_(n,"x","squeeze","string_or_numeric");return le(t,as(t.shape,e).newShape)}const Ff=M({squeeze_:kA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n,e=0){const t=Ki(n,"tensors","stack","string_or_numeric");D(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&D(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,s={axis:e};return z.runKernel(Mp,r,s)}const Pr=M({stack_:IA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n,e=0){const r={x:_(n,"x","step")},s={alpha:e};return z.runKernel(du,r,s)}const tx=M({step_:TA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EA(n,e,t,r,s=0,o=0,a=0,l=0,u=0){const p={x:_(n,"x","stridedSlice","string_or_numeric")},f={begin:e,end:t,strides:r,beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:l,shrinkAxisMask:u};return z.runKernel(hf,p,f)}const Y$=M({stridedSlice_:EA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n){const t={x:_(n,"x","tan","float32")};return z.runKernel(lu,t)}const Q$=M({tan_:RA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zn(n,e){Mo(n);const t=Dr(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return qs(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(n,e,t){if(Mo(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=Dr(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return qs(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nx(n,e,t){if(Mo(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=Dr(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return qs(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n,e,t){if(Mo(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=Dr(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return qs(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(n,e,t){if(Mo(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=Dr(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return qs(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e2(n,e,t){if(Mo(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=Dr(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,qs(n,e,r,t)}function rx(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(t.rank<s)throw new Error(o+` update.rank < ${s}. `);if(n.length<r+(t.rank-s))throw new Error(o+` Output shape length < ${r+(t.rank-s)}`);if(t.rank!==s+n.length-r)throw new Error(o+` update.rank != ${s+n.length-r}`);for(let a=0;a<s;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-s;++a)if(t.shape[a+s]!==n[a+r])throw new Error(o+` updates.shape[${a+s}] (${t.shape[a+s]}) != shape[${a+s}] (${n[a+s]})`)}function Pf(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}rx(t,e,n)}function Xs(n,e,t){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=t.length;let a=1;for(let f=s;f<o;++f)a*=t[f];const l=s<1?1:s,u=oe(e.shape)/l,d=[...Te(t.slice(0,s)),1],p=oe(t);return{sliceRank:s,numUpdates:u,sliceSize:a,strides:d,outputSize:p}}const _A=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:Xs,validateInput:Pf,validateUpdateShape:rx},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OA(n,e,t){const r=_(n,"tensor","tensorScatterupdate"),s=_(e,"indices","tensorScatterupdate","int32"),o=_(t,"updates","tensorScatterupdate");if(Pf(o,s,r.shape),r.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${o.dtype}.`);const a={tensor:r,indices:s,updates:o},l={};return z.runKernel(ef,a,l)}const t2=M({tensorScatterUpdate_:OA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DA(n,e=1,t=!0){const r=_(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const o={x:r},a={k:e,sorted:t},[l,u]=z.runKernel(xf,o,a);return{values:l,indices:u}}const n2=M({topk_:DA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AA(n,e=0,t=1,r,s){if(Dn(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new Xy(e,t,r,!0,s),a=Fe(n,r);for(let l=0;l<a.values.length;l++)a.values[l]=o.nextValue();return a.toTensor()}const r2=M({truncatedNormal_:AA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FA(n,e=0){const t=_(n,"x","unique","string_or_numeric");D(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},s={axis:e},[o,a]=z.runKernel(wf,r,s);return{values:o,indices:a}}const s2=M({unique_:FA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PA(n,e,t){const r=_(n,"x","unsortedSegmentSum"),s=_(e,"segmentIds","unsortedSegmentSum","int32");D(To(t),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},a={numSegments:t};return z.runKernel(Sf,o,a)}const o2=M({unsortedSegmentSum_:PA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LA(n,e=0){const t=_(n,"x","unstack","string_or_numeric");D(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},s={axis:e};return z.runKernel(bf,r,s)}const Ys=M({unstack_:LA});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a2(n,e){return Rf(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i2(n,e=!0,t,r){return z.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lf(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const r=Fe(n,"int32"),s=Fe([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const a=r.indexToLoc(t[o]),l=o*n.length;s.values.set(a,l)}return s.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function VA(n){const e=_(n,"condition","whereAsync","bool"),t=await e.data(),r=Lf(e.shape,t);return n!==e&&e.dispose(),r}const sx=VA;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function BA(n,e,t){const r=_(n,"tensor","boolMask"),s=_(e,"mask","boolMask","bool"),o=t??0,a=s.rank,l=r.shape;D(a>0,()=>"mask cannot be scalar"),Ut(l.slice(o,o+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let v=o;v<o+a;v++)u*=l[v];const d=l.slice(0,o).concat([u],l.slice(o+a)),p=le(r,d),f=le(s,[-1]),m=await sx(f),g=Ff(m,[1]),y=Ay(p,g,o);return n!==r&&r.dispose(),e!==s&&s.dispose(),g.dispose(),p.dispose(),f.dispose(),m.dispose(),y}const l2=BA;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MA(n,e,t){const r=_(n,"x","transpose");if(e==null&&(e=r.shape.map((a,l)=>l).reverse()),D(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{D(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},o={perm:e};return r.dtype==="complex64"?Ge(()=>{let a=_a(r),l=wu(r);return a=z.runKernel(wa,{x:a},o),l=z.runKernel(wa,{x:l},o),t&&(l=vr(l)),rs(a,l)}):z.runKernel(wa,s,o)}const nl=M({transpose_:MA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zA(n,e,t,r,s=!0){const o=_(n,"v","movingAverage"),a=_(e,"x","movingAverage"),l=_(t,"decay","movingAverage");Ub(o,a),D(Ze(o.shape,a.shape),()=>"Shape mismatch in v and x");const u=Be(1),d=Pe(u,l);let p=ve(Pe(a,o),d);if(s){D(r!=null,()=>"When using zeroDebias: true, step is required.");const f=_(r,"step","movingAverage");p=at(p,Pe(u,Ta(l,f)))}return Oe(o,p)}const u2=M({movingAverage_:zA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(n,e,t){Dn(t);const r=_(n,"indices","scatterND","int32"),s=_(e,"updates","scatterND");Pf(s,r,t);const o={indices:r,updates:s},a={shape:t};return z.runKernel(Jp,o,a)}const c2=M({scatterND_:WA});function UA(n,e,t,r){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const s=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GA(n,e,t,r=0){Dn(t);const s=_(n,"sparseIndices","sparseToDense","int32"),o=_(e,"sparseValues","sparseToDense","string_or_numeric"),a=_(r,"defaultValue","sparseToDense",o.dtype);UA(s,o,t,a);const l={sparseIndices:s,sparseValues:o,defaultValue:a},u={outputShape:t};return z.runKernel(ff,l,u)}const d2=M({sparseToDense_:GA});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n,e){const t=_(e,"indices","gatherND","int32"),s={params:_(n,"x","gatherND","string_or_numeric"),indices:t};return z.runKernel(wp,s)}const p2=M({gatherND_:HA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jA(n,e){if(e==null)return n.shape.slice();if(Ze(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n,e,t,r){const s=_(n,"x","dropout");if(D(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),D(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof xt?s.clone():s;const o=jA(s,t),a=1-e,l=at(Dy(Oe(Of(o,0,1,"float32",r),a)),a);return ve(s,l)}const f2=M({dropout_:qA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ox(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Vf(n,e,t){const r=1-n%2,s=new Float32Array(n);for(let o=0;o<n;++o){const a=2*Math.PI*o/(n+r-1);s[o]=e-t*Math.cos(a)}return zn(s,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function KA(n,e,t=1){const r=_(n,"predictions","inTopK"),s=_(e,"targets","inTopK");D(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),D(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Ut(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];D(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const a=await r.data(),l=await s.data(),[u,d]=[a.length/o,o],p=Ft("bool",u);for(let f=0;f<u;f++){const m=f*d,g=a.subarray(m,m+d),y=[];for(let v=0;v<g.length;v++)y.push({value:g[v],index:v});y.sort((v,w)=>w.value-v.value),p[f]=0;for(let v=0;v<t;v++)if(y[v].index===l[f]){p[f]=1;break}}return n!==r&&r.dispose(),e!==s&&s.dispose(),xr(p,s.shape,"bool")}const h2=KA;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XA(n,e,t,r,s,o="NHWC",a){let l=n;n.rank===3&&(l=le(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=le(e,[1,e.shape[0],e.shape[1],e.shape[2]])),D(l.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`),D(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),D(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const d=o==="NHWC"?l.shape[3]:l.shape[1],p=o==="NHWC"?u.shape[3]:u.shape[1];D(d===t[2],()=>`Error in conv2dDerFilter: depth of input ${d}) must match input depth in filter (${t[2]}.`),D(p===t[3],()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${t[3]}).`),rr("conv2dDerFilter",s,a);const f={x:l,dy:u},m={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,filterShape:t};return z.runKernel(Zd,f,m)}const YA=M({conv2DBackpropFilter_:XA});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bf(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return ve(n,tx(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Mf(n,e){let t=e;const r=Ty(n.shape,e.shape);return r.length>0&&(t=ot(t,r)),le(t,n.shape)}function zf(n,e,t,r){if(e==="linear")return n;if(e==="relu")return bu(n);if(e==="elu")return Ry(n);if(e==="relu6")return Qy(n);if(e==="prelu")return jy(n,t);if(e==="leakyrelu")return Py(n,r);if(e==="sigmoid")return ko(n);throw new Error(`Unknown fused activation ${e}.`)}const Wf=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QA({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:l,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:p}){if(u=u||"linear",Wf(z.state.gradientDepth,u)===!1){D(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let O=gu(n,e,t,r,s,o,a);return l!=null&&(O=Oe(O,l)),zf(O,u,d,p)}const f=_(n,"x","conv2d","float32"),m=_(e,"filter","conv2d","float32");let g=f,y=!1;f.rank===3&&(y=!0,g=le(f,[1,f.shape[0],f.shape[1],f.shape[2]])),D(g.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${g.rank}.`),D(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),rr("fused conv2d",r,a);const v=s==="NHWC"?g.shape[3]:g.shape[1];D(m.shape[2]===v,()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${m.shape[2]}.`),D(Zt(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const w=Pt(g.shape,m.shape,t,o,r,a);let b;l!=null&&(b=_(l,"bias","fused conv2d"),[b]=mt(b,f),s==="NHWC"?Ve(w.outShape,b.shape):(D(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),D(b.shape.length===0||b.shape[0]===w.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${w.outChannels})`)));let $;if(d!=null){const O=d.shape;if(D(O.length<=1||O.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${O.length}.`),O.length===1)D(O[0]===1||O[0]===w.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${O}) is not compatible with the number of output channels (${w.outChannels}).`);else if(O.length===3)try{Ve(O,w.outShape)}catch{const V=`Error in fused conv2d: PReLU activation weights (${O}) is not compatible with the output shape of the conv2d (${w.outShape}).`;throw Error(V)}$=_(d,"prelu weights","fused conv2d")}const I=(O,A)=>{D(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[V,P,F,E]=A,W=Bf(O,F,u);D(Qi(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const j=OS(P.shape,W,V,t,r),Y=YA(P,W,V.shape,t,r),Q=[j,Y];if(E!=null){const Z=Mf(E,W);Q.push(Z)}return Q},k={x:g,filter:m,bias:b,preluActivationWeights:$},T={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return l==null?Fr((A,V,P)=>{let F=z.runKernel(Ui,k,T);return P([V,A,F]),y&&(F=le(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:I}})(g,m):Fr((A,V,P,F)=>{let E=z.runKernel(Ui,k,T);return F([V,A,E,P]),y&&(E=le(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:I}})(g,m,b)}const ZA=M({fusedConv2d_:QA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(n,e,t,r,s,o=[1,1],a){let l=n;n.rank===3&&(l=le(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=le(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={x:l,dy:u},p={strides:r,pad:s,dimRoundingMode:a,dilations:o,filterShape:t};return z.runKernel(lp,d,p)}const eF=M({depthwiseConv2dNativeBackpropFilter_:JA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tF(n,e,t,r,s,o=[1,1],a){let l=e,u=!1;e.rank===3&&(u=!0,l=le(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={dy:l,filter:t},p={strides:r,pad:s,dimRoundingMode:a,dilations:o,inputShape:n},f=z.runKernel(up,d,p);return u?le(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const nF=M({depthwiseConv2dNativeBackpropInput_:tF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:l,activation:u="linear",preluActivationWeights:d,leakyreluAlpha:p}){if(Wf(z.state.gradientDepth,u)===!1){let T=If(n,e,t,r,s,o,a);return l!=null&&(T=Oe(T,l)),zf(T,u,d,p)}const f=_(n,"x","depthwiseConv2d","float32"),m=_(e,"filter","depthwiseConv2d","float32");let g=f,y=!1;f.rank===3&&(y=!0,g=le(f,[1,f.shape[0],f.shape[1],f.shape[2]])),D(g.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${g.rank}.`),D(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),D(g.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${g.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),o==null&&(o=[1,1]),D(Zt(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),rr("fused depthwiseConv2d",r,a);const v=Pt(g.shape,m.shape,t,o,r,a,!0);let w;l!=null&&(w=_(l,"bias","fused conv2d"),[w]=mt(w,f),Ve(v.outShape,w.shape));let b;d!=null&&(b=_(d,"prelu weights","fused depthwiseConv2d"));const $=(T,O)=>{D(Qi(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[A,V,P,F]=O,E=Bf(T,P,u),W=nF(V.shape,E,A,t,r,o,a),j=eF(V,E,A.shape,t,r,o,a);if(F!=null){const Y=Mf(w,E);return[W,j,Y]}return[W,j]},I={x:g,filter:m,bias:w,preluActivationWeights:b},k={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:p};return l==null?Fr((O,A,V)=>{let P=z.runKernel(Gi,I,k);return V([A,O,P]),y&&(P=le(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:$}})(g,m):Fr((O,A,V,P)=>{let F=z.runKernel(Gi,I,k);return P([A,O,F,V]),y&&(F=le(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:$}})(g,m,w)}const sF=M({fusedDepthwiseConv2d_:rF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oF({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:l=.2}){if(Wf(z.state.gradientDepth,o)===!1){let E=Ke(n,e,t,r);return s!=null&&(E=Oe(E,s)),zf(E,o,a,l)}let u=_(n,"a","fused matMul"),d=_(e,"b","fused matMul");[u,d]=mt(u,d);const p=t?u.shape[u.rank-2]:u.shape[u.rank-1],f=r?d.shape[d.rank-1]:d.shape[d.rank-2],m=t?u.shape[u.rank-1]:u.shape[u.rank-2],g=r?d.shape[d.rank-2]:d.shape[d.rank-1],y=u.shape.slice(0,-2),v=d.shape.slice(0,-2),w=oe(y),b=oe(v);D(p===f,()=>`Error in fused matMul: inner shapes (${p}) and (${f}) of Tensors with shapes ${u.shape} and ${d.shape} and transposeA=${t} and transposeB=${r} must match.`);const I=Ve(u.shape.slice(0,-2),d.shape.slice(0,-2)).concat([m,g]),k=t?le(u,[w,p,m]):le(u,[w,m,p]),T=r?le(d,[b,g,f]):le(d,[b,f,g]);let O;s!=null&&(O=_(s,"bias","fused matMul"),[O]=mt(O,u),Ve(I,O.shape));let A;a!=null&&(A=_(a,"prelu weights","fused matMul"));const V=(E,W)=>{const[j,Y,Q,Z]=W,ne=Bf(le(E,Q.shape),Q,o);let U,K;if(!t&&!r?(U=Ke(ne,Y,!1,!0),K=Ke(j,ne,!0,!1)):!t&&r?(U=Ke(ne,Y,!1,!1),K=Ke(ne,j,!0,!1)):t&&!r?(U=Ke(Y,ne,!1,!0),K=Ke(j,ne,!1,!1)):(U=Ke(Y,ne,!0,!0),K=Ke(ne,j,!0,!0)),s!=null){const X=Mf(Z,ne);return[U,K,X]}else return[U,K]},P={a:k,b:T,bias:O,preluActivationWeights:A},F={transposeA:t,transposeB:r,activation:o,leakyreluAlpha:l};return s==null?Fr((W,j,Y)=>{const Q=z.runKernel(Wi,P,F);return Y([W,j,Q]),{value:le(Q,I),gradFunc:V}})(k,T):Fr((W,j,Y,Q)=>{const Z=z.runKernel(Wi,P,F);return Q([W,j,Z,Y]),{value:le(Z,I),gradFunc:V}})(k,T,O)}const aF=M({fusedMatMul_:oF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m2=Object.freeze(Object.defineProperty({__proto__:null,conv2d:ZA,depthwiseConv2d:sF,matMul:aF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iF(n){return Vf(n,.54,.46)}const lF=M({hammingWindow_:iF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uF(n){return Vf(n,.5,.5)}const g2=M({hannWindow_:uF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cF(n,e,t,r=!1,s=0){let o=0;const a=[];for(;o+e<=n.size;)a.push(nt(n,o,e)),o+=t;if(r)for(;o<n.size;){const l=o+e-n.size,u=Qt([nt(n,o,e-l),Ba([l],s)]);a.push(u),o+=t}return a.length===0?Na([],[0,e]):le(Qt(a),[a.length,e])}const y2=M({frame_:cF});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(n,e,t,r,s=g2){r==null&&(r=ox(e));const o=y2(n,e,t),a=ve(o,s(e));return Af(a,r)}const pF=M({stft_:dF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fF(n,e,t,r,s="bilinear",o=0){const a=_(n,"image","cropAndResize"),l=_(e,"boxes","cropAndResize","float32"),u=_(t,"boxInd","cropAndResize","int32"),d=l.shape[0];D(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),D(l.rank===2&&l.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${l.shape}.`),D(u.rank===1&&u.shape[0]===d,()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${l.shape}.`),D(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),D(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),D(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const p={image:a,boxes:l,boxInd:u},f={method:s,extrapolationValue:o,cropSize:r};return z.runKernel(sp,p,f)}const hF=M({cropAndResize_:fF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mF(n){const e=_(n,"image","flipLeftRight","float32");D(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return z.runKernel(yp,t,{})}const gF=M({flipLeftRight_:mF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yF(n){const e=_(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];D(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),D(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,t),s[t]=3,Ca(e,s)}const xF=M({grayscaleToRGB_:yF});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vF(n){const e=_(n,"image","RGBToGrayscale"),t=e.rank-1,r=e.shape[t];D(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),D(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,o=it(e,"float32"),a=zn([.2989,.587,.114]);let l;switch(e.rank){case 2:l=vo("ij,j->i",o,a);break;case 3:l=vo("ijk,k->ij",o,a);break;case 4:l=vo("ijkl,l->ijk",o,a);break;case 5:l=vo("ijklm,m->ijkl",o,a);break;case 6:l=vo("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return l=Xr(l,-1),it(l,s)}const wF=M({rgbToGrayscale_:vF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n,e,t=0,r=.5){const s=_(n,"image","rotateWithOffset","float32");D(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},a={radians:e,fillValue:t,center:r};return z.runKernel(Cf,o,a)}const SF=M({rotateWithOffset_:bF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(n,e,t,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return t=Math.min(t,a),D(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),D(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),D(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),D(e.rank===1,()=>"scores must be a 1D tensor"),D(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),D(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $F(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=_(n,"boxes","nonMaxSuppression","float32"),a=_(e,"scores","nonMaxSuppression","float32"),l=za(o,a,t,r,s);t=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold;const u={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return z.runKernel(Fp,{boxes:o,scores:a},u)}const CF=M({nonMaxSuppression_:$F});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NF(n,e,t){const r=kF(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function kF(n,e,t){return TF(n,e,t||IF)}function IF(n,e){return n>e?1:n<e?-1:0}function TF(n,e,t){let r=0,s=n.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const l=t(e,n[o]);l>0?r=o+1:(s=o,a=!l)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uf(n,e,t,r,s){return ax(n,e,t,r,s,0)}function Gf(n,e,t,r,s,o){return ax(n,e,t,r,s,0,!1,o,!0)}function Hf(n,e,t,r,s,o){return ax(n,e,t,r,s,o,!0)}function ax(n,e,t,r,s,o,a=!1,l=!1,u=!1){const d=[];for(let w=0;w<e.length;w++)e[w]>s&&d.push({score:e[w],boxIndex:w,suppressBeginIndex:0});d.sort(Sw);const p=o>0?-.5/o:0,f=[],m=[];for(;f.length<t&&d.length>0;){const w=d.pop(),{score:b,boxIndex:$,suppressBeginIndex:I}=w;if(b<s)break;let k=!1;for(let T=f.length-1;T>=I;--T){const O=EF(n,$,f[T]);if(O>=r){k=!0;break}if(w.score=w.score*RF(r,p,O),w.score<=s)break}w.suppressBeginIndex=f.length,k||(w.score===b?(f.push($),m.push(w.score)):w.score>s&&NF(d,w,Sw))}const g=f.length,y=t-g;l&&y>0&&(f.push(...new Array(y).fill(0)),m.push(...new Array(y).fill(0)));const v={selectedIndices:f};return a&&(v.selectedScores=m),u&&(v.validOutputs=g),v}function EF(n,e,t){const r=n.subarray(e*4,e*4+4),s=n.subarray(t*4,t*4+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),l=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),d=Math.min(s[0],s[2]),p=Math.min(s[1],s[3]),f=Math.max(s[0],s[2]),m=Math.max(s[1],s[3]),g=(l-o)*(u-a),y=(f-d)*(m-p);if(g<=0||y<=0)return 0;const v=Math.max(o,d),w=Math.max(a,p),b=Math.min(l,f),$=Math.min(u,m),I=Math.max(b-v,0)*Math.max($-w,0);return I/(g+y-I)}function RF(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function Sw(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function _F(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=_(n,"boxes","nonMaxSuppressionAsync"),a=_(e,"scores","nonMaxSuppressionAsync"),l=za(o,a,t,r,s);t=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold;const u=await Promise.all([o.data(),a.data()]),d=u[0],p=u[1],{selectedIndices:f}=Uf(d,p,t,r,s);return o!==n&&o.dispose(),a!==e&&a.dispose(),zn(f,"int32")}const OF=_F;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DF(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=_(n,"boxes","nonMaxSuppression"),l=_(e,"scores","nonMaxSuppression"),u=za(a,l,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const d={boxes:a,scores:l},p={maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o},f=z.runKernel(Lp,d,p);return{selectedIndices:f[0],selectedScores:f[1]}}const AF=M({nonMaxSuppressionWithScore_:DF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function FF(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=_(n,"boxes","nonMaxSuppressionAsync"),l=_(e,"scores","nonMaxSuppressionAsync"),u=za(a,l,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const d=await Promise.all([a.data(),l.data()]),p=d[0],f=d[1],{selectedIndices:m,selectedScores:g}=Hf(p,f,t,r,s,o);return a!==n&&a.dispose(),l!==e&&l.dispose(),{selectedIndices:zn(m,"int32"),selectedScores:zn(g)}}const PF=FF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=_(n,"boxes","nonMaxSuppression"),l=_(e,"scores","nonMaxSuppression"),u=za(a,l,t,r,s,null),d=u.maxOutputSize,p=u.iouThreshold,f=u.scoreThreshold,m={boxes:a,scores:l},g={maxOutputSize:d,iouThreshold:p,scoreThreshold:f,padToMaxOutputSize:o},y=z.runKernel(Pp,m,g);return{selectedIndices:y[0],validOutputs:y[1]}}const VF=M({nonMaxSuppressionPadded_:LF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function BF(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=_(n,"boxes","nonMaxSuppressionAsync"),l=_(e,"scores","nonMaxSuppressionAsync"),u=za(a,l,t,r,s,null),d=u.maxOutputSize,p=u.iouThreshold,f=u.scoreThreshold,[m,g]=await Promise.all([a.data(),l.data()]),{selectedIndices:y,validOutputs:v}=Gf(m,g,d,p,f,o);return a!==n&&a.dispose(),l!==e&&l.dispose(),{selectedIndices:zn(y,"int32"),validOutputs:Be(v,"int32")}}const MF=BF;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zF(n,e,t=!1,r=!1){const s=_(n,"images","resizeBilinear");D(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),D(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),D(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=le(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},d=z.runKernel(Qp,l,u);return a?le(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const WF=M({resizeBilinear_:zF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UF(n,e,t=!1,r=!1){const s=_(n,"images","resizeNearestNeighbor");D(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),D(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),D(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=le(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},d=z.runKernel(Yp,l,u);return a?le(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const GF=M({resizeNearestNeighbor_:UF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(n,e="binary",t=!1,r=.5){const s=_(n,"image","threshold"),o=.2989,a=.587,l=.114,u=s.shape[0]*s.shape[1];let d=ve(zn([r]),255),p,f,m,g;if(D(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),D(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),D(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),D(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[p,f,m]=Oa(s,[1,1,1],-1);const w=ve(p,o),b=ve(f,a),$=ve(m,l);g=Oe(Oe(w,b),$)}else g=n;if(e==="otsu"){const w=Iy(it(Zy(g),"int32"),xr([]),256);d=jF(w,u)}const y=t?Tf(g,d):vu(g,d);return it(ve(y,255),"int32")}function jF(n,e){let t=zn([-1]),r=zn([0]),s=zn([0]),o,a,l,u,d,p;for(let f=0;f<n.size-1;f++){o=nt(n,0,f+1),a=nt(n,f+1),d=at(ot(o),e),p=at(ot(a),e);const m=ot(ve(o,Ra(0,o.size)));l=at(m,ot(o));const g=Ba(a.shape,o.size),y=Oe(Ra(0,a.size),g),v=ve(a,y);u=at(ot(v),ot(a));const w=Pe(l,u),b=Pe(l,u),$=ve(d,p);s=ve(ve($,w),b);const I=vu(s,r);r=ts(I,s,r),t=ts(I,zn([f]),t)}return t}const qF=M({threshold_:HF});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n,e,t="nearest",r="constant",s=0,o){const a=_(n,"image","transform","float32"),l=_(e,"transforms","transform","float32");D(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),D(l.rank===2&&(l.shape[0]===a.shape[0]||l.shape[0]===1)&&l.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:a,transforms:l},d={interpolation:t,fillMode:r,fillValue:s,outputShape:o};return z.runKernel(vf,u,d)}const XF=M({transform_:KF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(n,e,t){const r=_(n,"a","bandPart");D(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,a]=r.shape.slice(-2);let l,u;typeof e=="number"?(D(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),D(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),l=_(e<0?o:e,"numLower","bandPart")):(D(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),l=ts(xd(e,0),o,el(e,o))),typeof t=="number"?(D(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),D(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),u=_(t<0?a:t,"numUpper","bandPart")):(D(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=ts(xd(t,0),a,el(t,a)));const d=le(Ra(0,o,1,"int32"),[-1,1]),p=Ra(0,a,1,"int32"),f=Pe(d,p),m=Zi(Tf(f,l),Fy(f,vr(u))),g=Us([o,a],r.dtype);return le(Pr(Ys(le(r,[-1,o,a])).map(y=>ts(m,y,g))),s)}const QF=M({bandPart_:YF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZF(n){let e;if(Array.isArray(n)){e=!1,D(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let o=1;o<n.length;++o)D(n[o].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${s})`)}else e=!0,n=Oa(n,n.shape[0],0).map(s=>Ff(s,[0]));D(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let s=0;s<n.length;++s)t.push(z.tidy(()=>{let o=r[s];if(s>0)for(let a=0;a<s;++a){const l=ve(ot(ve(t[a],o)),t[a]);o=Pe(o,l)}return at(o,xu(o,"euclidean"))}));return e?Pr(t,0):t}const JF=M({gramSchmidt_:ZF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eP(n,e=!1){if(D(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return $w(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((u,d)=>u*d),r=Ys(le(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],o=[];r.forEach(u=>{const[d,p]=$w(u,e);s.push(d),o.push(p)});const a=le(Pr(s,0),n.shape),l=le(Pr(o,0),n.shape);return[a,l]}}function $w(n,e=!1){return z.tidy(()=>{D(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let s=Oy(t),o=es(n);const a=Na([[1]],[1,1]);let l=es(a);const u=t>=r?r:t;for(let d=0;d<u;++d){const p=o,f=l,m=s;[l,o,s]=z.tidy(()=>{const g=nt(o,[d,d],[t-d,1]),y=xu(g),v=nt(o,[d,d],[1,1]),w=ts(vu(v,0),Na([[-1]]),Na([[1]])),b=Pe(v,ve(w,y)),$=at(g,b);$.shape[0]===1?l=es(a):l=Qt([a,nt($,[1,0],[$.shape[0]-1,$.shape[1]])],0);const I=vr(at(Ke(w,b),y)),k=nt(o,[d,0],[t-d,r]),T=ve(I,l),O=nl(l);if(d===0)o=Pe(k,Ke(T,Ke(O,k)));else{const P=Pe(k,Ke(T,Ke(O,k)));o=Qt([nt(o,[0,0],[d,r]),P],0)}const A=nl(T),V=nt(s,[0,d],[t,s.shape[1]-d]);if(d===0)s=Pe(V,Ke(Ke(V,l),A));else{const P=Pe(V,Ke(Ke(V,l),A));s=Qt([nt(s,[0,0],[t,d]),P],1)}return[l,o,s]}),un([p,f,m])}return!e&&t>r&&(s=nt(s,[0,0],[t,r]),o=nt(o,[0,0],[r,r])),[s,o]})}const tP=M({qr_:eP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var an;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(an||(an={}));function nP(n,e,t=an.SUM_BY_NONZERO_WEIGHTS){const r=_(n,"losses","computeWeightedLoss");let s=null;e!=null&&(s=_(e,"weights","computeWeightedLoss"));const o=s==null?r:ve(r,s);if(t===an.NONE)return o;if(t===an.SUM)return ot(o);if(t===an.MEAN){if(s==null)return Ji(o);{const a=r.size/s.size,l=at(ot(o),ot(s));return a>1?at(l,Be(a)):l}}if(t===an.SUM_BY_NONZERO_WEIGHTS){if(s==null)return at(ot(o),Be(r.size));{const a=ve(s,Fs(r.shape)),l=it(ot(Gy(a,Be(0))),"float32");return at(ot(o),l)}}throw Error(`Unknown reduction: ${t}`)}const cs=M({computeWeightedLoss_:nP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rP(n,e,t,r=an.SUM_BY_NONZERO_WEIGHTS){const s=_(n,"labels","absoluteDifference"),o=_(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=_(t,"weights","absoluteDifference")),Ut(s.shape,o.shape,"Error in absoluteDifference: ");const l=Tn(Pe(s,o));return cs(l,a,r)}const sP=M({absoluteDifference_:rP});function oP(n,e,t,r,s=an.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","cosineDistance"),a=_(e,"predictions","cosineDistance");let l=null;r!=null&&(l=_(r,"weights","cosineDistance")),Ut(o.shape,a.shape,"Error in cosineDistance: ");const u=Be(1),d=Pe(u,ot(ve(o,a),t,!0));return cs(d,l,s)}const aP=M({cosineDistance_:oP});function iP(n,e,t,r=an.SUM_BY_NONZERO_WEIGHTS){let s=_(n,"labels","hingeLoss");const o=_(e,"predictions","hingeLoss");let a=null;t!=null&&(a=_(t,"weights","hingeLoss")),Ut(s.shape,o.shape,"Error in hingeLoss: ");const l=Be(1);s=Pe(ve(Be(2),s),l);const u=bu(Pe(l,ve(s,o)));return cs(u,a,r)}const lP=M({hingeLoss_:iP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n,e,t,r=1,s=an.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","huberLoss"),a=_(e,"predictions","huberLoss");let l=null;t!=null&&(l=_(t,"weights","huberLoss")),Ut(o.shape,a.shape,"Error in huberLoss: ");const u=Be(r),d=Tn(Pe(a,o)),p=el(d,u),f=Pe(d,p),m=Oe(ve(Be(.5),tr(p)),ve(u,f));return cs(m,l,s)}const cP=M({huberLoss_:uP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(n,e,t,r=1e-7,s=an.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","logLoss"),a=_(e,"predictions","logLoss");let l=null;t!=null&&(l=_(t,"weights","logLoss")),Ut(o.shape,a.shape,"Error in logLoss: ");const u=Be(1),d=Be(r),p=vr(ve(o,Ea(Oe(a,d)))),f=ve(Pe(u,o),Ea(Oe(Pe(u,a),d))),m=Pe(p,f);return cs(m,l,s)}const pP=M({logLoss_:dP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n,e,t,r=an.SUM_BY_NONZERO_WEIGHTS){const s=_(n,"labels","meanSquaredError"),o=_(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=_(t,"weights","meanSquaredError")),Ut(s.shape,o.shape,"Error in meanSquaredError: ");const l=ex(s,o);return cs(l,a,r)}const hP=M({meanSquaredError_:fP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(n,e){const t=_(n,"labels","sigmoidCrossEntropyWithLogits"),r=_(e,"logits","sigmoidCrossEntropyWithLogits");Ut(t.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=bu(r),o=ve(r,t),a=Ly(Ws(vr(Tn(r))));return Oe(Pe(s,o),a)}function gP(n,e,t,r=0,s=an.SUM_BY_NONZERO_WEIGHTS){let o=_(n,"multiClassLabels","sigmoidCrossEntropy");const a=_(e,"logits","sigmoidCrossEntropy");let l=null;if(t!=null&&(l=_(t,"weights","sigmoidCrossEntropy")),Ut(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const d=Be(r),p=Be(1),f=Be(.5);o=Oe(ve(o,Pe(p,d)),ve(f,d))}const u=mP(o,a);return cs(u,l,s)}const yP=M({sigmoidCrossEntropy_:gP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Fr((s,o,a)=>{const u=By(o,[t],!0),d=Pe(it(o,"float32"),u);a([s,d]);const p=vr(ve(d,s));return{value:ot(p,[t]),gradFunc:(g,y)=>{const[v,w]=y,b=Et(g.shape,[t]);return[ve(le(g,b),Pe(it(v,"float32"),Ws(w))),ve(le(g,b),Pe(Ws(w),it(v,"float32")))]}}})(n,e)}function vP(n,e,t,r=0,s=an.SUM_BY_NONZERO_WEIGHTS){let o=_(n,"onehotLabels","softmaxCrossEntropy");const a=_(e,"logits","softmaxCrossEntropy");let l=null;if(t!=null&&(l=_(t,"weights","softmaxCrossEntropy")),Ut(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const d=Be(r),p=Be(1),f=Be(o.shape[1]);o=Oe(ve(o,Pe(p,d)),at(d,f))}const u=xP(o,a);return cs(u,l,s)}const wP=M({softmaxCrossEntropy_:vP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bP(n,e,t,r){const s=_(n,"indices","sparseFillEmptyRows","int32"),o=_(e,"values","sparseFillEmptyRows"),a=_(t,"denseShape","sparseFillEmptyRows","int32"),l=_(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(l.rank!==0)throw new Error(`Default value should be a scalar but received shape ${l.shape}`);const u={indices:s,values:o,denseShape:a,defaultValue:l},d=z.runKernel(uf,u);return{outputIndices:d[0],outputValues:d[1],emptyRowIndicator:d[2],reverseIndexMap:d[3]}}const SP=M({sparseFillEmptyRows_:bP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $P(n,e,t){const r=_(n,"inputIndices","sparseReshape","int32"),s=_(e,"inputShape","sparseReshape","int32"),o=_(t,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:r,inputShape:s,newShape:o},l=z.runKernel(cf,a);return{outputIndices:l[0],outputShape:l[1]}}const CP=M({sparseReshape_:$P});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NP(n,e,t){const r=_(n,"data","sparseSegmentMean"),s=_(e,"indices","sparseSegmentMean","int32"),o=_(t,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return z.runKernel(df,a)}const kP=M({sparseSegmentMean_:NP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IP(n,e,t){const r=_(n,"data","sparseSegmentSum"),s=_(e,"indices","sparseSegmentSum","int32"),o=_(t,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return z.runKernel(pf,a)}const TP=M({sparseSegmentSum_:IP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EP(n,e,t,r,s,o,a,l){const u=_(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const d=_(e,"dataSplits","stringNGrams");if(d.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const p={separator:t,nGramWidths:r,leftPad:s,rightPad:o,padWidth:a,preserveShortSequences:l},f={data:u,dataSplits:d},m=z.runKernel(mf,f,p);return{nGrams:m[0],nGramsSplits:m[1]}}const RP=M({stringNGrams_:EP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(n,e,t=!0){const r=_(n,"input","stringSplit","string"),s=_(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o={skipEmpty:t},a={input:r,delimiter:s},l=z.runKernel(gf,a,o);return{indices:l[0],values:l[1],shape:l[2]}}const OP=M({stringSplit_:_P});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(n,e){const t=_(n,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:t};return z.runKernel(yf,s,r)}const AP=M({stringToHashBucketFast_:DP});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FP(n,e,t,r=!0){const s=_(n,"input","staticRegexReplace","string"),o={pattern:e,rewrite:t,replaceGlobal:r};return z.runKernel(au,{x:s},o)}const PP=M({staticRegexReplace_:FP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x2={fft:Df,ifft:tl,rfft:Af,irfft:Jy},v2={hammingWindow:lF,hannWindow:g2,frame:y2,stft:pF},w2={flipLeftRight:gF,grayscaleToRGB:xF,resizeNearestNeighbor:GF,resizeBilinear:WF,rgbToGrayscale:wF,rotateWithOffset:SF,cropAndResize:hF,nonMaxSuppression:CF,nonMaxSuppressionAsync:OF,nonMaxSuppressionWithScore:AF,nonMaxSuppressionWithScoreAsync:PF,nonMaxSuppressionPadded:VF,nonMaxSuppressionPaddedAsync:MF,threshold:qF,transform:XF},b2={bandPart:QF,gramSchmidt:JF,qr:tP},S2={absoluteDifference:sP,computeWeightedLoss:cs,cosineDistance:aP,hingeLoss:lP,huberLoss:cP,logLoss:pP,meanSquaredError:hP,sigmoidCrossEntropy:yP,softmaxCrossEntropy:wP},$2={sparseFillEmptyRows:SP,sparseReshape:CP,sparseSegmentMean:kP,sparseSegmentSum:TP},C2={stringNGrams:RP,stringSplit:OP,stringToHashBucketFast:AP,staticRegexReplace:PP};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LP=new Map,Tg=new Map;class N2{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ds{constructor(){this.classNameMap={}}static getMap(){return Ds.instance==null&&(Ds.instance=new Ds),Ds.instance}static register(e){Ds.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function k2(n,e,t){D(n.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),D(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const r=t,s=e+">"+r;return Ds.register(n),LP.set(s,n),Tg.set(n,s),n}function VP(n){return Tg.has(n)?Tg.get(n):n.className}const BP=Object.freeze(Object.defineProperty({__proto__:null,Serializable:N2,SerializationMap:Ds,getRegisteredName:VP,registerClass:k2},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qs extends N2{minimize(e,t=!1,r){const{value:s,grads:o}=this.computeGradients(e,r);if(r!=null){const a=r.map(l=>({name:l.name,tensor:o[l.name]}));this.applyGradients(a)}else this.applyGradients(o);return un(o),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return r$(e,t)}dispose(){this.iterations_!=null&&un(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Be(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Qs,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ix extends Qs{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=z.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=z.registeredVariables[r],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:Ge(()=>_n(o).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:Ge(()=>_n(o).variable(a))});const l=Array.isArray(e)?e[s].tensor:e[r];if(l==null)return;const u=this.accumulatedGrads[s].variable,d=this.accumulatedUpdates[s].variable;Ge(()=>{const p=Oe(ve(u,this.rho),ve(tr(l),1-this.rho)),f=ve(at(Ar(Oe(d,this.epsilon)),Ar(Oe(u,this.epsilon))),l),m=Oe(ve(d,this.rho),ve(tr(f),1-this.rho));u.assign(p),d.assign(m);const g=Oe(ve(f,-this.learningRate),o);o.assign(g)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(un(this.accumulatedGrads.map(e=>e.variable)),un(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lx extends Qs{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=z.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:Ge(()=>Ba(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const l=this.accumulatedGrads[s].variable;Ge(()=>{const u=Oe(l,tr(a));l.assign(u);const d=Oe(ve(at(a,Ar(Oe(u,z.backend.epsilon()))),-this.learningRate),o);o.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&un(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ux extends Qs{static get className(){return"Adam"}constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ge(()=>{this.accBeta1=Be(t).variable(),this.accBeta2=Be(r).variable()}),s==null&&(this.epsilon=z.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);Ge(()=>{const r=Pe(1,this.accBeta1),s=Pe(1,this.accBeta2);t.forEach((o,a)=>{const l=z.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Ge(()=>_n(l).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:Ge(()=>_n(l).variable(u))});const d=Array.isArray(e)?e[a].tensor:e[o];if(d==null)return;const p=this.accumulatedFirstMoment[a].variable,f=this.accumulatedSecondMoment[a].variable,m=Oe(ve(p,this.beta1),ve(d,1-this.beta1)),g=Oe(ve(f,this.beta2),ve(tr(d),1-this.beta2)),y=at(m,r),v=at(g,s);p.assign(m),f.assign(g);const w=Oe(ve(at(y,Oe(Ar(v),this.epsilon)),-this.learningRate),l);l.assign(w)}),this.accBeta1.assign(ve(this.accBeta1,this.beta1)),this.accBeta2.assign(ve(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&un(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&un(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Ge(()=>{this.accBeta1.assign(Ta(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ta(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cx extends Qs{static get className(){return"Adamax"}constructor(e,t,r,s=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ge(()=>{this.iteration=Be(0).variable(),this.accBeta1=Be(t).variable()}),s==null&&(this.epsilon=z.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);Ge(()=>{const r=Pe(1,this.accBeta1),s=at(-this.learningRate,Oe(ve(this.iteration,this.decay),1));t.forEach((o,a)=>{const l=z.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:_n(l).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:_n(l).variable(u)});const d=Array.isArray(e)?e[a].tensor:e[o];if(d==null)return;const p=this.accumulatedFirstMoment[a].variable,f=this.accumulatedWeightedInfNorm[a].variable,m=Oe(ve(p,this.beta1),ve(d,1-this.beta1)),g=ve(f,this.beta2),y=Tn(d),v=Uy(g,y);p.assign(m),f.assign(v);const w=Oe(ve(at(s,r),at(m,Oe(v,this.epsilon))),l);l.assign(w)}),this.iteration.assign(Oe(this.iteration,1)),this.accBeta1.assign(ve(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&un(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&un(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jf extends Qs{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const a=z.registeredVariables[r];Ge(()=>{const l=Oe(ve(this.c,o),a);a.assign(l)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=gr(Be(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dx extends jf{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=Be(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=z.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:Ge(()=>_n(o).variable(!1))});const a=this.accumulations[s].variable,l=Array.isArray(e)?e[s].tensor:e[r];l!=null&&Ge(()=>{let u;const d=Oe(ve(this.m,a),l);this.useNesterov?u=Oe(ve(this.c,Oe(l,ve(d,this.m))),o):u=Oe(ve(this.c,d),o),a.assign(d),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&un(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class px extends Qs{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,s=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,s==null&&(this.epsilon=z.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=z.registeredVariables[r],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:Ge(()=>_n(o).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:Ge(()=>_n(o).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:Ge(()=>_n(o).variable(a))});const l=Array.isArray(e)?e[s].tensor:e[r];if(l==null)return;const u=this.accumulatedMeanSquares[s].variable,d=this.accumulatedMoments[s].variable;Ge(()=>{const p=Oe(ve(u,this.decay),ve(tr(l),1-this.decay));if(this.centered){const f=this.accumulatedMeanGrads[s].variable,m=Oe(ve(f,this.decay),ve(l,1-this.decay)),g=at(ve(l,this.learningRate),Ar(Pe(p,Oe(tr(m),this.epsilon)))),y=Oe(ve(d,this.momentum),g);u.assign(p),f.assign(m),d.assign(y);const v=Pe(o,y);o.assign(v)}else{const f=Oe(ve(u,this.decay),ve(tr(l),1-this.decay)),m=Oe(ve(d,this.momentum),at(ve(l,this.learningRate),Ar(Oe(f,this.epsilon))));u.assign(f),d.assign(m);const g=Pe(o,m);o.assign(g)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&un(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&un(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&un(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MP=[ix,lx,ux,cx,dx,px,jf];function zP(){for(const n of MP)k2(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WP="model",UP=".json",GP=".weights.bin";function Cw(n){return new Promise(e=>setTimeout(e)).then(n)}class Ao{constructor(e){if(!J().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ao.URL_SCHEME)&&(e=e.slice(Ao.URL_SCHEME.length)),(e==null||e.length===0)&&(e=WP),this.modelJsonFileName=e+UP,this.weightDataFileName=e+GP}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=br.join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=Zb(e,s),a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=a,await Cw(()=>l.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=r,await Cw(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:fu(e)}}}}Ao.URL_SCHEME="downloads://";class HP{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const r=new FileReader;r.onload=s=>{const o=JSON.parse(s.target.result),a=o.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const u=by(o,d=>this.loadWeights(d));e(u)},r.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const t=[],r=[];for(const a of e)t.push(...a.weights),r.push(...a.paths);const s=this.checkManifestAndWeightFiles(e),o=r.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(o).then(a=>[t,a])}loadWeightsFile(e,t){return new Promise((r,s)=>{const o=new FileReader;o.onload=a=>{const l=a.target.result;r(l)},o.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],r=this.weightsFiles.map(o=>fw(o.name)),s={};for(const o of e)o.paths.forEach(a=>{const l=fw(a);if(t.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(t.push(l),r.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);s[a]=this.weightsFiles[r.indexOf(l)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const jP=n=>J().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ao.URL_SCHEME)?qP(n.slice(Ao.URL_SCHEME.length)):null;ht.registerSaveRouter(jP);function qP(n="model"){return new Ao(n)}function KP(n){return new HP(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nw(n,e,t,r){a(n),t=t??0,r=r??1,l(t,r);let s=0;const o=u=>(u.then(d=>{const p=t+ ++s/n.length*(r-t);return e(p),d}),u);function a(u){D(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function l(u,d){D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),D(d>=0&&d<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${d}`),D(d>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${d}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function I2(n,e){e==null&&(e={});const t=e.fetchFunc==null?J().platform.fetch:e.fetchFunc,r=n.map(f=>t(f,e.requestInit,{isBinary:!0})),l=(e.onProgress==null?await Promise.all(r):await Nw(r,e.onProgress,0,.5)).map(f=>f.arrayBuffer());return e.onProgress==null?await Promise.all(l):await Nw(l,e.onProgress,.5,1)}function XP(n,e){var t;const r=e.fetchFunc==null?J().platform.fetch:e.fetchFunc;let s=0,o;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async a=>{for(var l;s<n.length;){o||(o=(await r(n[s],e.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:d}=await o.read();if(u){s++,o=void 0,(l=e.onProgress)===null||l===void 0||l.call(e,s/n.length);continue}a.enqueue(d);return}a.close()}})}async function YP(n,e="",t,r){return T2(a=>I2(a,{requestInit:r}))(n,e,t)}function T2(n){return async(e,t="",r)=>{const s=e.map(()=>!1),o={},a=r!=null?r.map(()=>!1):[],l=[];if(e.forEach((g,y)=>{let v=0;g.weights.forEach(w=>{const b="quantization"in w?w.quantization.dtype:w.dtype,$=Eo[b]*oe(w.shape),I=()=>{s[y]=!0,o[y]==null&&(o[y]=[]),o[y].push({manifestEntry:w,groupOffset:v,sizeBytes:$})};r!=null?r.forEach((k,T)=>{k===w.name&&(I(),a[T]=!0)}):I(),l.push(w.name),v+=$})}),!a.every(g=>g)){const g=r.filter((y,v)=>!a[v]);throw new Error(`Could not find weights in manifest with names: ${g.join(", ")}. 
Manifest JSON has weights with names: ${l.join(", ")}.`)}const u=s.reduce((g,y,v)=>(y&&g.push(v),g),[]),d=[];u.forEach(g=>{e[g].paths.forEach(y=>{const v=t+(t.endsWith("/")?"":"/")+y;d.push(v)})});const p=await n(d),f={};let m=0;return u.forEach(g=>{const y=e[g].paths.length,v=new br(p.slice(m,m+y));o[g].forEach(b=>{const $=v.slice(b.groupOffset,b.groupOffset+b.sizeBytes),I=Xb($,[b.manifestEntry]);for(const k in I)f[k]=I[k]}),m+=y}),f}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QP="application/octet-stream",ZP="application/json";class fx{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(D(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=J().platform.fetch,D(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&D(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=Zb(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(s)],{type:ZP}),"model.json"),e.weightData!=null){const a=br.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:QP}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:fu(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const r=t.modelTopology,s=t.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return by(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),r=md(e.weightsManifest),s=()=>XP(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:s})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=JP(t),o=this.weightPathPrefix||r,a=[],l=[];for(const u of e)for(const d of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(d)):a.push(o+d+s);return this.weightUrlConverter&&a.push(...await Promise.all(l)),a}async loadWeights(e){const t=await this.getWeightUrls(e),r=md(e),s=await I2(t,this.loadOptions);return[r,s]}}fx.URL_SCHEME_REGEX=/^https?:\/\//;function JP(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),r=n.substring(0,e),s=t>e?n.substring(t):"";return[r+"/",s]}function Eg(n){return n.match(fx.URL_SCHEME_REGEX)!=null}const E2=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(r=>Eg(r)):t=Eg(n),t)return hx(n,e)}return null};ht.registerSaveRouter(E2);ht.registerLoadRouter(E2);function hx(n,e){return new fx(n,e)}function e3(n,e){return hx(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rg{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class R2{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class t3{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function n3(n,e,t,r){const s=arguments;return new t3(wd(...s))}function wd(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new rg(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rg({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new rg({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))}function r3(n){return new R2(n)}function s3(n){return new R2(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mx=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:br,browserFiles:KP,browserHTTPRequest:e3,concatenateArrayBuffers:sR,copyModel:kR,decodeWeights:Xb,decodeWeightsStream:Qb,encodeWeights:ZE,fromMemory:n3,fromMemorySync:wd,getLoadHandlers:pR,getModelArtifactsForJSON:by,getModelArtifactsForJSONSync:wy,getModelArtifactsInfoForJSON:fu,getSaveHandlers:dR,getWeightSpecs:md,http:hx,isHTTPScheme:Eg,listModels:CR,loadWeights:YP,moveModel:IR,registerLoadRouter:cR,registerSaveRouter:uR,removeModel:NR,weightsLoaderFactory:T2,withSaveHandler:r3,withSaveHandlerSync:s3},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o3(n,e,t){const r=_(n,"labels","confusionMatrix"),s=_(e,"predictions","confusionMatrix");D(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),D(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),D(s.rank===1,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),D(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),D(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const o=vd(it(r,"int32"),t),a=vd(it(s,"int32"),t),l=nl(o),u=Ke(l,a);return it(u,"int32")}const a3=M({confusionMatrix_:o3});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i3=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:a3},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mo,kw=!1;function _2(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,s=!1,o=!1,a=!1,l=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)l=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(ji(fd,z.backendName)!=null){const y={pixels:n},v={numChannels:e};return z.runKernel(fd,y,v)}const[d,p]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height];let f;if(a)f=n.getContext("2d").getImageData(0,0,d,p).data;else if(r||t)f=n.data;else if(o||s||l){if(mo==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")mo=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else mo=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});mo.canvas.width=d,mo.canvas.height=p,mo.drawImage(n,0,0,d,p),f=mo.getImageData(0,0,d,p).data}let m;if(e===4)m=new Int32Array(f);else{const y=d*p;m=new Int32Array(y*e);for(let v=0;v<y;v++)for(let w=0;w<e;++w)m[v*e+w]=f[v*4+w]}return nx(m,[p,d,e],"int32")}function l3(n){return n!=null&&n.data instanceof Uint8Array}function u3(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function c3(n){return n!=null&&n.width!==0&&n.height!==0}function d3(n){return u3()&&!(n instanceof ImageBitmap)&&c3(n)&&!l3(n)}async function p3(n,e=3){let t=null;if(J().getBool("WRAP_TO_IMAGEBITMAP")&&d3(n)){let r;try{r=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===n.width&&r.height===n.height?t=r:t=n}else t=n;return _2(t,e)}function O2(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function f3(n){const e=(n==null?void 0:n.alpha)||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function h3(n,e){let t=_(n,"img","toPixels");if(!(n instanceof xt)){const d=t;t=it(d,"int32"),d.dispose()}O2(t);const[r,s]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2],a=await t.data(),l=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(s*r*4);for(let d=0;d<r*s;++d){const p=[0,0,0,255];for(let m=0;m<o;m++){const g=a[d*o+m];if(t.dtype==="float32"){if(g<0||g>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${g}.`)}else if(t.dtype==="int32"&&(g<0||g>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${g}.`);o===1?(p[0]=g*l,p[1]=g*l,p[2]=g*l):p[m]=g*l}const f=d*4;u[f+0]=Math.round(p[0]),u[f+1]=Math.round(p[1]),u[f+2]=Math.round(p[2]),u[f+3]=Math.round(p[3])}if(e!=null){kw||ji(pp,z.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),kw=!0),e.width=s,e.height=r;const d=e.getContext("2d"),p=new ImageData(u,s,r);d.putImageData(p,0,0)}return t!==n&&t.dispose(),u}function m3(n,e,t){let r=_(n,"img","draw");if(!(n instanceof xt)){const a=r;r=it(a,"int32"),a.dispose()}O2(r),f3(t==null?void 0:t.imageOptions);const s={image:r},o={canvas:e,options:t};z.runKernel(pp,s,o)}const g3=M({fromPixels_:_2}),y3=Object.freeze(Object.defineProperty({__proto__:null,draw:m3,fromPixels:g3,fromPixelsAsync:p3,toPixels:h3},Symbol.toStringTag,{value:"Module"}));function qf(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(oe(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=e.shape,o=s[s.length-1];let a=1;for(let f=0;f<s.length-1;++f)a*=s[f];const l=n.shape,u=s.slice();u.pop();let d=1;for(let f=o;f<t;++f)d*=l[f],u.push(l[f]);const p=[...Te(n.shape).map(f=>f/d),1].slice(0,o);return[u,a,d,p]}const x3=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:qf},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rg=-2,v3=-1;function gx(n,e,t){const r=n.shape.length;D(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),D(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)D(e[s]+t[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+t[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function w3(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function yx(n,e,t){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function D2(n,e,t,r){const s=[...n];for(let o=s.length;o<r.length;o++)s.push(1);for(let o=0;o<t;o++)o===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function A2(n,e,t){return t<=n?t:t-(e-1)}function F2(n,e){const t=[];for(let r=0;r<n;r++)t.push(e+r);return t}function b3(n,e,t,r,s,o,a,l,u){const d=n.length;let p=new Array(d),f=new Array(d),m=new Array(d);if(e.length&&t>0){const g=e[0],y=t+1;p=P2(a,g,y,r,n),f=L2(l,g,y,s,n),m=D2(o,g,y,n)}else for(let g=0;g<d;g++)p[g]=B2(a,r,o,n,g,u),f[g]=M2(l,s,o,n,g,u),m[g]=V2(o,g,u);return{begin:p,end:f,strides:m}}function P2(n,e,t,r,s){const o=[...s],a=F2(t,e);for(let l=0;l<o.length;l++)if(a.indexOf(l)>-1)o[l]=0;else{const u=A2(e,t,l);let d=r[u];n&1<<u&&(d=0),o[l]=d}return o}function L2(n,e,t,r,s){const o=[...s],a=F2(t,e);for(let l=0;l<o.length;l++)if(a.indexOf(l)>-1)o[l]=Number.MAX_SAFE_INTEGER;else{const u=A2(e,t,l);let d=r[u];n&1<<u&&(d=Number.MAX_SAFE_INTEGER),o[l]=d}for(let l=0;l<o.length;l++){const u=s[l];o[l]<0&&(o[l]+=u),o[l]=Vs(0,o[l],s[l])}return o}function V2(n,e,t){let r=n[e];return(t&1<<e||r==null)&&(r=1),r}function B2(n,e,t,r,s,o){let a=e[s];const l=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(l>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=Vs(0,a,u-1),a}function M2(n,e,t,r,s,o){let a=e[s];const l=t[s]||1;(n&1<<s||o&1<<s||a==null)&&(l>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),l>0?a=Vs(0,a,u):a=Vs(-1,a,u-1),a}function xx(n,e,t){let r=t.length;for(let s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(let s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function vx(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function wx(n,e,t){let r;const s=n.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(a=>{D(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(s).fill(-1):typeof t=="number"?o=[t,...new Array(s-1).fill(-1)]:t.length<s?o=t.concat(new Array(s-t.length).fill(-1)):o=t,o=o.map((a,l)=>a>=0?a:(D(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${l}.`),n.shape[l]-r[l])),[r,o]}function bx(n,e,t,r,s,o,a,l,u){let d;if(r==null?(d=new Array(e.length),d.fill(1)):d=r,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let p=!1;const f={dims:d.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:d.slice(),beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:l,shrinkAxisMask:u};for(let I=0;I<f.dims;I++)p&&(1<<I&l)!==0&&f.numAddAxisAfterEllipsis++,1<<I&a&&(p=!0);p||(f.ellipsisMask|=1<<f.dims,f.dims++);const m={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};S3(f,m);let g=!0,y=!0,v=!0;const w=[],b=[];for(let I=0;I<n.length;++I){if(m.strides[I]===0)throw Error(`strides[${I}] must be non-zero`);const k=!!(m.shrinkAxisMask&1<<I),T=n[I];if(T===-1){w.push(k?1:-1);continue}const O=[m.beginMask&1<<I,m.endMask&1<<I],A=[m.strides[I]>0?0:-1,m.strides[I]>0?T:T-1];if(k&&m.strides[I]<=0)throw Error("only stride 1 allowed on non-range indexing.");v=v&&m.strides[I]===1;const V=!!(m.beginMask&1<<I&&m.endMask&1<<I);if(m.beginValid&&m.endValid){if(k){const W=m.begin[I]<0?T+m.begin[I]:m.begin[I];if(m.begin[I]=W,m.end[I]=m.begin[I]+1,W<0||W>=T)throw Error(`slice index ${m.begin[I]} of dimension ${I} out of bounds.`)}else m.begin[I]=Iw(m.begin[I],0,m.strides[I],T,O,A),m.end[I]=Iw(m.end[I],1,m.strides[I],T,O,A);const E=m.strides[I]===1&&m.begin[I]===0&&m.end[I]===T;g=g&&E,y=y&&(I===0&&m.strides[I]===1||E)}else g=g&&m.strides[I]===1&&V,y=y&&(I===0&&m.strides[I]===1||V);let P,F=!1;if(m.beginValid&&m.endValid?(P=m.end[I]-m.begin[I],F=!0):k?(P=1,F=!0):V&&T>=0&&(m.strides[I]<0?P=-T:P=T,F=!0),F){let E;P===0||P<0!=m.strides[I]<0?E=0:E=Math.trunc(P/m.strides[I])+(P%m.strides[I]!==0?1:0),w.push(E)}else w.push(-1)}for(let I=0;I<m.finalShapeGatherIndices.length;++I){const k=m.finalShapeGatherIndices[I];k>=0?b.push(w[k]):k===Rg&&b.push(1)}return{finalShapeSparse:b.filter((I,k)=>m.finalShapeGatherIndices[k]!==Rg),finalShape:b,isIdentity:g,sliceDim0:y,isSimpleSlice:v,begin:m.begin,end:m.end,strides:m.strides}}function S3(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<s;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(Rg),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(v3),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function Iw(n,e,t,r,s,o){if(s[e])return t>0?o[e]:o[e+1&1];{const a=n<0?r+n:n;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const z2=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:gx,computeFlatOffset:vx,computeOutShape:yx,getNormalizedAxes:b3,isSliceContinous:xx,maskToAxes:w3,parseSliceParams:wx,sliceInfo:bx,startForAxis:B2,startIndicesWithElidedDims:P2,stopForAxis:M2,stopIndicesWithElidedDims:L2,stridesForAxis:V2,stridesWithElidedDims:D2},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const $3="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W2{static sgd(e){return new jf(e)}static momentum(e,t,r=!1){return new dx(e,t,r)}static rmsprop(e,t=.9,r=0,s=null,o=!1){return new px(e,t,r,s,o)}static adam(e=.001,t=.9,r=.999,s=null){return new ux(e,t,r,s)}static adadelta(e=.001,t=.95,r=null){return new ix(e,t,r)}static adamax(e=.002,t=.9,r=.999,s=null,o=0){return new cx(e,t,r,s,o)}static adagrad(e,t=.1){return new lx(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C3=W2;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N3=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function U2(){return new Promise(n=>N3(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sx(n,e){const t=n[0].length;n.forEach((s,o)=>{D(s.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),D(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((s,o)=>{for(let a=0;a<t;a++)D(a===e||s[a]===r[a],()=>`Error in concat${t}D: Shape of tensors[${o}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function _r(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var mr;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(mr||(mr={}));function G2(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let s=1;s<t.length;++s){const o=t[s],a=r[r.length-t.length+s],l=r[a];if(o>=0)if(l>=0){if(l!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+n}] = ${o} but shape[${s+n}] = ${l}`)}else r[a]=o}return r}function H2(n){const e={FIRST_DIM_SIZE:mr.FIRST_DIM_SIZE,VALUE_ROWIDS:mr.VALUE_ROWIDS,ROW_LENGTHS:mr.ROW_LENGTHS,ROW_SPLITS:mr.ROW_SPLITS,ROW_LIMITS:mr.ROW_LIMITS,ROW_STARTS:mr.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function j2(n){return n.length===0?0:n[0]===mr.FIRST_DIM_SIZE?n.length-1:n.length}function q2(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(t,r-1);++s){const o=n[s],a=e[s+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-n.length}] = ${o} but ragged tensor input.flatValues.shape[${s-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $x=30;function Kf(n){return n<=$x?n:pd(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cx(n,e,t){const r=t*(typeof n=="number"?n:n[0]),s=e*(typeof n=="number"?n:n[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Su(n,e,t,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const o=e.length;for(let a=0;a<o;++a)s=s.concat([n[a+1]/e[a],e[a]]);s=s.concat(n.slice(o+1))}return s}function $u(n,e,t=!0){const r=[];if(t){r.push(e);for(let s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],o=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?o.push(a):s.push(a);r.push(...s),r.push(0),r.push(...o)}return r}function Cu(n,e,t,r=!0){const s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?r?s.push(e[o-1]*n[o]):s.push(n[o]/e[o-1]):s.push(n[o]);return s}function Nx(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function kx(n,e,t){const r=n.slice(0,1);for(let s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ix=1.7580993408473768,Tx=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ex=.3275911,Rx=.254829592,_x=-.284496736,Ox=1.421413741,Dx=-1.453152027,Ax=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ss(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function K2(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)e[r/2]=n[r],t[r/2]=n[r+1];return{real:e,imag:t}}function X2(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function Y2(n){const e=Math.floor(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function Fx(n,e){const t=n[e*2],r=n[e*2+1];return{real:t,imag:r}}function Q2(n,e,t,r){n[r*2]=e,n[r*2+1]=t}function Z2(n,e){const t=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const o=(e?2:-2)*Math.PI*(s/n);t[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:t,imag:r}}function J2(n,e,t){const r=(t?2:-2)*Math.PI*(n/e),s=Math.cos(r),o=Math.sin(r);return{real:s,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sg="->",k3=/->/g,Tw=",",Ew="...";function Px(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(k3,"").length)/sg.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${sg}").`);const[r,s]=n.split(sg);D(r.indexOf(Ew)===-1,()=>`The ellipsis notation ("${Ew}") is not supported yet.`);const o=r.split(Tw),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let m=0;m<s.length;++m){const g=s[m];if(!o.some(y=>y.indexOf(g)!==-1))throw new Error(`Output subscripts contain the label ${g} not present in the input subscripts.`);l.indexOf(g)===-1&&l.push(g)}for(let m=0;m<r.length;++m){const g=r[m];l.indexOf(g)===-1&&g!==Tw&&l.push(g)}const u=new Array(o.length);for(let m=0;m<a;++m){if(new Set(o[m].split("")).size!==o[m].length)throw new Error(`Found duplicate axes in input component ${o[m]}. Support for duplicate axes in input is not implemented yet.`);u[m]=[];for(let g=0;g<o[m].length;++g)u[m].push(l.indexOf(o[m][g]))}const d=l.length,p=s.length,f=[];for(let m=p;m<d;++m)f.push(m);return{allDims:l,summedDims:f,idDims:u}}function Lx(n,e){let t=new Array(n);t.fill(-1);for(let s=0;s<e.length;++s)t[e[s]]=s;const r=[];for(let s=0;s<n;++s)t[s]===-1&&r.push(s);return t=t.filter(s=>s!==-1),{permutationIndices:t,expandDims:r}}function Vx(n,e,t){const r=new Array(n);for(let s=0;s<t.length;++s){const o=t[s].shape;for(let a=0;a<e[s].length;++a)r[e[s][a]]===void 0?r[e[s][a]]=o[a]:D(r[e[s][a]]===o[a],()=>`Expected dimension ${r[e[s][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function Bx(n,e){const t=n,r=[];let s=0;n.length===0&&t.push(-1),s=n.length+1;for(let a=0;a<s;++a)r.push([]);const o=[];for(let a=0;a<t.length;++a){const l=t[a],u=I3(e,l);for(const d of u)o.indexOf(d)===-1&&(r[a].push(d),o.push(d))}return{path:t,steps:r}}function Mx(n){return n.every((e,t)=>e===t)}function I3(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function zx(n,e,t=0){let r=[];if(typeof e=="number")D(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const s=e.reduce((a,l)=>(l===-1&&(a+=1),a),0);D(s<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((l,u)=>u>0?l+u:l);e[o]=n.shape[t]-a}D(n.shape[t]===e.reduce((a,l)=>a+l),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eC(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function tC(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function nC(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rC(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function sC(n,e){return`size ${n} must be non-negative, not ${e}`}function oC(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function aC(n,e){const t=oe(n),r=oe(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function iC(n,e){const t=oe(n),r=oe(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _g(){return"segment ids must be >= 0"}function lC(){return"segment ids are not increasing"}function uC(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function cC(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dC(n,e){let t=!1,r;for(n<=$x?(r=n,t=!0):r=pd(n,Math.floor(Math.sqrt(n)));!t;)r>e||r===n?t=!0:r=pd(n,r+1);return r}function pC(n,e,t){const r=[],s=n.length;for(let o=0;o<s;o++)o!==e?r.push(n[o]):r.push(t);return r}function Wx(n,e,t,r){const s=e.shape.length,o=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${o}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let f=0;f<r;++f)if(n.shape[f]!==e.shape[f])throw new Error(`x.shape[${f}]: ${n.shape[f]} should be equal to indices.shape[${f}]: ${e.shape[f]}.`);const a=n.shape[t],l=[];let u=1,d=1,p=1;for(let f=0;f<r;++f)l.push(n.shape[f]),u*=n.shape[f];for(let f=r;f<t;f++)l.push(n.shape[f]),d*=n.shape[f];for(let f=r;f<s;f++)l.push(e.shape[f]);for(let f=t+1;f<o;f++)l.push(n.shape[f]),p*=n.shape[f];return{batchSize:u,sliceSize:p,outerSize:d,dimSize:a,outputShape:l}}const T3=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:Wx,computeOutShape:pC,segOpComputeOptimalWindowSize:dC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function os(n){try{return n.map(e=>ns(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function fC(n){return n.map(e=>Rr(e))}const hC=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:Rx,ERF_A2:_x,ERF_A3:Ox,ERF_A4:Dx,ERF_A5:Ax,ERF_P:Ex,PARALLELIZE_THRESHOLD:$x,get RowPartitionType(){return mr},SELU_SCALE:Tx,SELU_SCALEALPHA:Ix,applyActivation:zf,assertAndGetBroadcastShape:Ve,assertAxesAreInnerMostDims:Ht,assertParamsConsistent:Sx,assignToTypedArray:Q2,axesAreInnerMostDims:_y,calculateShapes:Xs,checkEinsumDimSizes:Vx,checkPadOnDimRoundingMode:rr,combineLocations:KS,combineRaggedTensorToTensorShapes:G2,complexWithEvenIndex:X2,complexWithOddIndex:Y2,computeConv2DInfo:Pt,computeConv3DInfo:Ks,computeDefaultPad:Cy,computeDilation2DInfo:hu,computeOptimalWindowSize:Kf,computeOutAndReduceShapes:Gt,computeOutShape:_r,computePool2DInfo:nr,computePool3DInfo:ls,convertConv2DDataFormat:us,decodeEinsumEquation:Px,eitherStridesOrDilationsAreOne:Zt,expandShapeToKeepDim:Et,exponent:J2,exponents:Z2,fromStringArrayToUint8:fC,fromUint8ToStringArray:os,getAxesPermutation:bt,getBroadcastDims:Do,getComplexWithIndex:Fx,getEinsumComputePath:Bx,getEinsumPermutation:Lx,getFusedBiasGradient:Mf,getFusedDyActivation:Bf,getImageCenter:Cx,getInnerMostAxes:St,getPermuted:$u,getRaggedRank:j2,getReductionAxes:Ty,getReshaped:Su,getReshapedPermuted:Cu,getRowPartitionTypesHelper:H2,getSliceBeginCoords:Nx,getSliceSize:kx,getSparseFillEmptyRowsIndicesDenseShapeMismatch:eC,getSparseFillEmptyRowsNegativeIndexErrorMessage:tC,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:nC,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:oC,getSparseReshapeInputOutputMismatchErrorMessage:iC,getSparseReshapeInputOutputMultipleErrorMessage:aC,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:rC,getSparseReshapeNegativeOutputDimErrorMessage:sC,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:cC,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:_g,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:lC,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:uC,getUndoAxesPermutation:yu,isIdentityPermutation:Mx,log:sE,mergeRealAndImagArrays:ss,prepareAndValidate:qf,prepareSplitSize:zx,segment_util:T3,shouldFuse:Wf,slice_util:z2,splitRealAndImagArrays:K2,stridesOrDilationsArePositive:Oo,tupleValuesAreOne:Qi,upcastType:mn,validateDefaultValueShape:q2,validateInput:Pf,validateUpdateShape:rx,warn:Mn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E3=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Uf,nonMaxSuppressionV4Impl:Gf,nonMaxSuppressionV5Impl:Hf,whereImpl:Lf},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */zP();const R3=Object.freeze(Object.defineProperty({__proto__:null,Abs:Pd,Acos:il,Acosh:ll,AdadeltaOptimizer:ix,AdagradOptimizer:lx,AdamOptimizer:ux,AdamaxOptimizer:cx,Add:Va,AddN:Ld,All:Vd,Any:Bd,ArgMax:Md,ArgMin:zd,Asin:ul,Asinh:cl,Atan:dl,Atan2:fl,Atanh:pl,AvgPool:Wd,AvgPool3D:Ud,AvgPool3DGrad:sy,AvgPoolGrad:ry,BatchMatMul:Gd,BatchToSpaceND:Hd,Bincount:jd,BitwiseAnd:hl,BroadcastArgs:qd,BroadcastTo:QT,Cast:ml,Ceil:gl,ClipByValue:yl,Complex:Kd,ComplexAbs:Xd,Concat:Yd,Conv2D:Qd,Conv2DBackpropFilter:Zd,Conv2DBackpropInput:Jd,Conv3D:ep,Conv3DBackpropFilterV2:oy,Conv3DBackpropInputV2:tp,Cos:xl,Cosh:vl,CropAndResize:sp,Cumprod:np,Cumsum:rp,DataStorage:Qg,DenseBincount:op,DepthToSpace:ap,DepthwiseConv2dNative:ip,DepthwiseConv2dNativeBackpropFilter:lp,DepthwiseConv2dNativeBackpropInput:up,Diag:cp,Dilation2D:dp,Dilation2DBackpropFilter:hg,Dilation2DBackpropInput:fg,Draw:pp,get ENV(){return ty},Einsum:fp,Elu:bl,EluGrad:ay,Environment:_b,Equal:$l,Erf:Sl,Exp:Cl,ExpandDims:hp,Expm1:Nl,FFT:mp,Fill:gp,FlipLeftRight:yp,Floor:kl,FloorDiv:Il,FromPixels:fd,FusedBatchNorm:xp,FusedConv2D:Ui,FusedDepthwiseConv2D:Gi,GatherNd:wp,GatherV2:vp,Greater:Tl,GreaterEqual:El,IFFT:bp,Identity:Rl,Imag:Sp,IsFinite:_l,IsInf:Ol,IsNan:Dl,KernelBackend:Dd,LRN:Np,LRNGrad:iy,LeakyRelu:$p,Less:Al,LessEqual:Fl,LinSpace:Cp,Log:Pl,Log1p:Ll,LogSoftmax:JT,LogicalAnd:Vl,LogicalNot:Bl,LogicalOr:Ml,LogicalXor:ZT,LowerBound:eE,MatrixBandPart:tE,Max:kp,MaxPool:Ip,MaxPool3D:Tp,MaxPool3DGrad:uy,MaxPoolGrad:ly,MaxPoolWithArgmax:Ep,Maximum:zl,Mean:Rp,Min:_p,Minimum:Wl,MirrorPad:Op,Mod:Ul,MomentumOptimizer:dx,Multinomial:Dp,Multiply:Gl,Neg:Ap,NonMaxSuppressionV3:Fp,NonMaxSuppressionV4:Pp,NonMaxSuppressionV5:Lp,NotEqual:Hl,OP_SCOPE_SUFFIX:yy,OneHot:Bp,OnesLike:Vp,Optimizer:Qs,OptimizerConstructors:W2,Pack:Mp,PadV2:zp,Pool:nE,Pow:jl,Prelu:Wp,Prod:Up,RMSPropOptimizer:px,RaggedGather:Gp,RaggedRange:Hp,RaggedTensorToTensor:jp,Range:qp,get Rank(){return yg},Real:Kp,RealDiv:wl,Reciprocal:ql,get Reduction(){return an},Relu:Kl,Relu6:Xl,Reshape:Xp,ResizeBilinear:Qp,ResizeBilinearGrad:dy,ResizeNearestNeighbor:Yp,ResizeNearestNeighborGrad:cy,Reverse:Zp,RotateWithOffset:Cf,Round:Yl,Rsqrt:Ql,SGDOptimizer:jf,ScatterNd:Jp,SearchSorted:tf,Select:nf,Selu:Zl,Sigmoid:nu,Sign:tu,Sin:Jl,Sinh:eu,Slice:rf,Softmax:lf,Softplus:ru,SpaceToBatchND:of,SparseFillEmptyRows:uf,SparseReshape:cf,SparseSegmentMean:df,SparseSegmentSum:pf,SparseToDense:ff,SplitV:af,Sqrt:su,Square:py,SquaredDifference:ou,StaticRegexReplace:au,Step:du,StridedSlice:hf,StringNGrams:mf,StringSplit:gf,StringToHashBucketFast:yf,Sub:iu,Sum:sf,Tan:lu,Tanh:uu,Tensor:xt,TensorBuffer:kt,TensorScatterUpdate:ef,Tile:cu,TopK:xf,Transform:vf,Transpose:wa,Unique:wf,Unpack:bf,UnsortedSegmentSum:Sf,UpperBound:rE,Variable:qi,ZerosLike:$f,_FusedMatMul:Wi,abs:Tn,acos:aS,acosh:iS,add:Oe,addN:lS,all:uS,any:cS,argMax:dS,argMin:pS,asin:fS,asinh:hS,atan:mS,atan2:gS,atanh:yS,avgPool:Ny,avgPool3d:xS,backend:Kb,backend_util:hC,basicLSTMCell:vS,batchNorm:mu,batchNorm2d:wS,batchNorm3d:bS,batchNorm4d:SS,batchToSpaceND:ky,bincount:Iy,bitwiseAnd:$S,booleanMaskAsync:l2,broadcastArgs:CS,broadcastTo:$a,broadcast_util:U_,browser:y3,buffer:Fe,cast:it,ceil:NS,clipByValue:kS,clone:es,complex:rs,concat:Qt,concat1d:IS,concat2d:TS,concat3d:ES,concat4d:RS,conv1d:_S,conv2d:gu,conv2dTranspose:DS,conv3d:AS,conv3dTranspose:FS,copyRegisteredKernels:lE,cos:PS,cosh:LS,cosineWindow:Vf,cumprod:VS,cumsum:BS,customGrad:Fr,denseBincount:MS,deprecationWarn:zE,depthToSpace:zS,depthwiseConv2d:If,device_util:FE,diag:WS,dilation2d:US,disableDeprecationWarnings:ME,dispose:un,disposeVariables:WE,div:at,divNoNan:GS,dot:HS,dropout:f2,einsum:vo,elu:Ry,enableDebugMode:BE,enableProdMode:VE,enclosingPowerOfTwo:ox,engine:fr,ensureShape:jS,env:J,equal:Ey,erf:qS,euclideanNorm:YS,exp:Ws,expandDims:Xr,expm1:QS,eye:Oy,fft:Df,fill:Ba,findBackend:XE,findBackendFactory:YE,floor:Dy,floorDiv:$y,fused:m2,gather:Ay,gatherND:p2,gather_util:x3,getBackend:qb,getGradient:mg,getKernel:ji,getKernelsForBackend:hd,grad:kO,grads:IO,greater:vu,greaterEqual:Fy,ifft:tl,imag:wu,image:w2,inTopKAsync:h2,io:mx,irfft:Jy,isFinite:ZS,isInf:JS,isNaN:e$,keep:gr,kernel_impls:E3,leakyRelu:Py,less:xd,lessEqual:Tf,linalg:b2,linspace:t$,localResponseNormalization:n$,log:Ea,log1p:Ly,logSigmoid:s$,logSoftmax:o$,logSumExp:By,logicalAnd:Zi,logicalNot:My,logicalOr:zy,logicalXor:a$,losses:S2,lowerBound:i$,matMul:Ke,math:i3,max:Io,maxPool:Wy,maxPool3d:l$,maxPoolWithArgmax:u$,maximum:Uy,mean:Ji,memory:UE,meshgrid:c$,min:yd,minimum:el,mirrorPad:d$,mod:p$,moments:f$,movingAverage:u2,mul:ve,multiRNNCell:h$,multinomial:m$,neg:vr,nextFrame:U2,norm:xu,notEqual:Gy,oneHot:vd,ones:Fs,onesLike:g$,op:M,outerProduct:y$,pad:Ma,pad1d:x$,pad2d:v$,pad3d:w$,pad4d:b$,pool:S$,pow:Ta,prelu:jy,print:Sy,prod:$$,profile:GE,raggedGather:C$,raggedRange:N$,raggedTensorToTensor:k$,rand:I$,randomGamma:R$,randomNormal:Yy,randomStandardNormal:_$,randomUniform:Of,randomUniformInt:O$,range:Ra,ready:qE,real:_a,reciprocal:D$,registerBackend:xy,registerGradient:oE,registerKernel:Nf,relu:bu,relu6:Qy,removeBackend:KE,reshape:le,reverse:Gs,reverse1d:A$,reverse2d:F$,reverse3d:P$,reverse4d:L$,rfft:Af,round:Zy,rsqrt:V$,scalar:Be,scatterND:c2,scatter_util:_A,searchSorted:Rf,selu:B$,separableConv2d:M$,serialization:BP,setBackend:jE,setPlatform:QE,setdiff1dAsync:z$,sigmoid:ko,sign:W$,signal:v2,sin:U$,sinh:G$,slice:nt,slice1d:H$,slice2d:j$,slice3d:q$,slice4d:K$,slice_util:z2,softmax:X$,softplus:Vy,spaceToBatchND:Hy,sparse:$2,sparseToDense:d2,spectral:x2,split:Oa,sqrt:Ar,square:tr,squaredDifference:ex,squeeze:Ff,stack:Pr,step:tx,stridedSlice:Y$,string:C2,sub:Pe,sum:ot,sumOutType:kf,tan:Q$,tanh:gd,tensor:xr,tensor1d:zn,tensor2d:Na,tensor3d:nx,tensor4d:Z$,tensor5d:J$,tensor6d:e2,tensorScatterUpdate:t2,tensor_util:RE,test_util:GD,tidy:Ge,tile:Ca,time:HE,topk:n2,train:C3,transpose:nl,truncatedNormal:r2,unique:s2,unregisterGradient:iE,unregisterKernel:aE,unsortedSegmentSum:o2,unstack:Ys,upcastType:mn,upperBound:a2,util:yE,valueAndGrad:TO,valueAndGrads:EO,variable:i2,variableGrads:r$,version_core:$3,where:ts,whereAsync:sx,zeros:Us,zerosLike:_n},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $e(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&D(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _3=Lf;class Xf extends Dd{nextDataId(){return Xf.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Qg(this,fr())}write(e,t,r){this.firstUse&&(this.firstUse=!1,J().get("IS_NODE")&&Mn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:r,refCount:1}),s}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&Tr(r[0])){const o=r.map(a=>Rr(a));s=this.write(o,e,t)}else s=this.write(r,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,r,s,o){this.data.set(e,{values:t,dtype:s,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:r}=this.data.get(e);if(t==="complex64"){const s=this.readSync(r.real.dataId),o=this.readSync(r.imag.dataId);return ss(s,o)}return Rb(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>ns(s));return Fe(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Fe(e.shape,e.dtype,t)}makeOutput(e,t,r){return fr().makeTensorFromTensorInfo(this.makeTensorInfo(t,r,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(e);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=En();return e(),{kernelMs:En()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){$e([e],"where");const t=this.readSync(e.dataId);return _3(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Xf.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mC(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const O3=n=>{const{x:e}=n.inputs,t=n.backend;$e(e,"abs");let r=new Float32Array(oe(e.shape));const s=t.data.get(e.dataId).values;return r=mC(s),t.makeOutput(r,e.shape,e.dtype)},D3={kernelName:Pd,backendName:"cpu",kernelFunc:O3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t(n){return(e,t,r,s,o)=>{const a=Ve(e,t),l=a.length,u=Te(a),d=oe(a),p=Ft(o,d),f=e.length,m=t.length,g=Te(e),y=Te(t),v=Do(e,a),w=Do(t,a);if(v.length+w.length===0)for(let b=0;b<p.length;++b)p[b]=n(r[b%r.length],s[b%s.length]);else for(let b=0;b<p.length;++b){const $=Wo(b,l,u),I=$.slice(-f);v.forEach(A=>I[A]=0);const k=yr(I,f,g),T=$.slice(-m);w.forEach(A=>T[A]=0);const O=yr(T,m,y);p[b]=n(r[k],s[O])}return[p,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rn(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,o=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,l=t.makeTensorInfo(r.shape,"complex64"),u=t.data.get(l.dataId);return u.complexTensorInfos={real:t.makeTensorInfo(r.shape,"float32",o),imag:t.makeTensorInfo(s.shape,"float32",a)},l}const A3={kernelName:Kd,backendName:"cpu",kernelFunc:Rn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bd(n,e,t="float32"){if(t==="complex64"){const s=bd(n,e,"float32"),o=bd(n,e,"float32");return Rn({inputs:{real:s,imag:o},backend:n})}const r=Wt(oe(e),t);return n.makeTensorInfo(e,t,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const F3={kernelName:Rl,backendName:"cpu",kernelFunc:Lr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fo(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.data.get(r.dataId).complexTensorInfos.real,o=t.data.get(s.dataId).values;return t.makeTensorInfo(s.shape,s.dtype,o)}const P3={kernelName:Kp,backendName:"cpu",kernelFunc:Fo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gC(n,e,t,r){if(r==="int32"){const s=Int32Array.from(n);return[e,"int32",s]}if(r==="bool"){const s=js([0],t),[o,a]=$t((l,u)=>l!==u?1:0)(e,[],n,s,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}function Hs(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return Lr({inputs:{x:s},backend:t});const p=bd(t,s.shape,s.dtype),f=Hs({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),m=Rn({inputs:{real:f,imag:p},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}if(s.dtype==="complex64"){const p=Fo({inputs:{input:s},backend:t}),f=Hs({inputs:{x:p},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(p),f}if(!Jg(s.dtype,o)){const p=Lr({inputs:{x:s},backend:t});return{dataId:p.dataId,shape:p.shape,dtype:o}}const a=t.data.get(s.dataId).values,[l,u,d]=gC(a,s.shape,s.dtype,o);return t.makeTensorInfo(l,u,d)}const L3={kernelName:ml,backendName:"cpu",kernelFunc:Hs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rt(n,e,t,r){return t==null?({inputs:s,backend:o})=>{const{a,b:l}=s,u=o;$e([a,l],n);const d=u.data.get(a.dataId).values,p=u.data.get(l.dataId).values,f=a.dtype==="string"?os(d):d,m=a.dtype==="string"?os(p):p,g=r||a.dtype,[y,v]=e(a.shape,l.shape,f,m,g);return u.makeTensorInfo(v,g,y)}:({inputs:s,backend:o})=>{const{a,b:l}=s,u=o;if(a.dtype==="complex64"||l.dtype==="complex64"){const d=Hs({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),p=u.data.get(d.dataId),f=p.complexTensorInfos.real,m=p.complexTensorInfos.imag,g=u.data.get(f.dataId).values,y=u.data.get(m.dataId).values,v=Hs({inputs:{x:l},backend:u,attrs:{dtype:"complex64"}}),w=u.data.get(v.dataId),b=w.complexTensorInfos.real,$=w.complexTensorInfos.imag,I=u.data.get(b.dataId).values,k=u.data.get($.dataId).values,[T,O,A]=t(a.shape,l.shape,g,y,I,k),V=u.makeTensorInfo(A,"float32",T),P=u.makeTensorInfo(A,"float32",O),F=Rn({inputs:{real:V,imag:P},backend:u});return u.disposeIntermediateTensorInfo(d),u.disposeIntermediateTensorInfo(v),u.disposeIntermediateTensorInfo(V),u.disposeIntermediateTensorInfo(P),F}else{const d=u.data.get(a.dataId).values,p=u.data.get(l.dataId).values,f=r||a.dtype,[m,g]=e(a.shape,l.shape,d,p,f);return u.makeTensorInfo(g,f,m)}}}function Ux(n){return(e,t,r,s,o,a)=>{const l=Ve(e,t),u=oe(l),d=l.length,p=Te(l),f=Ft("float32",u),m=Ft("float32",u),g=Do(e,l),y=Do(t,l),v=ss(r,s),w=ss(o,a),b=e.length,$=Te(e),I=t.length,k=Te(t);if(g.length+y.length===0)for(let T=0;T<f.length;T++){const O=T%v.length,A=T%w.length,V=n(v[O*2],v[O*2+1],w[A*2],w[A*2+1]);f[T]=V.real,m[T]=V.imag}else for(let T=0;T<f.length;T++){const O=Wo(T,d,p),A=O.slice(-b);g.forEach(W=>A[W]=0);const V=yr(A,b,$),P=O.slice(-I);y.forEach(W=>P[W]=0);const F=yr(P,I,k),E=n(v[V*2],v[V*2+1],w[F*2],w[F*2+1]);f[T]=E.real,m[T]=E.imag}return[f,m,l]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yC=$t((n,e)=>n+e),V3=Ux((n,e,t,r)=>({real:n+t,imag:e+r})),Da=Rt(Va,yC,V3),B3={kernelName:Va,backendName:"cpu",kernelFunc:Da};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gx(n,e,t,r,s){const o=oe(r),a=Wt(s,t);for(let l=0;l<n.length;l++){const u=n[l];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(o>0?a[u]+=e[l]:a[u]+=1)}return a}function xC(n,e,t,r=!1){const s=n.shape[0],o=n.shape[1],a=Fe([s,t],e.dtype);for(let l=0;l<s;l++)for(let u=0;u<o;u++){const d=n.get(l,u);if(d<0)throw new Error("Input x must be non-negative!");d>=t||(r?a.set(1,l,d):e.size>0?a.set(a.get(l,d)+e.get(l,u),l,d):a.set(a.get(l,d)+1,l,d))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vC=$t((n,e)=>n&e),M3=Rt(hl,vC),z3={kernelName:hl,backendName:"cpu",kernelFunc:M3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vr(n){return(e,t,r)=>{const s=vt(t,e.length);for(let o=0;o<e.length;++o)s[o]=n(e[o],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ye(n,e,t){const r=Vr(e);return Zs(n,r,t)}function Zs(n,e,t){return({inputs:r,attrs:s,backend:o})=>{const{x:a}=r;$e(a,n);const l=o,u=l.data.get(a.dataId).values;let d;if(a.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");d=os(u)}else d=u;const p=t||a.dtype,f=e(d,p,s);return l.makeTensorInfo(a.shape,p,f)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wC=Vr(n=>Math.ceil(n)),W3=Zs(gl,wC),U3={kernelName:gl,backendName:"cpu",kernelFunc:W3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bC(n,e,t,r){const s=vt(t,oe(e));if(r&&t!=="string"){let o=0;n.forEach(a=>{const l=oe(a.shape);s.set(a.vals,o),o+=l})}else{let o=0;n.forEach(a=>{const l=t==="string"?os(a.vals):a.vals;let u=0;for(let d=0;d<a.shape[0];++d){const p=d*e[1]+o;for(let f=0;f<a.shape[1];++f)s[p+f]=l[u++]}o+=a.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SC=$t((n,e)=>n===e?1:0),$C=Rt($l,SC,null,"bool"),G3={kernelName:$l,backendName:"cpu",kernelFunc:$C};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CC=Vr(n=>Math.exp(n)),NC=Zs(Cl,CC,"float32"),H3={kernelName:Cl,backendName:"cpu",kernelFunc:NC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kC=Vr(n=>Math.expm1(n)),j3=Zs(Nl,kC),q3={kernelName:Nl,backendName:"cpu",kernelFunc:j3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IC=Vr(n=>Math.floor(n)),K3=Zs(kl,IC),X3={kernelName:kl,backendName:"cpu",kernelFunc:K3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TC=$t((n,e)=>Math.floor(n/e)),Y3=Rt(Il,TC,null,"int32"),Q3={kernelName:Il,backendName:"cpu",kernelFunc:Y3};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EC(n,e,t,r,s,o,a,l,u){const d=Fe([r,o],t);for(let p=0;p<r;p++){const f=[];let m=0;for(let g=0;g<s;g++){const y=n[p*s+g];m+=y*a[g],f.push(y)}if(m<0||m>=u/o)throw new Error(`Invalid indices: ${f} does not index into ${l}`);for(let g=0;g<o;g++)d.values[p*o+g]=e.get(...e.indexToLoc(m*o+g))}return d}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RC(n,e,t){const r=Fe(t,n.dtype);for(let s=0;s<r.size;++s){const a=r.indexToLoc(s).slice(),l=a[0],u=a[2],d=e.locToIndex([l,u]);a[2]=e.values[d];const p=n.locToIndex(a);0<=p&&p<n.values.length&&(r.values[s]=n.values[p])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _C=$t((n,e)=>n>e?1:0),Z3=Rt(Tl,_C,null,"bool"),J3={kernelName:Tl,backendName:"cpu",kernelFunc:Z3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OC=$t((n,e)=>n>=e?1:0),eL=Rt(El,OC,null,"bool"),tL={kernelName:El,backendName:"cpu",kernelFunc:eL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DC=$t((n,e)=>n<e?1:0),nL=Rt(Al,DC,null,"bool"),rL={kernelName:Al,backendName:"cpu",kernelFunc:nL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AC=$t((n,e)=>n<=e?1:0),sL=Rt(Fl,AC,null,"bool"),oL={kernelName:Fl,backendName:"cpu",kernelFunc:sL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FC(n,e,t){const r=(e-n)/(t-1),s=Wt(t,"float32");s[0]=n;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PC=Vr(n=>Math.log(n)),aL=Zs(Pl,PC),iL={kernelName:Pl,backendName:"cpu",kernelFunc:aL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LC(n,e,t,r){const s=Ft(r,oe(t));for(let o=0;o<s.length;++o){const a=o*e;let l=n[a];for(let u=0;u<e;++u){const d=n[a+u];(Number.isNaN(d)||d>l)&&(l=d)}s[o]=l}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VC=$t((n,e)=>Math.max(n,e)),lL=Rt(zl,VC),uL={kernelName:zl,backendName:"cpu",kernelFunc:lL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC=$t((n,e)=>Math.min(n,e)),cL=Rt(Wl,BC),dL={kernelName:Wl,backendName:"cpu",kernelFunc:cL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hx=$t((n,e)=>n*e),pL=Ux((n,e,t,r)=>({real:n*t-e*r,imag:n*r+e*t})),Yf=Rt(Gl,Hx,pL),fL={kernelName:Gl,backendName:"cpu",kernelFunc:Yf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(n,e,t){const r=is(-1,t);return Hx([],e,r,n,t)}function hL(n){const{inputs:e,backend:t}=n,{x:r}=e;$e(r,"neg");const s=t.data.get(r.dataId).values,[o,a]=MC(s,r.shape,r.dtype);return t.makeTensorInfo(a,r.dtype,o)}const mL={kernelName:Ap,backendName:"cpu",kernelFunc:hL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zC=$t((n,e)=>n!==e?1:0),gL=Rt(Hl,zC,null,"bool"),yL={kernelName:Hl,backendName:"cpu",kernelFunc:gL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jx(n,e,t,r,s){const o=e.length,a=oe(e),l=Te(e),u=Te(s),d=Ft(t,oe(s));for(let p=0;p<a;++p){const f=Wo(p,o,l),m=new Array(f.length);for(let y=0;y<m.length;y++)m[y]=f[r[y]];const g=yr(m,o,u);d[g]=n[p]}return d}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yn(n){const{inputs:e,attrs:t,backend:r}=n,{x:s}=e,{perm:o}=t;$e(s,"transpose");const a=s.shape.length,l=new Array(a);for(let f=0;f<l.length;f++)l[f]=s.shape[o[f]];const u=r.data.get(s.dataId).values,d=jx(u,s.shape,s.dtype,o,l);return{dataId:r.write(d,l,s.dtype),shape:l,dtype:s.dtype}}const xL={kernelName:wa,backendName:"cpu",kernelFunc:yn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WC(n,e,t,r){const[s,o]=Gt(n,r),a=mn(e,"int32"),l=Wt(oe(s),a),u=oe(o);for(let d=0;d<l.length;++d){const p=d*u;let f=1;for(let m=0;m<u;++m)f*=t[p+m];l[d]=f}return{outVals:l,outShape:s,outDtype:a}}function vL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;$e(s,"prod");const l=s.shape.length,u=ze(o,s.shape),d=bt(u,l);let p=u,f=s;const m=[];d!=null&&(f=yn({inputs:{x:s},backend:t,attrs:{perm:d}}),m.push(f),p=St(p.length,l));const g=t.data.get(f.dataId).values,{outVals:y,outShape:v,outDtype:w}=WC(f.shape,f.dtype,g,p);let b=v;return a&&(b=Et(v,u)),m.forEach($=>t.disposeIntermediateTensorInfo($)),t.makeTensorInfo(b,w,y)}const wL={kernelName:Up,backendName:"cpu",kernelFunc:vL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(n,e,t){n.forEach((r,s)=>{if(r<0||r>=t){const o=Wo(s,e.length,Te(e)).join(",");throw new Error(`indices[${o}] = ${r} is not in [0, ${t})`)}})}function SL(n,e){for(let t=0;t<n.length;++t){const r=n[t],s=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let o=1;o<r.length;++o)if(r[o-1]>r[o])throw new Error("Ragged splits must be sorted in ascending order")}}function $L(n,e,t,r){const s=[];let o=0;const a=e.length-1+t.length,l=new Array(a).fill(null).map(()=>[0]);SL(t,r);let u=1;for(let d=0;d<e.length-1;++d){u*=e[d];const p=e[d+1];for(let f=1;f<u+1;++f)l[d].push(f*p)}for(let d=0;d<n.length;++d){let p=n[d],f=n[d]+1;for(let m=0;m<t.length;++m){const g=t[m],y=m+e.length-1;if(y>=0){const v=l[y],w=v[v.length-1]-g[p];for(let b=p;b<f;++b)l[y].push(g[b+1]+w)}p=g[p],f=g[f]}f!==p&&(s.push([p,f]),o+=f-p)}return{outSplits:l,valueSlices:s,numValues:o}}function CL(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,s=vt("int32",r);e.push(s),n[t].forEach((o,a)=>s[a]=o)}return e}function Rw(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function NL(n,e,t,r,s,o){const a=Rw(e,2)[1],l=Rw(o,2)[1];let u=0;for(const d of t)for(let p=d[0];p<d[1];++p){for(let f=0;f<r;++f)s[u*l+f]=n[p*a+f];++u}}function kL(n,e,t,r,s){const o=e.slice();o[0]=s;const a=vt(t,oe(o)),l=n.length,u=l===0?0:l/e[0];return NL(n,e,r,u,a,o),[a,o]}function UC(n,e,t,r,s,o,a,l){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(bL(o,a,u),r.length===0)throw new Error("params.rank must be nonzero");const d=r[0],{outSplits:p,valueSlices:f,numValues:m}=$L(o,a,n,d),g=CL(p),y=kL(t,r,s,f,m);return[g,y[0],y[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _w=2147483647;function GC(n,e,t,r,s,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const l=e.length===0,u=s.length===0,d=a.length===0,p=[];l||p.push(e[0]),u||p.push(s[0]),d||p.push(a[0]);for(let w=1;w<p.length;++w)if(p[w]!==p[w-1])throw new Error("starts, limits, and deltas must have the same shape");const f=p.length===0?1:p[0],m=vt("int32",f+1);m[0]=0;for(let w=0;w<f;++w){const b=l?n[0]:n[w],$=u?r[0]:r[w],I=d?o[0]:o[w];if(I===0)throw new Error("Requires delta != 0");let k;if(I>0&&$<b||I<0&&$>b)k=0;else if(k=Math.ceil(Math.abs(($-b)/I)),k>_w)throw new Error(`Requires ((limit - start) / delta) <= ${_w}`);m[w+1]=m[w]+k}const g=m[f],y=vt(t,g);let v=0;for(let w=0;w<f;++w){const b=m[w+1]-m[w];let $=l?n[0]:n[w];const I=d?o[0]:o[w];for(let k=0;k<b;++k)y[v++]=$,$+=I}return[m,y]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Zn=mr;class Sd{constructor(e,t,r,s,o,a,l,u,d,p){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=s,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=l,this.rowPartitionValues=u,this.rowPartitionValuesShapes=d,this.rowPartitionTypes=H2(p),this.raggedRank=j2(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Zn.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Zn.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Zn.VALUE_ROWIDS:return Sd.getMaxWidthValueRowID(t);case Zn.ROW_SPLITS:return Sd.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Zn[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let s=0;s<t-1;++s){const o=e[s+1]-e[s];o>r&&(r=o)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,s=e[0],o=0;for(let a=1;a<t;++a){const l=e[a];l!==s&&(s=l,o=Math.max(a-r,o),r=a)}return Math.max(t-r,o)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Dw(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;q2(r,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=G2(this.raggedRank,s,t);a[0]<0&&(a[0]=e);for(let l=1;l<=this.raggedRank;++l)a[l]<0&&(a[l]=this.getMaxWidth(l));return a}calculateFirstParentOutputIndex(e,t,r){const s=Math.min(e,r),o=[];let a=0;for(let l=0;l<s;++l,a+=t)o.push(a);for(let l=s;l<e;++l)o.push(-1);return D(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,r,s){const o=e.length,a=[];for(let l=0;l<o-1;++l){const u=e[l+1]-e[l];let d=Math.min(s,u),p=t[l];p===-1&&(d=0);for(let f=0;f<d;++f)a.push(p),p+=r;for(let f=0;f<u-d;++f)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,r,s){const o=e.length,a=[];if(o===0)return[];let l=0,u=e[0];if(u>=t.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${t.length}`);let d=t[u];a.push(d);for(let p=1;p<o;++p){const f=e[p];if(f===u)d>=0&&(++l,l<s?d+=r:d=-1);else{if(l=0,u=f,f>=t.length)throw new Error(`Got nextValueRowId=${f} which is not less than ${t.length}`);d=t[f]}a.push(d)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,r,s){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case Zn.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,r,s);case Zn.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,r,s);default:throw new Error(`Unsupported partition type: ${Zn[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Zn.FIRST_DIM_SIZE:return e[0];case Zn.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Zn.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Zn[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),r=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let u=s.length-2;u>=0;--u)s[u]=s[u+1]*r[u+1];const o=Dw(r,!1),a=vt(this.valuesDType,oe(o));if(s[0]*r[0]>0){let u=this.calculateFirstParentOutputIndex(t,s[0],r[0]);for(let d=1;d<=this.raggedRank;++d)u=this.calculateOutputIndex(d-1,u,s[d],r[d]);this.setOutput(this.raggedRank,u,a,o)}return[o,a]}setOutput(e,t,r,s){if(r.length===0)return;const o=this.values,a=r;let l=s.slice();l=l.slice(e+1);const u=oe(l),d=t.length;let p=this.defaultValue;if(p.length!==u&&p.length!==1){const y=this.defaultValueShape;Ge(()=>{const v=le(p,y);p=$a(v,l).dataSync()})}let f=0,m=0,g=0;for(let y=0;y<=d;++y){let v=y<d?t[y]:-1;if(v===g){++g;continue}if(m<g){const w=o.subarray(f*u),b=a.subarray(m*u),$=(g-m)*u;Ow(b,w,$)}if(y>=d){const w=r.length;v=Math.floor(w/u)}if(v>g)if(this.defaultValue.length===1)a.subarray(g*u,v*u).fill(this.defaultValue[0]),g=v;else for(;v>g;){const w=a.slice(g*u);Ow(w,p,u),++g}v<0?(f=y+1,m=g):(f=y,m=g,g=m+1)}}}function Ow(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function Dw(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function HC(n,e,t,r,s,o,a,l,u,d){return new Sd(n,e,t,r,s,o,a,l,u,d).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jC(n,e,t,r){const s=n===e,o=n<e&&t<0,a=e<n&&t>1;if(s||o||a)return Wt(0,r);const l=Math.abs(Math.ceil((e-n)/t)),u=Wt(l,r);e<n&&t===1&&(t=-1),u[0]=n;for(let d=1;d<u.length;d++)u[d]=u[d-1]+t;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qC=Vr(n=>1/Math.sqrt(n)),IL=Zs(Ql,qC),TL={kernelName:Ql,backendName:"cpu",kernelFunc:IL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $o(n,e,t,r,s,o,a,l,u,d){const p=[r/s,s],f=n.values,m=e.values;if(r===0)return Fe(t,e.dtype);const g=u instanceof kt?u:Fe(p,e.dtype);typeof u=="string"||typeof u=="number"?g.values.fill(u):typeof u=="boolean"&&g.values.fill(+u);for(let y=0;y<o;y++){const v=[];let w=0;for(let b=0;b<a;b++){const $=f[y*a+b];v.push($),w+=$*l[b]}if(w<0||w>=r/s)throw new Error(`Invalid indices: ${v} does not index into ${t}`);for(let b=0;b<s;b++)d?g.values[w*s+b]+=m[y*s+b]:g.values[w*s+b]=e.rank===0?m[0]:m[y*s+b]}return g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EL=Vr(n=>1/(1+Math.exp(-n))),KC=Ye(nu,n=>1/(1+Math.exp(-n))),RL={kernelName:nu,backendName:"cpu",kernelFunc:KC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XC(n,e,t,r,s){const o=xx(r,e,t),a=oe(t),l=Te(r);if(o){const f=vx(e,l);return s==="string"?n.slice(f,f+a):n.subarray(f,f+a)}const u=s==="string"?os(n):n,d=Fe(r,s,u),p=Fe(t,s);for(let f=0;f<p.size;++f){const m=p.indexToLoc(f),g=m.map((y,v)=>y+e[v]);p.set(d.get(...g),...m)}return s==="string"?fC(p.values):p.values}function Po(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,size:a}=r;$e(s,"slice");const[l,u]=wx(s,o,a);gx(s,l,u);const d=t.data.get(s.dataId).values,p=XC(d,l,u,s.shape,s.dtype);return t.makeTensorInfo(u,s.dtype,p)}const _L={kernelName:rf,backendName:"cpu",kernelFunc:Po};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YC(n,e,t,r,s,o,a){const l=e[0],u=o[0],d=new Array(u),p=new Array(l),f=e[1];if(u===0){if(l!==0)throw new Error(eC(l));const w=vt(t,0),b=vt(s,0);return[w,[0,f],b,d,p]}let m=!0,g=0;const y=new Array(u).fill(0);for(let w=0;w<l;++w){const b=n[w*f];if(b<0)throw new Error(tC(w,b));if(b>=u)throw new Error(nC(w,b,u));++y[b],m=m&&b>=g,g=b}let v=!0;for(let w=0;w<u;++w){const b=y[w]===0;d[w]=b,v=v&&!b,y[w]=Math.max(y[w],1),w>0&&(y[w]+=y[w-1])}if(v&&m){const w=n,b=r;for(let $=0;$<l;++$)p[$]=$;return[w,[l,f],b,d,p]}else{const w=y[u-1],b=vt(t,w*f),$=vt(s,w),I=new Array(u).fill(0);for(let k=0;k<l;++k){const T=n[k*f],O=I[T],A=(T===0?0:y[T-1])+O;I[T]++;for(let V=0;V<f;++V)b[A*f+V]=n[k*f+V];$[A]=r[k],p[k]=A}for(let k=0;k<u;++k)if(I[k]===0){const O=k===0?0:y[k-1];b[O*f+0]=k;for(let A=1;A<f;++A)b[O*f+A]=0;$[O]=a}return[b,[w,f],$,d,p]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QC(n,e,t,r,s){const o=oe(r),a=e[0],l=s.length,u=[];let d=1,p=-1;for(let w=0;w<l;++w){const b=s[w];if(b===-1){if(p!==-1)throw new Error(rC(p,w));p=w,u.push(1)}else{if(b<0)throw new Error(sC(w,b));d*=b,u.push(b)}}if(p!==-1){if(d<=0)throw new Error(oC());const w=Math.trunc(o/d);if(d*w!==o)throw new Error(aC(r,u));u[p]=w}if(oe(u)!==o)throw new Error(iC(r,u));const m=r.length,g=[];if(m>0){g[m-1]=1;for(let w=m-2;w>=0;--w)g[w]=g[w+1]*r[w+1]}const y=[];if(l>0){y[l-1]=1;for(let w=l-2;w>=0;--w)y[w]=y[w+1]*u[w+1]}const v=vt(t,a*l);for(let w=0;w<a;++w){let b=0;for(let $=0;$<m;++$)b+=n[w*m+$]*g[$];for(let $=0;$<l;++$)v[w*l+$]=Math.trunc(b/y[$]),b%=y[$]}return[v,[a,l],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qx(n,e,t,r,s,o=!1,a=0){const l=r.length,u=[e[0],n.length/e[0]],d=u[1],f=l>0?s[l-1]+1:0;if(f<0)throw new Error(_g());const m=e.slice();m[0]=f;const g=m.reduce((I,k)=>I*k,1),y=vt(t,g);if(l===0)return f>0&&y.fill(a),[y,m];if(f<=0)throw new Error(_g());let v=0,w=1,b=0,$=s[v];for(;;){let I=0;if(w<l){if(I=s[w],$===I){++w;continue}if($>=I)throw new Error(lC())}if($<0||$>=f)throw new Error(uC($,f));$>b&&y.fill(a,b*d,$*d);for(let k=v;k<w;++k){const T=r[k];if(T<0||T>=u[0])throw new Error(cC(k,r[k],u[0]));for(let O=0;O<d;O++)y[$*d+O]+=n[T*d+O]}if(o)for(let k=0;k<d;k++)y[$*d+k]/=w-v;if(v=w,++w,b=$+1,$=I,w>l)break}return b<f&&y.fill(a,b*d,f*d),[y,m]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OL=Vr(n=>Math.sqrt(n)),DL=Ye(su,n=>Math.sqrt(n)),AL={kernelName:su,backendName:"cpu",kernelFunc:DL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZC=$t((n,e)=>{const t=n-e;return t*t}),FL=Rt(ou,ZC),PL={kernelName:ou,backendName:"cpu",kernelFunc:FL};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JC=Vr((n,e)=>{const{pattern:t,replaceGlobal:r,rewrite:s}=e;return n.replace(new RegExp(t,r?"g":""),s)}),LL=Zs(au,JC),VL={kernelName:au,backendName:"cpu",kernelFunc:LL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n,e,t,r){const s=Fe(n,e.dtype);for(let o=0;o<s.size;o++){const a=s.indexToLoc(o),l=new Array(a.length);for(let u=0;u<l.length;u++)l[u]=a[u]*t[u]+r[u];s.set(e.get(...l),...a)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BL{constructor(e,t,r,s,o,a){this.separator=Rr(e),this.nGramWidths=t,this.leftPad=Rr(r),this.rightPad=Rr(s),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,s,o,a){for(let l=0;l<o;++l){const u=this.getPadWidth(a),d=Math.max(0,u-l),p=Math.max(0,u-(o-(l+1))),f=a-(d+p),m=t+(d>0?0:l-u);let g=0;g+=d*this.leftPad.length;for(let $=0;$<f;++$)g+=e[m+$].length;g+=p*this.rightPad.length;const y=d+p+f-1;g+=y*this.separator.length,r[s+l]=new Uint8Array(g);const v=r[s+l];let w=0;const b=$=>$.forEach(I=>v[w++]=I);for(let $=0;$<d;++$)b(this.leftPad),b(this.separator);for(let $=0;$<f-1;++$)b(e[m+$]),b(this.separator);if(f>0){b(e[m+f-1]);for(let $=0;$<p;++$)b(this.separator),b(this.rightPad)}else{for(let $=0;$<p-1;++$)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(e,t){const r=e.length,s=t.length;if(s>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let d=1;d<s;++d){let p=t[d]>=u;if(p=p&&t[d]<=r,!p)throw new Error(`Invalid split value ${t[d]}, must be in [${u}, ${r}]`);u=t[d]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const o=s-1,a=vt("int32",s);if(r===0||s===0){const u=new Array(r);for(let d=0;d<=o;++d)a[d]=0;return[u,a]}a[0]=0;for(let u=1;u<=o;++u){const d=t[u]-t[u-1];let p=0;this.nGramWidths.forEach(f=>{p+=this.getNumNGrams(d,f)}),this.preserveShort&&d>0&&p===0&&(p=1),a[u]=a[u-1]+p}const l=new Array(a[o]);for(let u=0;u<o;++u){const d=t[u];let p=a[u];if(this.nGramWidths.forEach(f=>{const m=t[u+1]-t[u],g=this.getNumNGrams(m,f);this.createNGrams(e,d,l,p,g,f),p+=g}),this.preserveShort&&p===a[u]){const f=t[u+1]-t[u];if(f===0)continue;const m=f+2*this.padWidth;this.createNGrams(e,d,l,p,1,m)}}return[l,a]}}function tN(n,e,t,r,s,o,a,l){return new BL(t,r,s,o,a,l).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(n,e,t,r){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)r.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=n.indexOf(o);for(;a!==-1;){const l=n.subarray(0,a);(!t||l.length!==0)&&r.push(l),n=n.subarray(a+1),a=n.indexOf(o)}(!t||n.length!==0)&&r.push(n);return}let s=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const a=n.subarray(s,o);(!t||a.length!==0)&&r.push(a),s=o+1}}function nN(n,e,t){const r=n.length,s=[];let o=0,a=0;const l=new Array(r);for(let m=0;m<r;++m){const g=s.length;ML(n[m],e,t,s);const y=s.length-g;l[m]=y,o+=y,a=Math.max(a,y)}const u=vt("int32",o*2),d=new Array(o),p=[r,a];let f=0;for(let m=0;m<r;++m)for(let g=0;g<l[m];++g)u[f*2]=m,u[f*2+1]=g,d[f]=s[f],++f;return[u,d,p]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rN(n,e){const t=vt("int32",n.length);for(let r=0;r<n.length;++r)t[r]=Vb(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sN=$t((n,e)=>n-e),zL=Ux((n,e,t,r)=>({real:n-t,imag:e-r})),Kx=Rt(iu,sN,zL),WL={kernelName:iu,backendName:"cpu",kernelFunc:Kx};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oN(n,e){const t=new Array(n.rank);for(let s=0;s<t.length;s++)t[s]=n.shape[s]*e[s];const r=Fe(t,n.dtype);for(let s=0;s<r.values.length;++s){const o=r.indexToLoc(s),a=new Array(n.rank);for(let u=0;u<a.length;u++)a[u]=o[u]%n.shape[u];const l=n.locToIndex(a);r.values[s]=n.values[l]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Li=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function aN(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const l=r-t+1,u=e-t+1,d=Math.log(l),p=.5*Math.exp(2*d/3),f=.5*Math.sqrt(d*p*(l-p)/l)*Math.sign(u-l/2),m=Math.max(t,Math.floor(e-u*p/l+f)),g=Math.min(r,Math.floor(e+(l-u)*p/l+f));aN(n,e,m,g)}const s=n[e];let o=t,a=r;for(Zr(n,t,e),Li(n[r],s)>0&&Zr(n,t,r);o<a;){for(Zr(n,o,a),o++,a--;Li(n[o],s)<0;)o=o+1;for(;Li(n[a],s)>0;)a=a-1}Li(n[t],s)===0?Zr(n,t,a):(a=a+1,Zr(n,a,r)),a<=e&&(t=a+1),e<=a&&(r=a-1)}}function iN(n,e,t,r,s){const o=e[e.length-1],[a,l]=[n.length/o,o],u=Ft(t,a*r),d=Ft("int32",a*r);for(let f=0;f<a;f++){const m=f*l,g=n.subarray(m,m+l);let y=new Array(g.length);g.forEach(($,I)=>y[I]={value:$,index:I}),r<y.length&&(aN(y,r),y=y.slice(0,r)),s&&y.sort(Li);const v=f*r,w=u.subarray(v,v+r),b=d.subarray(v,v+r);for(let $=0;$<r;$++)w[$]=y[$].value,b[$]=y[$].index}const p=e.slice();return p[p.length-1]=r,[Fe(p,t,u),Fe(p,"int32",d)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(n,e,t,r){const s=ze(e,t)[0],o=[1,t[0],1];for(let y=0;y<s;y++)o[0]*=t[y];o[1]=t[s];for(let y=s+1;y<t.length;y++)o[2]*=t[y];const a=new Map,l=new Int32Array(t[s]),u=new kt(o,r,n),d=[],p=o[0]===1&&o[2]===1;for(let y=0;y<t[s];y++){let v;if(p)v=n[y].toString();else{const b=[];for(let $=0;$<o[0];$++)for(let I=0;I<o[2];I++)b.push(u.get($,y,I));v=b.join(",")}const w=a.get(v);if(w!=null)l[y]=w;else{const b=a.size;a.set(v,b),l[y]=b,d.push(y)}}const f=o.slice();f[1]=a.size;const m=new kt(f,r);d.forEach((y,v)=>{for(let w=0;w<o[0];w++)for(let b=0;b<o[2];b++)m.set(u.get(w,y,b),w,v,b)});const g=t.slice();return g[s]=f[1],{outputValues:m.values,outputShape:g,indices:l}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UL=Object.freeze(Object.defineProperty({__proto__:null,addImpl:yC,bincountImpl:Gx,bincountReduceImpl:xC,bitwiseAndImpl:vC,castImpl:gC,ceilImpl:wC,concatImpl:bC,equalImpl:SC,expImpl:CC,expm1Impl:kC,floorDivImpl:TC,floorImpl:IC,gatherNdImpl:EC,gatherV2Impl:RC,greaterEqualImpl:OC,greaterImpl:_C,lessEqualImpl:AC,lessImpl:DC,linSpaceImpl:FC,logImpl:PC,maxImpl:LC,maximumImpl:VC,minimumImpl:BC,multiplyImpl:Hx,negImpl:MC,notEqualImpl:zC,prodImpl:WC,raggedGatherImpl:UC,raggedRangeImpl:GC,raggedTensorToTensorImpl:HC,rangeImpl:jC,rsqrtImpl:qC,scatterImpl:$o,sigmoidImpl:EL,simpleAbsImpl:mC,sliceImpl:XC,sparseFillEmptyRowsImpl:YC,sparseReshapeImpl:QC,sparseSegmentReductionImpl:qx,sqrtImpl:OL,squaredDifferenceImpl:ZC,staticRegexReplaceImpl:JC,stridedSliceImpl:eN,stringNGramsImpl:tN,stringSplitImpl:nN,stringToHashBucketFastImpl:rN,subImpl:sN,tileImpl:oN,topKImpl:iN,transposeImpl:jx,uniqueImpl:lN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */xy("cpu",()=>new Xf,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uN=Ye(bl,n=>n>=0?n:Math.exp(n)-1),GL={kernelName:bl,backendName:"cpu",kernelFunc:uN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cN(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:o}=r;$e([s],"leakyRelu");const a=oe(s.shape),l=t.data.get(s.dataId).values,u=Ft("float32",a);for(let d=0;d<l.length;d++)u[d]=l[d]<0?o*l[d]:l[d];return t.makeTensorInfo(s.shape,"float32",u)}const HL={kernelName:$p,backendName:"cpu",kernelFunc:cN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jL=$t((n,e)=>n<0?e*n:n);function dN(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e;$e([r,s],"prelu");const o=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,[l,u]=jL(r.shape,s.shape,o,a,"float32");return t.makeTensorInfo(u,"float32",l)}const qL={kernelName:Wp,backendName:"cpu",kernelFunc:dN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pN=Ye(Kl,n=>Math.max(0,n)),KL={kernelName:Kl,backendName:"cpu",kernelFunc:pN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fN=Ye(Xl,n=>Math.min(Math.max(0,n),6)),XL={kernelName:Xl,backendName:"cpu",kernelFunc:fN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $d(n,e,t,r,s){if(t==="linear")return Lr({inputs:{x:e},backend:n});if(t==="relu")return pN({inputs:{x:e},backend:n});if(t==="elu")return uN({inputs:{x:e},backend:n});if(t==="relu6")return fN({inputs:{x:e},backend:n});if(t==="prelu")return dN({inputs:{x:e,alpha:r},backend:n});if(t==="leakyrelu")return cN({inputs:{x:e},backend:n,attrs:{alpha:s}});if(t==="sigmoid")return KC({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lt(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:o}=r,a=oe(s.shape),l=Zg(o,a),u=oe(l);D(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(s.dataId);const d=t.data.get(s.dataId);if(d.complexTensorInfos!=null){const p=d.complexTensorInfos.real,f=d.complexTensorInfos.imag;p.shape=l,f.shape=l}return{dataId:s.dataId,shape:l,dtype:s.dtype}}const YL={kernelName:Xp,backendName:"cpu",kernelFunc:lt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o}=e,{transposeA:a,transposeB:l}=r;$e([s,o],"matMul");const u=s.shape.length,d=o.shape.length,p=a?s.shape[u-2]:s.shape[u-1],f=l?o.shape[d-1]:o.shape[d-2],m=a?s.shape[u-1]:s.shape[u-2],g=l?o.shape[d-2]:o.shape[d-1],y=s.shape.slice(0,-2),v=o.shape.slice(0,-2),w=oe(y),b=oe(v),I=Ve(s.shape.slice(0,-2),o.shape.slice(0,-2)).concat([m,g]);D(p===f,()=>`Error in matMul: inner shapes (${p}) and (${f}) of Tensors with shapes ${s.shape} and ${o.shape} and transposeA=${a} and transposeB=${l} must match.`);const k=a?[w,p,m]:[w,m,p],T=l?[b,g,f]:[b,f,g],O=lt({inputs:{x:s},backend:t,attrs:{shape:k}}),A=lt({inputs:{x:o},backend:t,attrs:{shape:T}}),V=a?O.shape[1]:O.shape[2],P=a?O.shape[2]:O.shape[1],F=l?A.shape[1]:A.shape[2],E=Math.max(w,b),W=t.data.get(O.dataId).values,j=t.data.get(A.dataId).values,Y=Te(O.shape),Q=Te(A.shape),[Z,ne,U]=a?[Y[0],1,Y[1]]:[Y[0],Y[1],1],[K,X,L]=l?[1,Q[1],Q[0]]:[Q[1],1,Q[0]],H=P*F,se=Fe([E,P,F],O.dtype),ae=se.values,ie=t.blockSize;for(let ue=0;ue<E;ue++){const he=ue%w,me=ue%b;for(let xe=0;xe<P;xe+=ie){const Ee=Math.min(xe+ie,P);for(let Ae=0;Ae<F;Ae+=ie){const We=Math.min(Ae+ie,F);for(let He=0;He<V;He+=ie){const rt=Math.min(He+ie,V);for(let Xe=xe;Xe<Ee;Xe++)for(let je=Ae;je<We;je++){let et=0;for(let tt=He;tt<rt;tt++){const An=W[he*Z+Xe*ne+tt*U],pt=j[tt*K+je*X+me*L];et+=An*pt}ae[ue*H+(Xe*F+je)]+=et}}}}}return t.disposeIntermediateTensorInfo(O),t.disposeIntermediateTensorInfo(A),t.makeTensorInfo(I,se.dtype,se.values)}const QL={kernelName:Gd,backendName:"cpu",kernelFunc:hN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o,bias:a,preluActivationWeights:l}=e,{transposeA:u,transposeB:d,activation:p,leakyreluAlpha:f}=r;let m,g,y;const v=[];m=hN({inputs:{a:s,b:o},attrs:{transposeA:u,transposeB:d},backend:t}),a&&(g=Da({inputs:{a:m,b:a},backend:t}),v.push(m),m=g),p&&(y=$d(t,m,p,l,f),v.push(m),m=y);for(const b of v)t.disposeIntermediateTensorInfo(b);return m}const JL={kernelName:Wi,backendName:"cpu",kernelFunc:ZL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e4=Ye(il,n=>Math.acos(n)),t4={kernelName:il,backendName:"cpu",kernelFunc:e4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n4=Ye(ll,n=>Math.acosh(n)),r4={kernelName:ll,backendName:"cpu",kernelFunc:n4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(n){const{inputs:e,backend:t}=n,r=e;$e(e,"addN");const s=r.map(l=>t.data.get(l.dataId).values),o=Fe(r[0].shape,r[0].dtype),a=o.values;for(let l=0;l<r.length;l++){const u=s[l];for(let d=0;d<a.length;d++)a[d]+=u[d]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const o4={kernelName:Ld,backendName:"cpu",kernelFunc:s4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;$e(s,"all");const l=ze(o,s.shape);let u=l;const d=bt(u,s.shape.length);let p=s;d!=null&&(p=yn({inputs:{x:s},backend:t,attrs:{perm:d}}),u=St(u.length,s.shape.length)),Ht("all",u,p.shape.length);const[f,m]=Gt(p.shape,u),g=oe(m),y=Wt(oe(f),p.dtype),v=t.data.get(p.dataId).values;for(let b=0;b<y.length;++b){const $=b*g;let I=v[$];for(let k=0;k<g;++k){const T=v[$+k];I=I&&T}y[b]=I}d!=null&&t.disposeIntermediateTensorInfo(p);const w=t.makeTensorInfo(f,p.dtype,y);if(a){const b=Et(f,l),$=lt({inputs:{x:w},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(w),$}return w}const i4={kernelName:Vd,backendName:"cpu",kernelFunc:a4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;$e(s,"any");const l=ze(o,s.shape);let u=l;const d=bt(u,s.shape.length);let p=s;d!=null&&(p=yn({inputs:{x:s},backend:t,attrs:{perm:d}}),u=St(u.length,s.shape.length)),Ht("any",u,p.shape.length);const[f,m]=Gt(p.shape,u),g=oe(m),y=Wt(oe(f),p.dtype),v=t.data.get(p.dataId).values;for(let b=0;b<y.length;++b){const $=b*g;let I=v[$];for(let k=0;k<g;++k){const T=v[$+k];I=I||T}y[b]=I}d!=null&&t.disposeIntermediateTensorInfo(p);const w=t.makeTensorInfo(f,p.dtype,y);if(a){const b=Et(f,l),$=lt({inputs:{x:w},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(w),$}return w}const u4={kernelName:Bd,backendName:"cpu",kernelFunc:l4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;$e(s,"argMax");let a=ze(o,s.shape);const l=bt(a,s.shape.length);let u=s;const d=[];l!=null&&(u=yn({inputs:{x:s},backend:t,attrs:{perm:l}}),d.push(u),a=St(a.length,u.shape.length)),a=[a[0]],Ht("argMax",a,u.shape.length);const[p,f]=Gt(u.shape,a),m=oe(p),g=Wt(m,"int32"),y=oe(f),v=t.data.get(u.dataId).values;for(let w=0;w<g.length;++w){const b=w*y;let $=v[b],I=0;for(let k=0;k<y;++k){const T=v[b+k];T>$&&($=T,I=k)}g[w]=I}return d.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(p,"int32",g)}const d4={kernelName:Md,backendName:"cpu",kernelFunc:c4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;$e(s,"argMin");let a=ze(o,s.shape);const l=bt(a,s.shape.length);let u=s;const d=[];l!=null&&(u=yn({inputs:{x:s},backend:t,attrs:{perm:l}}),d.push(u),a=St(a.length,u.shape.length)),a=[a[0]],Ht("argMin",a,u.shape.length);const[p,f]=Gt(u.shape,a),m=oe(p),g=Wt(m,"int32"),y=oe(f),v=t.data.get(u.dataId).values;for(let w=0;w<g.length;++w){const b=w*y;let $=v[b],I=0;for(let k=0;k<y;++k){const T=v[b+k];T<$&&($=T,I=k)}g[w]=I}return d.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(p,"int32",g)}const f4={kernelName:zd,backendName:"cpu",kernelFunc:p4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h4=Ye(ul,n=>Math.asin(n)),m4={kernelName:ul,backendName:"cpu",kernelFunc:h4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g4=Ye(cl,n=>Math.asinh(n)),y4={kernelName:cl,backendName:"cpu",kernelFunc:g4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x4=Ye(dl,n=>Math.atan(n)),v4={kernelName:dl,backendName:"cpu",kernelFunc:x4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w4=$t((n,e)=>Math.atan2(n,e)),b4=Rt(fl,w4),S4={kernelName:fl,backendName:"cpu",kernelFunc:b4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $4=Ye(pl,n=>Math.atanh(n)),C4={kernelName:pl,backendName:"cpu",kernelFunc:$4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xx(n,e,t,r,s,o){const a=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,d=s.dilationWidth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.top,g=s.padInfo.left,y=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Fe(s.outShape,t),w=v.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],$=s.outShape[2]*s.outShape[3],I=s.outShape[3];for(let k=0;k<s.batchSize;++k){const T=k*b,O=k*r[0];for(let A=0;A<s.inChannels;++A)for(let V=0;V<s.outHeight;++V){const P=V*a-m,F=Math.max(0,P),E=Math.min(s.inHeight,p+P),W=T+V*$;for(let j=0;j<s.outWidth;++j){const Y=j*l-g,Q=Math.max(0,Y),Z=Math.min(s.inWidth,f+Y);let ne=y,U=0,K=0;for(let L=F;L<E;L+=u){const H=O+L*r[1];for(let se=Q;se<Z;se+=d){const ae=H+se*r[2],ie=n[ae+A];o==="max"&&ie>ne?ne=ie:o==="avg"&&(U+=ie,K++)}if(isNaN(ne))break}const X=W+j*I+A;w[X]=o==="avg"?U/K:ne}}}return v}function mN(n,e,t,r,s=!1,o=!1){const a=Fe(r.outShape,"int32"),l=r.strideHeight,u=r.strideWidth,d=r.dilationHeight,p=r.dilationWidth,f=r.effectiveFilterHeight,m=r.effectiveFilterWidth,g=r.padInfo.top,y=r.padInfo.left,v=Fe(e,t,n);for(let w=0;w<r.batchSize;++w)for(let b=0;b<r.inChannels;++b)for(let $=0;$<r.outHeight;++$){const I=$*l-g;let k=I;for(;k<0;)k+=d;const T=Math.min(r.inHeight,f+I);for(let O=0;O<r.outWidth;++O){const A=O*u-y;let V=A;for(;V<0;)V+=p;const P=Math.min(r.inWidth,m+A);let F=Number.NEGATIVE_INFINITY,E=-1;for(let W=k;W<T;W+=d){const j=W-I;for(let Y=V;Y<P;Y+=p){const Q=Y-A,Z=v.get(w,W,Y,b);Z>F&&(F=Z,s?E=o?((w*r.inHeight+W)*r.inWidth+Y)*r.inChannels+b:(W*r.inWidth+Y)*r.inChannels+b:E=j*m+Q)}}a.set(E,w,$,O,b)}}return a}function gN(n,e,t,r,s,o){const a=s.strideDepth,l=s.strideHeight,u=s.strideWidth,d=s.dilationDepth,p=s.dilationHeight,f=s.dilationWidth,m=s.effectiveFilterDepth,g=s.effectiveFilterHeight,y=s.effectiveFilterWidth,v=s.padInfo.front,w=s.padInfo.top,b=s.padInfo.left,$=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,I=Fe(s.outShape,t),k=I.values,T=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],O=s.outShape[2]*s.outShape[3]*s.outShape[4],A=s.outShape[3]*s.outShape[4],V=s.outShape[4];for(let P=0;P<s.batchSize;++P){const F=P*T,E=P*r[0];for(let W=0;W<s.inChannels;++W)for(let j=0;j<s.outDepth;++j){const Y=j*a-v;let Q=Y;for(;Q<0;)Q+=d;const Z=Math.min(s.inDepth,m+Y),ne=F+j*O;for(let U=0;U<s.outHeight;++U){const K=U*l-w;let X=K;for(;X<0;)X+=p;const L=Math.min(s.inHeight,g+K),H=ne+U*A;for(let se=0;se<s.outWidth;++se){const ae=se*u-b;let ie=ae;for(;ie<0;)ie+=f;const ue=Math.min(s.inWidth,y+ae),he=H+se*V;let me=$,xe=0,Ee=0;for(let We=Q;We<Z;We+=d){const He=E+We*r[1];for(let rt=X;rt<L;rt+=p){const Xe=He+rt*r[2];for(let je=ie;je<ue;je+=f){const et=Xe+je*r[3],tt=n[et+W];if(o==="max"&&tt>me?me=tt:o==="avg"&&(xe+=tt,Ee++),isNaN(me))break}if(isNaN(me))break}if(isNaN(me))break}const Ae=he+W;k[Ae]=o==="avg"?xe/Math.max(Ee,1):me}}}}return I}function N4(n,e){const t=Fe(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,a=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;for(let v=0;v<e.batchSize;++v)for(let w=0;w<e.inChannels;++w)for(let b=0;b<e.outDepth;++b){const $=b*r-m;let I=$;for(;I<0;)I+=a;const k=Math.min(e.inDepth,d+$);for(let T=0;T<e.outHeight;++T){const O=T*s-g;let A=O;for(;A<0;)A+=l;const V=Math.min(e.inHeight,p+O);for(let P=0;P<e.outWidth;++P){const F=P*o-y;let E=F;for(;E<0;)E+=u;const W=Math.min(e.inWidth,f+F);let j=Number.NEGATIVE_INFINITY,Y=-1;for(let Q=I;Q<k;Q+=a){const Z=Q-$;for(let ne=A;ne<V;ne+=l){const U=ne-O;for(let K=E;K<W;K+=u){const X=K-F,L=n.get(v,Q,ne,K,w);L>=j&&(j=L,Y=Z*p*f+U*p+X)}}}t.set(Y,v,b,T,P,w)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;$e(s,"avgPool");const{filterSize:o,strides:a,pad:l,dimRoundingMode:u}=r,d=1;D(Zt(a,d),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=nr(s.shape,o,a,d,l,u);let f;if(p.filterWidth===1&&p.filterHeight===1&&Ze(p.inShape,p.outShape))f=Lr({inputs:{x:s},backend:t});else{const m=t.data.get(s.dataId).values,g=Te(s.shape),y=Xx(m,s.shape,s.dtype,g,p,"avg");f=t.makeTensorInfo(p.outShape,s.dtype,y.values)}return f}const I4={kernelName:Wd,backendName:"cpu",kernelFunc:k4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:u,dataFormat:d}=r;$e(s,"avgPool3d");const p=ls(s.shape,o,a,1,l,u,d),f=t.data.get(s.dataId).values,m=gN(f,s.shape,s.dtype,Te(s.shape),p,"avg");return t.makeTensorInfo(m.shape,"float32",m.values)}const E4={kernelName:Ud,backendName:"cpu",kernelFunc:T4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,{filterSize:a,strides:l,pad:u,dimRoundingMode:d}=r;$e([s,o],"avgPool3DGrad");const p=ls(o.shape,a,l,1,u,d),f=p.strideDepth,m=p.strideHeight,g=p.strideWidth,y=p.filterDepth,v=p.filterHeight,w=p.filterWidth,b=p.dilationDepth,$=p.dilationHeight,I=p.dilationWidth,k=p.effectiveFilterDepth,T=p.effectiveFilterHeight,O=p.effectiveFilterWidth,A=k-1-p.padInfo.front,V=O-1-p.padInfo.left,P=T-1-p.padInfo.top,F=Fe(o.shape,"float32"),E=1/(y*v*w),W=t.bufferSync(s);for(let j=0;j<p.batchSize;++j)for(let Y=0;Y<p.inChannels;++Y)for(let Q=0;Q<p.inDepth;++Q)for(let Z=0;Z<p.inHeight;++Z)for(let ne=0;ne<p.inWidth;++ne){const U=Q-A,K=Z-P,X=ne-V;let L=0;for(let H=0;H<k;H+=b){const se=(U+H)/f;if(!(se<0||se>=p.outDepth||Math.floor(se)!==se))for(let ae=0;ae<T;ae+=$){const ie=(K+ae)/m;if(!(ie<0||ie>=p.outHeight||Math.floor(ie)!==ie))for(let ue=0;ue<O;ue+=I){const he=(X+ue)/g;if(he<0||he>=p.outWidth||Math.floor(he)!==he)continue;const me=W.get(j,se,ie,he,Y);L+=me}}}F.set(L*E,j,Q,Z,ne,Y)}return t.makeTensorInfo(F.shape,F.dtype,F.values)}const _4={kernelName:sy,backendName:"cpu",kernelFunc:R4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O4(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o;$e([s,o],"avgPoolGrad");const{filterSize:l,strides:u,pad:d}=r,p=nr(a.shape,l,u,1,d),f=p.strideHeight,m=p.strideWidth,g=p.filterHeight,y=p.filterWidth,v=p.dilationHeight,w=p.dilationWidth,b=p.effectiveFilterHeight,$=p.effectiveFilterWidth,I=$-1-p.padInfo.left,k=b-1-p.padInfo.top,T=Fe(a.shape,"float32"),O=1/(g*y),A=t.data.get(s.dataId).values,V=Fe(s.shape,"float32",A);for(let P=0;P<p.batchSize;++P)for(let F=0;F<p.inChannels;++F)for(let E=0;E<p.inHeight;++E)for(let W=0;W<p.inWidth;++W){const j=E-k,Y=W-I;let Q=0;for(let Z=0;Z<b;Z+=v){const ne=(j+Z)/f;if(!(ne<0||ne>=p.outHeight||Math.floor(ne)!==ne))for(let U=0;U<$;U+=w){const K=(Y+U)/m;if(K<0||K>=p.outWidth||Math.floor(K)!==K)continue;const X=V.get(P,ne,K,F);Q+=X}}T.set(Q*O,P,E,W,F)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const D4={kernelName:ry,backendName:"cpu",kernelFunc:O4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,scale:o,offset:a,mean:l,variance:u}=e;D(l.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(a==null||l.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(o==null||l.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),$e([s,l,u,o,a],"batchNorm");let{varianceEpsilon:d}=r;d==null&&(d=.001);const p=t.data.get(s.dataId).values,f=t.data.get(l.dataId).values,m=t.data.get(u.dataId).values,g=o?t.data.get(o.dataId).values:new Float32Array([1]),y=a?t.data.get(a.dataId).values:new Float32Array([0]),v=new Float32Array(p.length),w=y.length,b=g.length,$=m.length,I=f.length;let k=0,T=0,O=0,A=0;for(let V=0;V<p.length;++V)v[V]=y[k++]+(p[V]-f[T++])*g[O++]/Math.sqrt(m[A++]+d),k>=w&&(k=0),T>=I&&(T=0),O>=b&&(O=0),A>=$&&(A=0);return t.makeTensorInfo(s.shape,s.dtype,v)}const F4={kernelName:xp,backendName:"cpu",kernelFunc:A4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,crops:a}=r;$e([s],"batchToSpaceND");const l=o.reduce((b,$)=>b*$),u=Su(s.shape,o,l),d=$u(u.length,o.length),p=Cu(s.shape,o,l),f=Nx(a,o.length),m=kx(p,a,o.length),g=lt({inputs:{x:s},backend:t,attrs:{shape:u}}),y=yn({inputs:{x:g},backend:t,attrs:{perm:d}}),v=lt({inputs:{x:y},backend:t,attrs:{shape:p}}),w=Po({inputs:{x:v},backend:t,attrs:{begin:f,size:m}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(v),w}const L4={kernelName:Hd,backendName:"cpu",kernelFunc:P4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a}=r,l=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,d=Gx(l,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,d)}const B4={kernelName:jd,backendName:"cpu",kernelFunc:V4};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M4(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,o=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,l=Ve(Array.from(o),Array.from(a));return t.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const z4={kernelName:qd,backendName:"cpu",kernelFunc:M4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4=Ye(yl,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),U4={kernelName:yl,backendName:"cpu",kernelFunc:W4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G4=n=>{const{x:e}=n.inputs,t=n.backend,r=new Float32Array(oe(e.shape)),s=t.data.get(e.dataId),o=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,l=t.data.get(o.dataId).values,u=t.data.get(a.dataId).values;for(let d=0;d<l.length;d++){const p=l[d],f=u[d];r[d]=Math.hypot(p,f)}return t.makeOutput(r,e.shape,"float32")},H4={kernelName:Xd,backendName:"cpu",kernelFunc:G4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aa(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.data.get(r.dataId).complexTensorInfos.imag,o=t.data.get(s.dataId).values;return t.makeTensorInfo(s.shape,s.dtype,o)}const j4={kernelName:Sp,backendName:"cpu",kernelFunc:Aa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fa(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,o=ze(s,e[0].shape)[0],a=e.map(v=>v.shape);Sx(a,o);let l=_r(e.map(v=>v.shape),o);if(oe(l)===0)return t.makeTensorInfo(l,e[0].dtype,[]);const u=e.filter(v=>oe(v.shape)>0);if(u.length===1)return Lr({inputs:{x:u[0]},backend:t});if(u[0].dtype==="complex64"){const v=u.map(k=>Fo({inputs:{input:k},backend:t})),w=u.map(k=>Aa({inputs:{input:k},backend:t})),b=Fa({inputs:v,backend:t,attrs:{axis:o}}),$=Fa({inputs:w,backend:t,attrs:{axis:o}}),I=Rn({inputs:{real:b,imag:$},backend:t});return v.forEach(k=>t.disposeIntermediateTensorInfo(k)),w.forEach(k=>t.disposeIntermediateTensorInfo(k)),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo($),I}const d=u.map(v=>{const b=[-1,oe(v.shape.slice(o))];return lt({inputs:{x:v},backend:t,attrs:{shape:b}})}),p=d.map(v=>({vals:t.data.get(v.dataId).values,shape:v.shape}));l=_r(d.map(v=>v.shape),1);const f=d[0].shape[0]===1,m=bC(p,l,e[0].dtype,f),g=_r(u.map(v=>v.shape),o),y=t.makeTensorInfo(g,e[0].dtype,m);return d.forEach(v=>t.disposeIntermediateTensorInfo(v)),y}const q4={kernelName:Yd,backendName:"cpu",kernelFunc:Fa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yN(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p}=r;$e([s,o],"conv2d");const f=us(u),m=Pt(s.shape,o.shape,a,d,l,p,!1,f),g=m.filterHeight,y=m.filterWidth,v=m.dilationHeight,w=m.dilationWidth,b=m.padInfo.left,$=m.padInfo.top,I=m.dataFormat==="channelsLast",k=new kt(m.outShape,s.dtype),T=Te(s.shape),O=Te(o.shape),A=T[0],V=I?T[1]:T[2],P=I?T[2]:1,F=I?1:T[1],E=k.strides[0],W=I?k.strides[1]:k.strides[2],j=I?k.strides[2]:1,Y=I?1:k.strides[1],Q=t.data.get(s.dataId).values,Z=t.data.get(o.dataId).values,ne=k.values;for(let U=0;U<m.batchSize;++U){const K=U*A,X=U*E;for(let L=0;L<m.outHeight;++L){const H=X+L*W,se=L*m.strideHeight-$;for(let ae=0;ae<g;++ae){const ie=se+ae*v;if(ie<0||ie>=m.inHeight)continue;const ue=ae*O[0],he=K+ie*V;for(let me=0;me<m.outWidth;++me){const xe=H+me*j,Ee=me*m.strideWidth-b;for(let Ae=0;Ae<y;++Ae){const We=Ee+Ae*w;if(We<0||We>=m.inWidth)continue;const He=ue+Ae*O[1],rt=he+We*P;let Xe=He;for(let je=0;je<m.inChannels;++je){const et=Q[rt+je*F];for(let tt=0;tt<m.outChannels;++tt)ne[xe+tt*Y]+=et*Z[Xe+tt];Xe+=m.outChannels}}}}}}return t.makeTensorInfo(k.shape,k.dtype,ne)}const K4={kernelName:Qd,backendName:"cpu",kernelFunc:yN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:l,dataFormat:u,dimRoundingMode:d,filterShape:p}=r;$e([s,o],"conv2dBackpropFilter");const f=us(u),m=Pt(s.shape,p,a,1,l,d,!1,f),{strideHeight:g,strideWidth:y,filterHeight:v,filterWidth:w}=m,b=m.dataFormat==="channelsLast",$=new kt(m.filterShape,"float32"),I=m.padInfo.left,k=m.padInfo.top,T=t.data.get(s.dataId).values,O=t.data.get(o.dataId).values,A=new kt(s.shape,s.dtype,T),V=new kt(o.shape,o.dtype,O);for(let P=0;P<v;++P){const F=Math.max(0,Math.ceil((k-P)/g)),E=Math.min(m.outHeight,(m.inHeight+k-P)/g);for(let W=0;W<w;++W){const j=Math.max(0,Math.ceil((I-W)/y)),Y=Math.min(m.outWidth,(m.inWidth+I-W)/y);for(let Q=0;Q<m.inChannels;++Q)for(let Z=0;Z<m.outChannels;++Z){let ne=0;for(let U=0;U<m.batchSize;++U)for(let K=F;K<E;++K){const X=P+K*g-k;for(let L=j;L<Y;++L){const H=W+L*y-I;b?ne+=A.get(U,X,H,Q)*V.get(U,K,L,Z):ne+=A.get(U,Q,X,H)*V.get(U,Z,K,L)}}$.set(ne,P,W,Q,Z)}}}return t.makeTensorInfo($.shape,$.dtype,$.values)}const Y4={kernelName:Zd,backendName:"cpu",kernelFunc:X4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q4(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{inputShape:a,strides:l,pad:u,dataFormat:d,dimRoundingMode:p}=r;$e([s,o],"conv2dBackpropInput");const f=Te(o.shape),m=Te(s.shape);let g=us(d);const y=Pt(a,o.shape,l,1,u,p,!1,g),v=new kt(y.inShape,"float32"),w=v.values,b=t.data.get(s.dataId).values,$=t.data.get(o.dataId).values,[I,k,T]=f,{batchSize:O,filterHeight:A,filterWidth:V,inChannels:P,inHeight:F,inWidth:E,outChannels:W,outHeight:j,outWidth:Y,strideHeight:Q,strideWidth:Z}=y;g=y.dataFormat;const ne=A-1-y.padInfo.top,U=V-1-y.padInfo.left,K=g==="channelsLast",X=v.strides[0],L=K?v.strides[1]:v.strides[2],H=K?v.strides[2]:1,se=K?1:v.strides[1],ae=m[0],ie=K?m[1]:m[2],ue=K?m[2]:1,he=K?1:m[1];for(let me=0;me<O;++me)for(let xe=0;xe<P;++xe)for(let Ee=0;Ee<F;++Ee){const Ae=Ee-ne,We=Math.max(0,Math.ceil(Ae/Q)),He=Math.min(j,(A+Ae)/Q);for(let rt=0;rt<E;++rt){const Xe=rt-U,je=Math.max(0,Math.ceil(Xe/Z)),et=Math.min(Y,(V+Xe)/Z);let tt=0;for(let pt=We;pt<He;++pt){const pn=pt*Q-Ae;for(let Kt=je;Kt<et;++Kt){const Sr=Kt*Z-Xe,xn=ae*me+ie*pt+ue*Kt,Gn=I*(A-1-pn)+k*(V-1-Sr)+T*xe;for(let or=0;or<W;++or){const Hn=b[xn+he*or],Fn=$[Gn+or];tt+=Hn*Fn}}}const An=X*me+L*Ee+H*rt+se*xe;w[An]=tt}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const Z4={kernelName:Jd,backendName:"cpu",kernelFunc:Q4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J4(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:l,dilations:u}=r;$e([s,o],"conv3d");const d=Ks(s.shape,o.shape,a,u,l),{filterDepth:p,filterHeight:f,filterWidth:m,dilationDepth:g,dilationHeight:y,dilationWidth:v,padInfo:w}=d,b=w.front,$=w.left,I=w.top,k=new kt(d.outShape,s.dtype),T=t.data.get(s.dataId).values,O=t.data.get(o.dataId).values,A=k.values,V=Te(s.shape),P=Te(o.shape);for(let F=0;F<d.batchSize;++F){const E=F*V[0],W=F*k.strides[0];for(let j=0;j<d.outDepth;++j){const Y=W+j*k.strides[1],Q=j*d.strideDepth-b;for(let Z=0;Z<p;++Z){const ne=Q+Z*g;if(ne<0||ne>=d.inDepth)continue;const U=Z*P[0],K=E+ne*V[1];for(let X=0;X<d.outHeight;++X){const L=Y+X*k.strides[2],H=X*d.strideHeight-I;for(let se=0;se<f;++se){const ae=H+se*y;if(ae<0||ae>=d.inHeight)continue;const ie=U+se*P[1],ue=K+ae*V[2];for(let he=0;he<d.outWidth;++he){const me=L+he*d.outChannels,xe=he*d.strideWidth-$;for(let Ee=0;Ee<m;++Ee){const Ae=xe+Ee*v;if(Ae<0||Ae>=d.inWidth)continue;const We=ie+Ee*P[2],He=ue+Ae*d.inChannels;let rt=We;for(let Xe=0;Xe<d.inChannels;++Xe){const je=T[He+Xe];for(let et=0;et<d.outChannels;++et)A[me+et]+=je*O[rt+et];rt+=d.outChannels}}}}}}}}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const eV={kernelName:ep,backendName:"cpu",kernelFunc:J4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:l,filterShape:u}=r;$e([s,o],"conv3dBackpropFilterV2");const d=Te(s.shape),p=Te(o.shape),f=Ks(s.shape,u,a,1,l),m=f.strideDepth,g=f.strideHeight,y=f.strideWidth,v=f.filterDepth,w=f.filterHeight,b=f.filterWidth,$=new kt(f.filterShape,"float32"),I=$.values,[k,T,O,A]=$.strides,V=t.data.get(o.dataId).values,[P,F,E,W]=p,j=t.data.get(s.dataId).values,[Y,Q,Z,ne]=d,U=f.padInfo.front,K=f.padInfo.left,X=f.padInfo.top;for(let L=0;L<v;++L){const H=Math.max(0,Math.ceil((U-L)/m)),se=Math.min(f.outDepth,(f.inDepth+U-L)/m),ae=L*k;for(let ie=0;ie<w;++ie){const ue=Math.max(0,Math.ceil((X-ie)/g)),he=Math.min(f.outHeight,(f.inHeight+X-ie)/g),me=ie*T+ae;for(let xe=0;xe<b;++xe){const Ee=Math.max(0,Math.ceil((K-xe)/y)),Ae=Math.min(f.outWidth,(f.inWidth+K-xe)/y),We=xe*O+me;for(let He=0;He<f.inChannels;++He){const rt=He*A+We;for(let Xe=0;Xe<f.outChannels;++Xe){let je=0;for(let et=0;et<f.batchSize;++et){const tt=et*Y,An=et*P;for(let pt=H;pt<se;++pt){const Kt=(L+pt*m-U)*Q+tt,Sr=pt*F+An;for(let xn=ue;xn<he;++xn){const or=(ie+xn*g-X)*Z+Kt,Hn=xn*E+Sr;for(let Fn=Ee;Fn<Ae;++Fn){const Br=(xe+Fn*y-K)*ne+or,Mr=Fn*W+Hn;je+=j[Br+He]*V[Mr+Xe]}}}}I[rt+Xe]=je}}}}}return t.makeTensorInfo($.shape,$.dtype,$.values)}const nV={kernelName:oy,backendName:"cpu",kernelFunc:tV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{pad:a,strides:l,inputShape:u}=r;$e([s],"conv3dBackpropInputV2");const d=Te(s.shape),p=Te(o.shape),f=Ks(u,o.shape,l,1,a),m=new kt(f.inShape,"float32"),g=m.values,[y,v,w,b]=m.strides,$=t.data.get(s.dataId).values,[I,k,T,O]=d,A=t.data.get(o.dataId).values,[V,P,F,E]=p,{batchSize:W,filterDepth:j,filterHeight:Y,filterWidth:Q,inChannels:Z,inDepth:ne,inHeight:U,inWidth:K,outChannels:X,outDepth:L,outHeight:H,outWidth:se,strideDepth:ae,strideHeight:ie,strideWidth:ue}=f,he=j-1-f.padInfo.front,me=Y-1-f.padInfo.top,xe=Q-1-f.padInfo.left;for(let Ee=0;Ee<W;++Ee)for(let Ae=0;Ae<Z;++Ae)for(let We=0;We<ne;++We){const He=We-he,rt=Math.max(0,Math.ceil(He/ae)),Xe=Math.min(L,(j+He)/ae);for(let je=0;je<U;++je){const et=je-me,tt=Math.max(0,Math.ceil(et/ie)),An=Math.min(H,(Y+et)/ie);for(let pt=0;pt<K;++pt){const pn=pt-xe,Kt=Math.max(0,Math.ceil(pn/ue)),Sr=Math.min(se,(Q+pn)/ue);let xn=0;for(let Gn=rt;Gn<Xe;++Gn){const or=Gn*ae-He;for(let Hn=tt;Hn<An;++Hn){const Fn=Hn*ie-et;for(let ps=Kt;ps<Sr;++ps){const Br=ps*ue-pn,Mr=I*Ee+k*Gn+T*Hn+O*ps,nh=V*(j-1-or)+P*(Y-1-Fn)+F*(Q-1-Br)+E*Ae;for(let eo=0;eo<X;++eo){const _u=$[Mr+eo],rh=A[nh+eo];xn+=_u*rh}}}}g[y*Ee+v*We+w*je+b*pt+Ae]=xn}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const sV={kernelName:tp,backendName:"cpu",kernelFunc:rV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oV=Ye(xl,n=>Math.cos(n)),aV={kernelName:xl,backendName:"cpu",kernelFunc:oV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iV=Ye(vl,n=>Math.cosh(n)),lV={kernelName:vl,backendName:"cpu",kernelFunc:iV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:o,boxInd:a}=e,{cropSize:l,method:u,extrapolationValue:d}=r,[p,f,m,g]=s.shape,y=o.shape[0],[v,w]=l,b=Fe([y,v,w,g],"float32"),$=t.data.get(o.dataId).values,I=t.data.get(a.dataId).values,k=t.data.get(s.dataId).values,T=Te(s.shape),O=Te(b.shape);for(let A=0;A<y;A++){const V=A*4,P=$[V],F=$[V+1],E=$[V+2],W=$[V+3],j=I[A];if(j>=p)continue;const Y=v>1?(E-P)*(f-1)/(v-1):0,Q=w>1?(W-F)*(m-1)/(w-1):0;for(let Z=0;Z<v;Z++){const ne=v>1?P*(f-1)+Z*Y:.5*(P+E)*(f-1);if(ne<0||ne>f-1){for(let U=0;U<w;U++)for(let K=0;K<g;K++){const X=K+U*O[2]+Z*O[1]+A*O[0];b.values[X]=d}continue}if(u==="bilinear"){const U=Math.floor(ne),K=Math.ceil(ne),X=ne-U;for(let L=0;L<w;L++){const H=w>1?F*(m-1)+L*Q:.5*(F+W)*(m-1);if(H<0||H>m-1){for(let ue=0;ue<g;ue++){const he=ue+L*O[2]+Z*O[1]+A*O[0];b.values[he]=d}continue}const se=Math.floor(H),ae=Math.ceil(H),ie=H-se;for(let ue=0;ue<g;ue++){let he=ue+se*T[2]+U*T[1]+j*T[0];const me=k[he];he=ue+ae*T[2]+U*T[1]+j*T[0];const xe=k[he];he=ue+se*T[2]+K*T[1]+j*T[0];const Ee=k[he];he=ue+ae*T[2]+K*T[1]+j*T[0];const Ae=k[he],We=me+(xe-me)*ie,He=Ee+(Ae-Ee)*ie;he=ue+L*O[2]+Z*O[1]+A*O[0],b.values[he]=We+(He-We)*X}}}else for(let U=0;U<w;++U){const K=w>1?F*(m-1)+U*Q:.5*(F+W)*(m-1);if(K<0||K>m-1){for(let H=0;H<g;H++){const se=H+U*O[2]+Z*O[1]+A*O[0];b.values[se]=d}continue}const X=Math.round(K),L=Math.round(ne);for(let H=0;H<g;H++){const se=H+X*T[2]+L*T[1]+j*T[0],ae=H+U*O[2]+Z*O[1]+A*O[0];b.values[ae]=k[se]}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const cV={kernelName:sp,backendName:"cpu",kernelFunc:uV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:l}=r;$e(s,"cumprod");const u=bt([o],s.shape.length);let d=s;u!=null&&(d=yn({inputs:{x:s},backend:t,attrs:{perm:u}}));const p=St(1,s.shape.length)[0];if(p!==d.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${p}`);const f=mn(d.dtype,"int32"),m=Fd(oe(d.shape),f),g=t.data.get(d.dataId).values,y=d.shape[d.shape.length-1],v=l?(b,$)=>b+y-$-1:(b,$)=>b+$;for(let b=0;b<g.length;b+=y)for(let $=0;$<y;$++){const I=v(b,$);if($===0)m[I]=a?1:g[I];else{const k=v(b,$-1);m[I]=a?g[k]*m[k]:g[I]*m[k]}}const w=t.makeTensorInfo(d.shape,f,m);if(u!=null){const b=yu(u),$=yn({inputs:{x:w},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(d),$}return w}const pV={kernelName:np,backendName:"cpu",kernelFunc:dV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:l}=r;$e(s,"cumsum");const u=bt([o],s.shape.length);let d=s;u!=null&&(d=yn({inputs:{x:s},backend:t,attrs:{perm:u}}));const p=St(1,s.shape.length)[0];if(p!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${p}`);const f=mn(d.dtype,"int32"),m=Wt(oe(d.shape),f),g=t.data.get(d.dataId).values,y=d.shape[d.shape.length-1],v=l?(b,$)=>b+y-$-1:(b,$)=>b+$;for(let b=0;b<g.length;b+=y)for(let $=0;$<y;$++){const I=v(b,$);if($===0)m[I]=a?0:g[I];else{const k=v(b,$-1);m[I]=a?g[k]+m[k]:g[I]+m[k]}}const w=t.makeTensorInfo(d.shape,f,m);if(u!=null){const b=yu(u),$=yn({inputs:{x:w},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(d),$}return w}const hV={kernelName:rp,backendName:"cpu",kernelFunc:fV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a,binaryOutput:l}=r;if(s.shape.length===1){const u=t.data.get(s.dataId).values,d=t.data.get(o.dataId).values,p=Gx(u,d,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,p)}else if(s.shape.length===2){const u=t.bufferSync(s),d=t.bufferSync(o),p=xC(u,d,a,l);return t.makeTensorInfo(p.shape,o.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const gV={kernelName:op,backendName:"cpu",kernelFunc:mV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:o,dataFormat:a}=r;D(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const l=s.shape[0],u=s.shape[1],d=s.shape[2],p=s.shape[3],f=u*o,m=d*o,g=p/(o*o),y=t.data.get(s.dataId).values,v=new Float32Array(l*f*m*g);let w=0;for(let b=0;b<l;++b)for(let $=0;$<f;++$){const I=Math.floor($/o),k=$%o;for(let T=0;T<m;++T){const O=Math.floor(T/o),A=T%o,V=(k*o+A)*g;for(let P=0;P<g;++P){const E=P+V+p*(O+d*(I+u*b));v[w++]=y[E]}}}return t.makeTensorInfo([l,f,m,g],s.dtype,v)}const xV={kernelName:ap,backendName:"cpu",kernelFunc:yV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xN(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:l,dilations:u,dimRoundingMode:d}=r;$e([s,o],"depthwiseConv2DNative");const p=Te(s.shape),f=Te(o.shape);let m=u;m==null&&(m=[1,1]),D(Zt(a,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${m}'`);const g=Pt(s.shape,o.shape,a,m,l,d,!0),{filterHeight:y,filterWidth:v,dilationHeight:w,dilationWidth:b,padInfo:$}=g,I=$.left,k=$.top,T=g.outChannels/g.inChannels,O=new kt(g.outShape,s.dtype),A=t.data.get(s.dataId).values,V=t.data.get(o.dataId).values,P=O.values;for(let F=0;F<g.batchSize;++F){const E=F*p[0],W=F*O.strides[0];for(let j=0;j<g.outHeight;++j){const Y=W+j*O.strides[1],Q=j*g.strideHeight-k;for(let Z=0;Z<y;++Z){const ne=Q+Z*w;if(ne<0||ne>=g.inHeight)continue;const U=Z*f[0],K=E+ne*p[1];for(let X=0;X<g.outWidth;++X){const L=Y+X*O.strides[2],H=X*g.strideWidth-I;for(let se=0;se<v;++se){const ae=H+se*b;if(ae<0||ae>=g.inWidth)continue;const ie=U+se*f[1],ue=K+ae*g.inChannels;let he=L,me=ie;for(let xe=0;xe<g.inChannels;++xe){const Ee=A[ue+xe];for(let Ae=0;Ae<T;++Ae)P[he+Ae]+=Ee*V[me+Ae];he+=T,me+=T}}}}}}return t.makeTensorInfo(O.shape,O.dtype,O.values)}const vV={kernelName:ip,backendName:"cpu",kernelFunc:xN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,dilations:l,pad:u,dimRoundingMode:d,filterShape:p}=r;$e([s,o],"depthwiseConv2dNativeBackpropFilter");const f=Pt(s.shape,p,a,l,u,d,!0),{strideHeight:m,strideWidth:g,filterHeight:y,filterWidth:v}=f,w=new kt(f.filterShape,"float32"),b=f.padInfo.left,$=f.padInfo.top,I=f.outChannels/f.inChannels,k=t.data.get(s.dataId).values,T=new kt(s.shape,s.dtype,k),O=t.data.get(o.dataId).values,A=new kt(o.shape,o.dtype,O);for(let V=0;V<y;++V){const P=Math.max(0,Math.ceil(($-V)/m)),F=Math.min(f.outHeight,(f.inHeight+$-V)/m);for(let E=0;E<v;++E){const W=Math.max(0,Math.ceil((b-E)/g)),j=Math.min(f.outWidth,(f.inWidth+b-E)/g);for(let Y=0;Y<f.outChannels;++Y){const Q=Math.trunc(Y/I),Z=Y%I;let ne=0;for(let U=0;U<f.batchSize;++U)for(let K=P;K<F;++K){const X=V+K*m-$;for(let L=W;L<j;++L){const H=E+L*g-b;ne+=T.get(U,X,H,Q)*A.get(U,K,L,Y)}}w.set(ne,V,E,Q,Z)}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const bV={kernelName:lp,backendName:"cpu",kernelFunc:wV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{strides:a,dilations:l,pad:u,dimRoundingMode:d,inputShape:p}=r;$e([s,o],"depthwiseConv2DNativeBackpropInput");const f=Te(s.shape),m=Te(o.shape),g=Pt(p,o.shape,a,l,u,d,!0),y=new kt(g.inShape,"float32"),v=y.values,[w,b,$]=y.strides,I=t.data.get(s.dataId).values,[k,T,O]=f,A=t.data.get(o.dataId).values,[V,P,F]=m,{batchSize:E,filterHeight:W,filterWidth:j,inChannels:Y,inHeight:Q,inWidth:Z,outChannels:ne,outHeight:U,outWidth:K,strideHeight:X,strideWidth:L}=g,H=W-1-g.padInfo.top,se=j-1-g.padInfo.left,ae=ne/Y;for(let ie=0;ie<E;++ie)for(let ue=0;ue<Y;++ue)for(let he=0;he<Q;++he){const me=he-H,xe=Math.max(0,Math.ceil(me/X)),Ee=Math.min(U,(W+me)/X);for(let Ae=0;Ae<Z;++Ae){const We=Ae-se,He=Math.max(0,Math.ceil(We/L)),rt=Math.min(K,(j+We)/L);let Xe=0;for(let je=xe;je<Ee;++je){const et=je*X-me;for(let tt=He;tt<rt;++tt){const An=tt*L-We,pt=k*ie+T*je+O*tt,pn=V*(W-1-et)+P*(j-1-An)+F*ue;for(let Kt=0;Kt<ae;++Kt){const Sr=ue*ae+Kt,xn=I[pt+Sr],Gn=A[pn+Kt];Xe+=xn*Gn}}}v[w*ie+b*he+$*Ae+ue]=Xe}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const $V={kernelName:up,backendName:"cpu",kernelFunc:SV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(n){const{inputs:e,backend:t}=n,{x:r}=e,s=oe(r.shape),o=t.data.get(r.dataId).values,a=Fe([s,s],r.dtype),l=a.values;for(let d=0;d<o.length;d++)l[d*s+d]=o[d];const u=[...r.shape,...r.shape];return t.makeTensorInfo(u,a.dtype,a.values)}const NV={kernelName:cp,backendName:"cpu",kernelFunc:CV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kV={kernelName:dp,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s}=n,{strides:o,pad:a,dilations:l}=t,u=e,d=u.data.get(r.dataId).values,p=r.shape.length,f=u.data.get(s.dataId).values,m=s.shape.length,{batchSize:g,inHeight:y,inWidth:v,inChannels:w,outHeight:b,outWidth:$,padInfo:I,strideHeight:k,strideWidth:T,filterHeight:O,filterWidth:A,dilationHeight:V,dilationWidth:P,outShape:F}=hu(r.shape,s.shape,o,a,"NHWC",l),E=oe(F),W=F.length,j=vt(r.dtype,E);for(let Q=0;Q<g;++Q)for(let Z=0;Z<b;++Z){const ne=Z*k-I.top;for(let U=0;U<$;++U){const K=U*T-I.left;for(let X=0;X<w;++X){let L=Number.MIN_SAFE_INTEGER;for(let se=0;se<O;++se){const ae=ne+se*V;if(ae>=0&&ae<y)for(let ie=0;ie<A;++ie){const ue=K+ie*P;if(ue>=0&&ue<v){const he=yr([Q,ae,ue,X],p,Te(r.shape)),me=yr([se,ie,X],m,Te(s.shape)),xe=d[he]+f[me];xe>L&&(L=xe)}}}const H=yr([Q,Z,U,X],W,Te(F));j[H]=L}}}return{dataId:u.write(js(j,r.dtype),F,r.dtype),shape:F,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IV={kernelName:hg,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s,dy:o}=n,{strides:a,pad:l,dilations:u}=t,d=e,p=Un(r.shape,d.data.get(r.dataId).values),f=Un(s.shape,d.data.get(s.dataId).values),{batchSize:m,inHeight:g,inWidth:y,inChannels:v,outHeight:w,outWidth:b,padInfo:$,strideHeight:I,strideWidth:k,filterHeight:T,filterWidth:O,dilationHeight:A,dilationWidth:V,outShape:P}=hu(r.shape,s.shape,a,l,"NHWC",u);D(o.rank===P.length,()=>`Error in ${hg}, dy must have the same rank as output ${P.length}, but got ${o.rank}`);const F=Un(P,d.data.get(o.dataId).values),E=ey(s.shape,s.dtype);for(let j=0;j<m;++j)for(let Y=0;Y<w;++Y){const Q=Y*I-$.top;for(let Z=0;Z<b;++Z){const ne=Z*k-$.left;for(let U=0;U<v;++U){let K=Number.MIN_SAFE_INTEGER,X=0,L=0;for(let H=0;H<T;++H){const se=Q+H*A;if(se>=0&&se<g)for(let ae=0;ae<O;++ae){const ie=ne+ae*V;if(ie>=0&&ie<y){const ue=p[j][se][ie][U]+f[H][ae][U];ue>K&&(K=ue,X=H,L=ae)}}}E[X][L][U]+=F[j][Y][Z][U]}}}return{dataId:d.write(js(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TV={kernelName:fg,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s,dy:o}=n,{strides:a,pad:l,dilations:u}=t,d=e,p=Un(r.shape,d.data.get(r.dataId).values),f=Un(s.shape,d.data.get(s.dataId).values),{batchSize:m,inHeight:g,inWidth:y,inChannels:v,outHeight:w,outWidth:b,padInfo:$,strideHeight:I,strideWidth:k,filterHeight:T,filterWidth:O,dilationHeight:A,dilationWidth:V,outShape:P}=hu(r.shape,s.shape,a,l,"NHWC",u);D(o.rank===P.length,()=>`Error in ${fg}, dy must have the same rank as output ${P.length}, but got ${o.rank}`);const F=Un(P,d.data.get(o.dataId).values),E=ey(r.shape,r.dtype);for(let j=0;j<m;++j)for(let Y=0;Y<w;++Y){const Q=Y*I-$.top;for(let Z=0;Z<b;++Z){const ne=Z*k-$.left;for(let U=0;U<v;++U){let K=Number.MIN_SAFE_INTEGER,X=Q<0?0:Q,L=ne<0?0:ne;for(let H=0;H<T;++H){const se=Q+H*A;if(se>=0&&se<g)for(let ae=0;ae<O;++ae){const ie=ne+ae*V;if(ie>=0&&ie<y){const ue=p[j][se][ie][U]+f[H][ae][U];ue>K&&(K=ue,X=se,L=ie)}}}E[j][X][L][U]+=F[j][Y][Z][U]}}}return{dataId:d.write(js(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(n){const{inputs:e,backend:t,attrs:r}=n,{image:s}=e,{canvas:o,options:a}=r,{contextOptions:l,imageOptions:u}=a||{},d=(u==null?void 0:u.alpha)||1,p=(l==null?void 0:l.contextType)||"2d";if(p!=="2d")throw new Error(`Context type ${l.contextType} is not supported by the CPU backend.`);const f=o.getContext(p,(l==null?void 0:l.contextAttributes)||{});if(f==null)throw new Error(`Could not get the context with ${p} type.`);const[m,g]=s.shape.slice(0,2),y=s.shape.length===2?1:s.shape[2],v=t.data.get(s.dataId).values,w=s.dtype==="float32"?255:1,b=new Uint8ClampedArray(g*m*4);for(let I=0;I<m*g;++I){const k=[0,0,0,255*d];for(let O=0;O<y;O++){const A=v[I*y+O];if(s.dtype==="float32"){if(A<0||A>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${A}.`)}else if(s.dtype==="int32"&&(A<0||A>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${A}.`);y===1?(k[0]=A*w,k[1]=A*w,k[2]=A*w):k[O]=A*w}const T=I*4;b[T+0]=Math.round(k[0]),b[T+1]=Math.round(k[1]),b[T+2]=Math.round(k[2]),b[T+3]=Math.round(k[3])}o.width=g,o.height=m;const $=new ImageData(b,g,m);return f.putImageData($,0,0),s}const RV={kernelName:pp,backendName:"cpu",kernelFunc:EV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nu(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;$e(s,"sum");let l;s.dtype==="bool"?l=Hs({inputs:{x:s},backend:t,attrs:{dtype:"int32"}}):l=Lr({inputs:{x:s},backend:t});const u=l.shape.length,d=ze(o,l.shape),p=bt(d,u);let f=d,m=l;p!=null&&(m=yn({inputs:{x:l},backend:t,attrs:{perm:p}}),f=St(f.length,u)),Ht("sum",f,m.shape.length);const[g,y]=Gt(m.shape,f),v=mn(m.dtype,"int32");let w=bd(t,g,v);const b=oe(y),$=t.data.get(w.dataId).values,I=t.data.get(m.dataId).values;for(let k=0;k<$.length;++k){const T=k*b;let O=0;for(let A=0;A<b;++A)O+=I[T+A];$[k]=O}if(a){const k=Et(w.shape,d),T=w;w=lt({inputs:{x:w},backend:t,attrs:{shape:k}}),t.disposeIntermediateTensorInfo(T)}return t.disposeIntermediateTensorInfo(l),p!=null&&t.disposeIntermediateTensorInfo(m),w}const _V={kernelName:sf,backendName:"cpu",kernelFunc:Nu};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,o=e,{allDims:a,summedDims:l,idDims:u}=Px(s,o.length);Vx(a.length,u,o);const{path:d,steps:p}=Bx(l,u),f=p.length;let m=null,g=a.length;const y=[];for(let v=0;v<f;++v){for(const w of p[v]){const{permutationIndices:b,expandDims:$}=Lx(g,u[w]);let I;Mx(b)?I=o[w]:(I=yn({inputs:{x:o[w]},backend:t,attrs:{perm:b}}),y.push(I));const k=I.shape.slice();for(let T=0;T<$.length;++T)k.splice($[T],0,1);Ze(I.shape,k)||(I=lt({inputs:{x:I},backend:t,attrs:{shape:k}}),y.push(I)),m===null?m=I:(m=Yf({inputs:{a:I,b:m},backend:t}),y.push(m))}v<f-1&&(d[v]>=0&&(m=Nu({inputs:{x:m},backend:t,attrs:{axis:d[v]-(a.length-g),keepDims:!1}}),y.push(m)),g--)}for(const v of y)v!==m&&t.disposeIntermediateTensorInfo(v);return m}const DV={kernelName:fp,backendName:"cpu",kernelFunc:OV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(n){const{inputs:e,backend:t}=n,{dy:r,y:s}=e;$e([r,s],"eluGrad");const o=new Float32Array(oe(s.shape)),a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values;for(let u=0;u<a.length;++u){const d=a[u];d>=0?o[u]=l[u]:o[u]=l[u]*(d+1)}return t.makeTensorInfo(s.shape,"float32",o)}const FV={kernelName:ay,backendName:"cpu",kernelFunc:AV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PV=Ex,LV=Rx,VV=_x,BV=Ox,MV=Dx,zV=Ax,WV=Ye(Sl,n=>{const e=Math.sign(n),t=Math.abs(n),r=1/(1+PV*t);return e*(1-((((zV*r+MV)*r+BV)*r+VV)*r+LV)*r*Math.exp(-t*t))}),UV={kernelName:Sl,backendName:"cpu",kernelFunc:WV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cd(n){const{inputs:e,backend:t,attrs:r}=n,{input:s}=e,{dim:o}=r,a=s.shape.length,l=s.shape.slice();let u=o;return o<0&&(D(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),l.splice(u,0,1),lt({inputs:{x:s},backend:t,attrs:{shape:l}})}const GV={kernelName:hp,backendName:"cpu",kernelFunc:Cd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HV=$t((n,e)=>n/e),Yx=Rt(wl,HV),Og={kernelName:wl,backendName:"cpu",kernelFunc:Yx};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n,e,t){const r=n.shape,s=r[0],o=r[1],a=t.data.get(n.dataId),l=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,d=[s,o],p=oe(d),f=Ft("float32",p),m=Ft("float32",p);for(let w=0;w<s;w++){const b=Po({inputs:{x:l},backend:t,attrs:{begin:[w,0],size:[1,o]}}),$=Po({inputs:{x:u},backend:t,attrs:{begin:[w,0],size:[1,o]}}),I=Rn({inputs:{real:b,imag:$},backend:t}),{real:k,imag:T}=jV(I,e,t),O=ss(k,T);for(let A=0;A<o;A++){const V=Fx(O,A);f[w*o+A]=V.real,m[w*o+A]=V.imag}t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo($),t.disposeIntermediateTensorInfo(I)}const g=t.makeTensorInfo(d,"float32",f),y=t.makeTensorInfo(d,"float32",m),v=Rn({inputs:{real:g,imag:y},backend:t});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),v}function jV(n,e,t){const r=oe(n.shape),s=t.data.get(n.dataId),o=t.data.get(s.complexTensorInfos.real.dataId).values,a=t.data.get(s.complexTensorInfos.imag.dataId).values;if(qV(r)){const l=Dg(o,a,r,e,t),u=[n.shape[0],n.shape[1]];if(e){const d=t.makeTensorInfo(u,"float32",l.real),p=t.makeTensorInfo(u,"float32",l.imag),f=t.makeTensorInfo([],"float32",is(r,"float32")),m=Lr({inputs:{x:f},backend:t}),g=Og.kernelFunc({inputs:{a:d,b:f},backend:t}),y=Og.kernelFunc({inputs:{a:p,b:m},backend:t}),v=t.data.get(g.dataId).values,w=t.data.get(y.dataId).values;return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),{real:v,imag:w}}return l}else{const l=ss(o,a),u=KV(l,r,e);return K2(u)}}function qV(n){return(n&n-1)===0}function Dg(n,e,t,r,s){if(t===1)return{real:n,imag:e};const o=ss(n,e),a=t/2,l=X2(o),u=l.real,d=l.imag,p=[u.length],f=s.makeTensorInfo(p,"float32",u),m=s.makeTensorInfo(p,"float32",d),g=Rn({inputs:{real:f,imag:m},backend:s}),y=Y2(o),v=y.real,w=y.imag,b=[v.length],$=s.makeTensorInfo(b,"float32",v),I=s.makeTensorInfo(b,"float32",w),k=Rn({inputs:{real:$,imag:I},backend:s}),T=Dg(u,d,a,r,s),O=T.real,A=T.imag,V=[O.length],P=s.makeTensorInfo(V,"float32",O),F=s.makeTensorInfo(V,"float32",A),E=Rn({inputs:{real:P,imag:F},backend:s}),W=Dg(v,w,a,r,s),j=W.real,Y=W.imag,Q=[j.length],Z=s.makeTensorInfo(Q,"float32",j),ne=s.makeTensorInfo(Q,"float32",Y),U=Rn({inputs:{real:Z,imag:ne},backend:s}),K=Z2(t,r),X=[K.real.length],L=s.makeTensorInfo(X,"float32",K.real),H=s.makeTensorInfo(X,"float32",K.imag),se=Rn({inputs:{real:L,imag:H},backend:s}),ae=Yf({inputs:{a:se,b:U},backend:s}),ie=Da({inputs:{a:E,b:ae},backend:s}),ue=Kx({inputs:{a:E,b:ae},backend:s}),he=Fo({inputs:{input:ie},backend:s}),me=Fo({inputs:{input:ue},backend:s}),xe=Aa({inputs:{input:ie},backend:s}),Ee=Aa({inputs:{input:ue},backend:s}),Ae=Fa({inputs:[he,me],backend:s,attrs:{axis:0}}),We=Fa({inputs:[xe,Ee],backend:s,attrs:{axis:0}}),He=s.data.get(Ae.dataId).values,rt=s.data.get(We.dataId).values;return s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(Z),s.disposeIntermediateTensorInfo(ne),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(se),s.disposeIntermediateTensorInfo(ae),s.disposeIntermediateTensorInfo(ie),s.disposeIntermediateTensorInfo(ue),s.disposeIntermediateTensorInfo(he),s.disposeIntermediateTensorInfo(xe),s.disposeIntermediateTensorInfo(me),s.disposeIntermediateTensorInfo(Ee),s.disposeIntermediateTensorInfo(Ae),s.disposeIntermediateTensorInfo(We),{real:He,imag:rt}}function KV(n,e,t){const r=new Float32Array(e*2);for(let s=0;s<e;s++){let o=0,a=0;for(let l=0;l<e;l++){const u=J2(s*l,e,t),d=Fx(n,l);o+=d.real*u.real-d.imag*u.imag,a+=d.real*u.imag+d.imag*u.real}t&&(o/=e,a/=e),Q2(r,o,a,s)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const{inputs:e,backend:t}=n,{input:r}=e,s=oe(r.shape),o=r.shape[r.shape.length-1],a=s/o,l=lt({inputs:{x:r},backend:t,attrs:{shape:[a,o]}}),u=vN(l,!1,t),d=lt({inputs:{x:u},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(u),d}const YV={kernelName:mp,backendName:"cpu",kernelFunc:XV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qx(n){const{backend:e,attrs:t}=n,{shape:r,value:s,dtype:o}=t,a=o||zo(s),l=vt(a,oe(r));return ZV(l,s,a),e.makeTensorInfo(r,a,l)}const QV={kernelName:gp,backendName:"cpu",kernelFunc:Qx};function ZV(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JV={kernelName:yp,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,s=t,o=Ft(r.dtype,oe(r.shape)),[a,l,u,d]=r.shape,p=s.data.get(r.dataId).values;for(let m=0;m<a;m++){const g=m*u*l*d;for(let y=0;y<l;y++){const v=y*(u*d);for(let w=0;w<u;w++){const b=w*d;for(let $=0;$<d;$++){const I=Math.round(u-w-1),k=g+v+b+$;let T=p[k];if(I>=0&&I<u){const O=I*d,A=g+v+O+$;T=p[A]}o[k]=T}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:l}=e,{strides:u,pad:d,dataFormat:p,dilations:f,dimRoundingMode:m,activation:g,leakyreluAlpha:y}=r;let v=yN({inputs:{x:s,filter:o},backend:t,attrs:{strides:u,pad:d,dataFormat:p,dilations:f,dimRoundingMode:m}});if(a){const w=v;if(p==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const b=lt({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});v=Da({inputs:{a:v,b},backend:t}),t.disposeIntermediateTensorInfo(b)}else v=Da({inputs:{a:v,b:a},backend:t});t.disposeIntermediateTensorInfo(w)}if(g){const w=v;if(p==="NCHW"&&g==="prelu"&&l.shape.length===1&&l.shape[0]!==1){const b=lt({inputs:{x:l},backend:t,attrs:{shape:[l.shape[0],1,1]}});v=$d(t,v,g,b,y),t.disposeIntermediateTensorInfo(b)}else v=$d(t,v,g,l,y);t.disposeIntermediateTensorInfo(w)}return v}const tB={kernelName:Ui,backendName:"cpu",kernelFunc:eB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:l}=e,{strides:u,pad:d,dataFormat:p,dilations:f,dimRoundingMode:m,activation:g,leakyreluAlpha:y}=r;let v=xN({inputs:{x:s,filter:o},backend:t,attrs:{strides:u,pad:d,dataFormat:p,dilations:f,dimRoundingMode:m}});if(a){const w=v;v=Da({inputs:{a:v,b:a},backend:t}),t.disposeIntermediateTensorInfo(w)}if(g){const w=v;v=$d(t,v,g,l,y),t.disposeIntermediateTensorInfo(w)}return v}const rB={kernelName:Gi,backendName:"cpu",kernelFunc:nB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,o=oe(r.shape),a=s.shape,l=a[a.length-1],[u,d,p,f]=qf(r,s);if(d===0)return t.makeTensorInfo(u,r.dtype,[]);const m=t.data.get(s.dataId).values,g=t.bufferSync(r),y=EC(m,g,r.dtype,d,l,p,f,r.shape,o);return t.makeTensorInfo(u,r.dtype,y.values)}const oB={kernelName:wp,backendName:"cpu",kernelFunc:sB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:o}=e,{axis:a,batchDims:l}=r;$e([s,o],"gatherV2");const u=ze(a,s.shape)[0],d=t.data.get(o.dataId).values,p=s.shape[u];for(let k=0;k<d.length;++k){const T=d[k];D(T<=p-1&&T>=0,()=>`GatherV2: the index value ${T} is not in [0, ${p-1}]`)}let f=l;l==null&&(f=0);const m=oe(o.shape),g=Wx(s,o,u,f),y=lt({inputs:{x:s},backend:t,attrs:{shape:[g.batchSize,g.outerSize,g.dimSize,g.sliceSize]}}),v=lt({inputs:{x:o},backend:t,attrs:{shape:[g.batchSize,m/g.batchSize]}}),w=[g.batchSize,g.outerSize,m/g.batchSize,g.sliceSize],b=t.bufferSync(v),$=t.bufferSync(y),I=RC($,b,w);return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(v),t.makeTensorInfo(g.outputShape,I.dtype,I.values)}const iB={kernelName:vp,backendName:"cpu",kernelFunc:aB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n){const{inputs:e,backend:t}=n,{input:r}=e,s=oe(r.shape),o=r.shape[r.shape.length-1],a=s/o,l=lt({inputs:{x:r},backend:t,attrs:{shape:[a,o]}}),u=vN(l,!0,t),d=lt({inputs:{x:u},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(u),d}const uB={kernelName:bp,backendName:"cpu",kernelFunc:lB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cB=Ye(_l,n=>Number.isFinite(n)?1:0,"bool"),dB={kernelName:_l,backendName:"cpu",kernelFunc:cB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pB=Ye(Ol,n=>Math.abs(n)===1/0?1:0,"bool"),fB={kernelName:Ol,backendName:"cpu",kernelFunc:pB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hB=Ye(Dl,n=>Number.isNaN(n)?1:0,"bool"),mB={kernelName:Dl,backendName:"cpu",kernelFunc:hB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:o}=t,a=FC(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const yB={kernelName:Cp,backendName:"cpu",kernelFunc:gB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xB=Ye(Ll,n=>Math.log1p(n)),vB={kernelName:Ll,backendName:"cpu",kernelFunc:xB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wB=$t((n,e)=>n&&e),bB=Rt(Vl,wB,null,"bool"),SB={kernelName:Vl,backendName:"cpu",kernelFunc:bB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $B=Ye(Bl,n=>n?0:1,"bool"),CB={kernelName:Bl,backendName:"cpu",kernelFunc:$B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NB=$t((n,e)=>n||e),kB=Rt(Ml,NB,null,"bool"),IB={kernelName:Ml,backendName:"cpu",kernelFunc:kB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:o,bias:a,alpha:l,beta:u}=r;$e(s,"LRN");const d=s.shape[3],p=d-1,f=t.data.get(s.dataId).values,m=oe(s.shape),g=new Float32Array(m);function y(v){const w=v%d;let b=v-w+Math.max(0,w-o);const $=v-w+Math.min(w+o,p);let I=0;for(;b<=$;b++){const k=f[b];I+=k*k}return I}for(let v=0;v<m;v++){const w=y(v),b=f[v]*Math.pow(a+l*w,-u);g[v]=b}return t.makeTensorInfo(s.shape,s.dtype,g)}const EB={kernelName:Np,backendName:"cpu",kernelFunc:TB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,y:o,dy:a}=e,{depthRadius:l,bias:u,alpha:d,beta:p}=r;$e(a,"LRNGrad");const f=oe(a.shape),m=a.shape[3],g=t.data.get(a.dataId).values,y=t.data.get(s.dataId).values,v=t.data.get(o.dataId).values,w=new Float32Array(f),b=f;for(let $=0;$<b;$++){const I=$%m,k=$-I+Math.max(0,I-l),T=$-I+Math.min(m,I+l+1);let O=0;for(let A=k;A<T;A++)O+=Math.pow(y[A],2);O=d*O+u;for(let A=k;A<T;A++){let V=-2*d*p*y[A]*v[$]/O;$===A&&(V+=Math.pow(O,-p)),V*=g[$],w[A]+=V}}return t.makeTensorInfo(a.shape,s.dtype,w)}const _B={kernelName:iy,backendName:"cpu",kernelFunc:RB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:o,keepDims:a}=r,l=t;let u=s.shape;const d=u.length,p=ze(o,u);let f=p;const m=bt(f,d);let g=l.data.get(s.dataId).values;if(m!=null){const k=new Array(d);for(let T=0;T<k.length;T++)k[T]=u[m[T]];g=jx(g,u,s.dtype,m,k),f=St(f.length,d),u=k}$e(s,"max"),Ht("max",f,d);const[y,v]=Gt(u,f),w=oe(v),b=LC(g,w,y,s.dtype),$=l.write(b,y,s.dtype);let I=y;return a&&(I=Et(y,p)),{dataId:$,shape:I,dtype:s.dtype}}const OB={kernelName:kp,backendName:"cpu",kernelFunc:wN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;$e(s,"maxPool");const{filterSize:o,strides:a,pad:l,dimRoundingMode:u}=r,d=1;D(Zt(a,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=nr(s.shape,o,a,d,l,u);let f;if(p.filterWidth===1&&p.filterHeight===1&&Ze(p.inShape,p.outShape))f=Lr({inputs:{x:s},backend:t});else{const m=t.data.get(s.dataId).values,g=Te(s.shape),y=Xx(m,s.shape,s.dtype,g,p,"max");f=t.makeTensorInfo(p.outShape,s.dtype,y.values)}return f}const AB={kernelName:Ip,backendName:"cpu",kernelFunc:DB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:u,dataFormat:d}=r;$e(s,"maxPool3d");const p=ls(s.shape,o,a,1,l,u,d),f=t.data.get(s.dataId).values,m=gN(f,s.shape,s.dtype,Te(s.shape),p,"max");return t.makeTensorInfo(m.shape,"float32",m.values)}const PB={kernelName:Tp,backendName:"cpu",kernelFunc:FB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,{filterSize:a,strides:l,pad:u,dimRoundingMode:d}=r;$e([s,o],"maxPool3DGrad");const p=ls(o.shape,a,l,1,u,d),f=t.bufferSync(o),m=N4(f,p),g=p.strideDepth,y=p.strideHeight,v=p.strideWidth,w=p.dilationDepth,b=p.dilationHeight,$=p.dilationWidth,I=p.effectiveFilterDepth,k=p.effectiveFilterHeight,T=p.effectiveFilterWidth,O=I-1-p.padInfo.front,A=T-1-p.padInfo.left,V=k-1-p.padInfo.top,P=Fe(o.shape,"float32"),F=t.bufferSync(s);for(let E=0;E<p.batchSize;++E)for(let W=0;W<p.inChannels;++W)for(let j=0;j<p.inDepth;++j)for(let Y=0;Y<p.inHeight;++Y)for(let Q=0;Q<p.inWidth;++Q){const Z=j-O,ne=Y-V,U=Q-A;let K=0;for(let X=0;X<I;X+=w){const L=(Z+X)/g;if(!(L<0||L>=p.outDepth||Math.floor(L)!==L))for(let H=0;H<k;H+=b){const se=(ne+H)/y;if(!(se<0||se>=p.outHeight||Math.floor(se)!==se))for(let ae=0;ae<T;ae+=$){const ie=(U+ae)/v;if(ie<0||ie>=p.outWidth||Math.floor(ie)!==ie)continue;const ue=I*k*T-1-m.get(E,L,se,ie,W),he=X*k*T+H*T+ae,me=ue===he?1:0;if(me===0)continue;const xe=F.get(E,L,se,ie,W);K+=xe*me}}}P.set(K,E,j,Y,Q,W)}return t.makeTensorInfo(P.shape,P.dtype,P.values)}const VB={kernelName:uy,backendName:"cpu",kernelFunc:LB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o,output:a}=e,l=o;$e([o,a],"maxPoolGrad");const{filterSize:u,strides:d,pad:p,dimRoundingMode:f}=r,m=nr(l.shape,u,d,1,p,f),g=t.data.get(l.dataId).values,y=Fe(m.outShape,l.dtype,mN(g,l.shape,l.dtype,m).values),v=m.strideHeight,w=m.strideWidth,b=m.dilationHeight,$=m.dilationWidth,I=m.effectiveFilterHeight,k=m.effectiveFilterWidth,T=k-1-m.padInfo.left,O=I-1-m.padInfo.top,A=Fe(l.shape,"float32"),V=t.data.get(s.dataId).values,P=Fe(s.shape,"float32",V);for(let F=0;F<m.batchSize;++F)for(let E=0;E<m.inChannels;++E)for(let W=0;W<m.inHeight;++W)for(let j=0;j<m.inWidth;++j){const Y=W-O,Q=j-T;let Z=0;for(let ne=0;ne<I;ne+=b){const U=(Y+ne)/v;if(!(U<0||U>=m.outHeight||Math.floor(U)!==U))for(let K=0;K<k;K+=$){const X=(Q+K)/w;if(X<0||X>=m.outWidth||Math.floor(X)!==X)continue;const L=I*k-1-y.get(F,U,X,E),H=ne*k+K,se=L===H?1:0;if(se===0)continue;const ae=P.get(F,U,X,E);Z+=ae*se}}A.set(Z,F,W,j,E)}return t.makeTensorInfo(A.shape,A.dtype,A.values)}const MB={kernelName:ly,backendName:"cpu",kernelFunc:BB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n,e,t,r,s){const o=Te(e),a=Xx(n,e,t,o,s,"max"),l=mN(n,e,t,s,!0,r);return[a.values,l.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WB={kernelName:Ep,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:o,pad:a,includeBatchInIndex:l}=e,u=t;$e(r,"MaxPoolWithArgmax");const d=u.data.get(r.dataId).values,p=nr(r.shape,s,o,[1,1],a),[f,m]=zB(d,r.shape,r.dtype,l,p),g=u.write(f,p.outShape,r.dtype),y=u.write(m,p.outShape,r.dtype);return[{dataId:g,shape:p.outShape,dtype:r.dtype},{dataId:y,shape:p.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,l=ze(o,s.shape),d=Gt(s.shape,l)[1],p=oe(d),f=[],m=t.makeTensorInfo([],"float32",new Float32Array([p]));f.push(m);const g=Hs({inputs:{x:s},backend:t,attrs:{dtype:"float32"}});f.push(g);const y=Yx({inputs:{a:g,b:m},backend:t});f.push(y);const v=Nu({inputs:{x:y},backend:t,attrs:{axis:o,keepDims:a}});return f.forEach(w=>t.disposeIntermediateTensorInfo(w)),v}const GB={kernelName:Rp,backendName:"cpu",kernelFunc:UB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;$e(s,"min");const l=ze(o,s.shape);let u=l;const d=bt(u,s.shape.length);let p=s;d!=null&&(p=yn({inputs:{x:s},backend:t,attrs:{perm:d}}),u=St(u.length,s.shape.length)),Ht("min",u,p.shape.length);const[f,m]=Gt(p.shape,u),g=oe(m),y=Wt(oe(f),p.dtype),v=t.data.get(p.dataId).values;for(let b=0;b<y.length;++b){const $=b*g;let I=v[$];for(let k=0;k<g;++k){const T=v[$+k];(Number.isNaN(T)||T<I)&&(I=T)}y[b]=I}d!=null&&t.disposeIntermediateTensorInfo(p);const w=t.makeTensorInfo(f,p.dtype,y);if(a){const b=Et(f,l),$=lt({inputs:{x:w},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(w),$}return w}const jB={kernelName:_p,backendName:"cpu",kernelFunc:HB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,mode:a}=r;$e(s,"mirrorPad");const l=o.map((I,k)=>I[0]+s.shape[k]+I[1]),u=o.map(I=>I[0]),d=o.map((I,k)=>I[0]+s.shape[k]),p=a==="reflect"?0:1,f=t.data.get(s.dataId).values,m=s.shape.length,g=Te(s.shape),y=oe(l),v=l.length,w=Te(l),b=Ft(s.dtype,y);for(let I=0;I<y;I++){let k=Wo(I,v,w);for(let O=0;O<v;O++)k[O]<u[O]?k[O]=u[O]*2-k[O]-p:k[O]>=d[O]&&(k[O]=(d[O]-1)*2-k[O]+p);k=k.map((O,A)=>O-u[A]);const T=yr(k,m,g);b[I]=f[T]}return{dataId:t.write(b,l,s.dtype),shape:l,dtype:s.dtype}}const KB={kernelName:Op,backendName:"cpu",kernelFunc:qB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XB=$t((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),YB=Rt(Ul,XB),QB={kernelName:Ul,backendName:"cpu",kernelFunc:YB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bN(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:o}=r,a=s.shape.length;let l=o;if(l===-1&&(l=a-1),l!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${l}`);const u=ze([l],s.shape),d=wN({inputs:{x:s},backend:t,attrs:{reductionIndices:u,keepDims:!1}}),p=Et(d.shape,u),f=lt({inputs:{x:d},backend:t,attrs:{shape:p}}),m=Kx({inputs:{a:s,b:f},backend:t}),g=NC({inputs:{x:m},backend:t}),y=Nu({inputs:{x:g},backend:t,attrs:{axis:u,keepDims:!1}}),v=lt({inputs:{x:y},backend:t,attrs:{shape:p}}),w=Yx({inputs:{a:g,b:v},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(v),w}const ZB={kernelName:lf,backendName:"cpu",kernelFunc:bN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:o,seed:a,normalized:l}=r;$e(s,"multinomial");const u=l?s:bN({inputs:{logits:s},backend:t,attrs:{dim:-1}}),d=u.shape[0],p=u.shape[1],f=t.data.get(u.dataId).values,m=[d,o],g=Wt(oe(m),"int32");for(let y=0;y<d;++y){const v=y*p,w=new Float32Array(p-1);w[0]=f[v];for(let I=1;I<w.length;++I)w[I]=w[I-1]+f[v+I];const b=_f.alea(a.toString()),$=y*o;for(let I=0;I<o;++I){const k=b();g[$+I]=w.length;for(let T=0;T<w.length;T++)if(k<w[T]){g[$+I]=T;break}}}return l||t.disposeIntermediateTensorInfo(u),t.makeTensorInfo(m,"int32",g)}const eM={kernelName:Dp,backendName:"cpu",kernelFunc:JB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tM=Uf;function nM(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=r;$e(s,"NonMaxSuppression");const d=t.data.get(s.dataId).values,p=t.data.get(o.dataId).values,{selectedIndices:f}=tM(d,p,a,l,u);return t.makeTensorInfo([f.length],"int32",new Int32Array(f))}const rM={kernelName:Fp,backendName:"cpu",kernelFunc:nM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sM=Gf;function oM(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:d}=r;$e(s,"NonMaxSuppressionPadded");const p=t.data.get(s.dataId).values,f=t.data.get(o.dataId).values,{selectedIndices:m,validOutputs:g}=sM(p,f,a,l,u,d);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([g]))]}const aM={kernelName:Pp,backendName:"cpu",kernelFunc:oM};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iM=Hf;function lM(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:u,softNmsSigma:d}=r;$e(s,"NonMaxSuppressionWithScore");const p=t.data.get(s.dataId).values,f=t.data.get(o.dataId).values,m=a,g=l,y=u,v=d,{selectedIndices:w,selectedScores:b}=iM(p,f,m,g,y,v);return[t.makeTensorInfo([w.length],"int32",new Int32Array(w)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const uM={kernelName:Lp,backendName:"cpu",kernelFunc:lM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:o,depth:a,onValue:l,offValue:u}=r;$e(s,"oneHot");const d=oe(s.shape),p=new Float32Array(d*a);p.fill(u);const f=t.data.get(s.dataId).values;for(let m=0;m<d;++m)f[m]>=0&&f[m]<a&&(p[m*a+f[m]]=l);return t.makeTensorInfo([...s.shape,a],o,p)}const dM={kernelName:Bp,backendName:"cpu",kernelFunc:cM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nd(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){const s=Fo({inputs:{input:r},backend:t}),o=Nd({inputs:{x:s},backend:t}),a=Aa({inputs:{input:r},backend:t}),l=Nd({inputs:{x:a},backend:t}),u=Rn({inputs:{real:o,imag:l},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}else return Qx({backend:t,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const pM={kernelName:$f,backendName:"cpu",kernelFunc:Nd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){const s=Fo({inputs:{input:r},backend:t}),o=SN({inputs:{x:s},backend:t}),a=Aa({inputs:{input:r},backend:t}),l=Nd({inputs:{x:a},backend:t}),u=Rn({inputs:{real:o,imag:l},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}else return Qx({backend:t,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const fM={kernelName:Vp,backendName:"cpu",kernelFunc:SN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return Cd({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(p=>{Ut(o,p.shape,"All tensors passed to stack must have matching shapes"),D(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=e.map(p=>{const f=Cd({inputs:{input:p},backend:t,attrs:{dim:s}});return l.push(f),f}),d=Fa({inputs:u,backend:t,attrs:{axis:s}});return l.forEach(p=>t.disposeIntermediateTensorInfo(p)),d}const hM={kernelName:Mp,backendName:"cpu",kernelFunc:$N};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,constantValue:a}=r;$e(s,"pad");const l=o.map(($,I)=>$[0]+s.shape[I]+$[1]),u=o.map($=>$[0]),d=t.data.get(s.dataId).values,p=oe(s.shape),f=s.shape.length,m=Te(s.shape),g=oe(l),y=l.length,v=Te(l),w=Ft(s.dtype,g);a!==0&&w.fill(a);for(let $=0;$<p;$++){const k=Wo($,f,m).map((O,A)=>O+u[A]),T=yr(k,y,v);w[T]=d[$]}return{dataId:t.write(w,l,s.dtype),shape:l,dtype:s.dtype}}const CN={kernelName:zp,backendName:"cpu",kernelFunc:mM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gM=$t((n,e)=>Math.pow(n,e)),yM=Rt(jl,gM),xM={kernelName:jl,backendName:"cpu",kernelFunc:yM};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vM(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:l}=r,u=s.map(b=>t.data.get(b.dataId).values),d=s.map(b=>b.shape),p=t.data.get(o.dataId).values,f=t.data.get(a.dataId).values,[m,g,y]=UC(u,d,p,o.shape,o.dtype,f,a.shape),v=m.map(b=>t.makeTensorInfo([b.length],"int32",b)),w=t.makeTensorInfo(y,o.dtype,g);return v.concat([w])}const wM={kernelName:Gp,backendName:"cpu",kernelFunc:vM};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bM(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:o}=e,a=t.data.get(r.dataId).values,l=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,[d,p]=GC(a,r.shape,r.dtype,l,s.shape,u,o.shape),f=t.makeTensorInfo([d.length],"int32",d),m=t.makeTensorInfo([p.length],r.dtype,p);return[f,m]}const SM={kernelName:Hp,backendName:"cpu",kernelFunc:bM};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:o,defaultValue:a,rowPartitionTensors:l}=e,{rowPartitionTypes:u}=r,d=t.data.get(s.dataId).values,p=t.data.get(o.dataId).values,f=t.data.get(a.dataId).values,m=l.map(w=>t.data.get(w.dataId).values),g=l.map(w=>w.shape),[y,v]=HC(d,s.shape,p,o.shape,o.dtype,f,a.shape,m,g,u);return t.makeTensorInfo(y,o.dtype,v)}const CM={kernelName:jp,backendName:"cpu",kernelFunc:$M};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NM(n){const{backend:e,attrs:t}=n,{start:r,stop:s,dtype:o,step:a}=t,l=jC(r,s,a,o);return e.makeTensorInfo([l.length],o,l)}const kM={kernelName:qp,backendName:"cpu",kernelFunc:NM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IM=Ye(ql,n=>1/n),TM={kernelName:ql,backendName:"cpu",kernelFunc:IM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:l}=r;$e(s,"resizeBilinear");const u=Te(s.shape),[d,p]=l,[f,m,g,y]=s.shape,v=t.data.get(s.dataId).values,w=new Float32Array(oe([f,d,p,y])),b=[o&&d>1?m-1:m,o&&p>1?g-1:g],$=[o&&d>1?d-1:d,o&&p>1?p-1:p];let I=0;const k=b[0]/$[0],T=b[1]/$[1];for(let O=0;O<f;O++)for(let A=0;A<d;A++){let V;a?V=k*(A+.5)-.5:V=k*A;const P=Math.max(0,Math.floor(V)),F=V-P,E=Math.min(m-1,Math.ceil(V)),W=O*u[0]+P*u[1],j=O*u[0]+E*u[1];for(let Y=0;Y<p;Y++){let Q;a?Q=T*(Y+.5)-.5:Q=T*Y;const Z=Math.max(0,Math.floor(Q)),ne=Q-Z,U=Math.min(g-1,Math.ceil(Q)),K=W+Z*u[2],X=j+Z*u[2],L=W+U*u[2],H=j+U*u[2];for(let se=0;se<y;se++){const ae=v[K+se],ie=v[X+se],ue=v[L+se],he=v[H+se],me=ae+(ue-ae)*ne,xe=ie+(he-ie)*ne,Ee=me+(xe-me)*F;w[I++]=Ee}}}return t.makeTensorInfo([f,d,p,y],"float32",w)}const RM={kernelName:Qp,backendName:"cpu",kernelFunc:EM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _M(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r;$e([o,s],"resizeBilinearGrad");const l=Te(s.shape),[u,d,p,f]=s.shape,[,m,g]=o.shape,y=new Float32Array(u*d*p*f),v=[a&&m>1?d-1:d,a&&g>1?p-1:p],w=[a&&m>1?m-1:m,a&&g>1?g-1:g],b=v[0]/w[0],$=v[1]/w[1],I=t.data.get(o.dataId).values;let k=0;for(let T=0;T<u;T++){const O=T*l[0];for(let A=0;A<m;A++){const V=A*b,P=Math.floor(V),F=Math.min(Math.ceil(V),d-1),E=O+P*l[1],W=O+F*l[1],j=V-P,Y=1-j;for(let Q=0;Q<g;Q++){const Z=Q*$,ne=Math.floor(Z),U=Math.min(Math.ceil(Z),p-1),K=Z-ne,X=1-K,L=E+ne*l[2],H=E+U*l[2],se=W+ne*l[2],ae=W+U*l[2],ie=Y*X,ue=Y*K,he=j*X,me=j*K;for(let xe=0;xe<f;xe++){const Ee=I[k++];y[L+xe]+=Ee*ie,y[H+xe]+=Ee*ue,y[se+xe]+=Ee*he,y[ae+xe]+=Ee*me}}}}return t.makeTensorInfo([u,p,d,f],"float32",y)}const OM={kernelName:dy,backendName:"cpu",kernelFunc:_M};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:l}=r;$e(s,"resizeNearestNeighbor");const u=Te(s.shape),[d,p]=l,[f,m,g,y]=s.shape,v=t.data.get(s.dataId).values,w=new Float32Array(f*d*p*y),b=[o&&d>1?m-1:m,o&&p>1?g-1:g],$=[o&&d>1?d-1:d,o&&p>1?p-1:p],I=b[0]/$[0],k=b[1]/$[1];let T=0;for(let O=0;O<f;O++){const A=O*u[0];for(let V=0;V<d;V++){const P=a?I*(V+.5):I*V;let F=Math.min(m-1,o?Math.round(P):Math.floor(P));a&&(F=Math.max(0,F));const E=A+F*u[1];for(let W=0;W<p;W++){const j=a?k*(W+.5):k*W;let Y=Math.min(g-1,o?Math.round(j):Math.floor(j));a&&(Y=Math.max(0,Y));const Q=E+Y*u[2];for(let Z=0;Z<y;Z++){const ne=v[Q+Z];w[T++]=ne}}}}return t.makeTensorInfo([f,d,p,y],s.dtype,w)}const AM={kernelName:Yp,backendName:"cpu",kernelFunc:DM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r;$e([o,s],"resizeNearestNeighborGrad");const l=Te(s.shape),u=Te(o.shape),[d,p,f,m]=s.shape,[,g,y]=o.shape,v=new Float32Array(d*p*f*m),w=t.data.get(o.dataId).values,b=[a&&g>1?p-1:p,a&&y>1?f-1:f],$=[a&&g>1?g-1:g,a&&y>1?y-1:y],I=b[0]/$[0],k=b[1]/$[1],T=1/I,O=1/k,A=Math.ceil(T)*2+2,V=Math.ceil(O)*2+2;for(let P=0;P<d;P++){const F=P*l[0];for(let E=0;E<p;E++){const W=F+E*l[1],j=Math.floor(E*T),Y=Math.floor(j-A/2);for(let Q=0;Q<f;Q++){const Z=W+Q*l[2],ne=Math.floor(Q*O),U=Math.floor(ne-V/2);for(let K=0;K<m;K++){let X=0;for(let L=0;L<A;L++){const H=L+Y;if(H<0||H>=g)continue;const se=F+H*u[1],ae=H*I,ie=Math.min(p-1,a?Math.round(ae):Math.floor(ae));if(E===ie)for(let ue=0;ue<V;ue++){const he=ue+U;if(he<0||he>=y)continue;const me=se+he*u[2],xe=he*k,Ee=Math.min(f-1,a?Math.round(xe):Math.floor(xe));Q===Ee&&(X+=w[me+K])}}v[Z+K]=X}}}}return t.makeTensorInfo(s.shape,s.dtype,v)}const PM={kernelName:cy,backendName:"cpu",kernelFunc:FM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:o}=r;$e(s,"reverse");const a=s.shape.length,l=ze(o,s.shape);if(a===0)return Lr({inputs:{x:s},backend:t});const u=new kt(s.shape,s.dtype),d=t.bufferSync(s);for(let p=0;p<u.size;p++){const f=u.indexToLoc(p),m=f.slice();l.forEach(g=>m[g]=s.shape[g]-1-m[g]),u.set(d.get(...m),...f)}return t.makeTensorInfo(u.shape,u.dtype,u.values)}const VM={kernelName:Zp,backendName:"cpu",kernelFunc:LM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BM={kernelName:Cf,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:o,center:a}=e,l=t,u=Ft(r.dtype,oe(r.shape)),[d,p,f,m]=r.shape,[g,y]=Cx(a,p,f),v=255,w=Math.sin(s),b=Math.cos(s),$=l.data.get(r.dataId).values;for(let k=0;k<d;k++){const T=k*f*p*m;for(let O=0;O<p;O++){const A=O*(f*m);for(let V=0;V<f;V++){const P=V*m;for(let F=0;F<m;F++){const E=[d,O,V,F],W=E[2],j=E[1];let Y=(W-g)*b-(j-y)*w,Q=(W-g)*w+(j-y)*b;Y=Math.round(Y+g),Q=Math.round(Q+y);let Z=o;if(typeof o!="number"&&(F===3?Z=v:Z=o[F]),Y>=0&&Y<f&&Q>=0&&Q<p){const U=Q*(f*m),K=Y*m,X=T+U+K+F;Z=$[X]}const ne=T+A+P+F;u[ne]=Z}}}}return{dataId:l.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MM=Ye(Yl,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),zM={kernelName:Yl,backendName:"cpu",kernelFunc:MM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:f}=Xs(o,s,a),m=!0,g=t.bufferSync(s),y=t.bufferSync(o),v=$o(g,y,a,f,d,u,l,p,0,m);return t.makeTensorInfo(a,v.dtype,v.values)}const UM={kernelName:Jp,backendName:"cpu",kernelFunc:WM};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(n,e){let t=0,r=n.length,s=0;for(;t<r;)s=Math.floor((t+r)/2),n[s]<e?t=s+1:r=s;return r}function HM(n,e){let t=0,r=n.length,s=0;for(;t<r;)s=Math.floor((t+r)/2),n[s]<=e?t=s+1:r=s;return r}function jM(n,e,t,r,s,o){const a=vt("int32",t*s);for(let l=0;l<t;++l){const u=n.slice(l*r,(l+1)*r),d=l*s;for(let p=0;p<s;++p)a[d+p]=o==="left"?GM(u,e[p+d]):HM(u,e[p+d])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:o}=e,{side:a}=r,l=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,d=jM(l,u,s.shape[0],s.shape[1],o.shape[1],a);return t.makeTensorInfo(o.shape,"int32",d)}const KM={kernelName:tf,backendName:"cpu",kernelFunc:qM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XM(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:o}=e;$e([r,s,o],"select");const a=r.shape.length,l=t.data.get(r.dataId).values,u=t.data.get(s.dataId).values,d=t.data.get(o.dataId).values,p=mn(s.dtype,o.dtype),f=Wt(oe(s.shape),p);let m=0;const g=a===0||a>1||s.shape.length===1?1:oe(s.shape.slice(1));for(let y=0;y<l.length;y++)for(let v=0;v<g;v++)l[y]===1?f[m++]=u[y]:f[m++]=d[y];return t.makeTensorInfo(s.shape,p,f)}const YM={kernelName:nf,backendName:"cpu",kernelFunc:XM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QM=Ix,ZM=Tx,JM=Ye(Zl,n=>n>=0?ZM*n:QM*(Math.exp(n)-1)),ez={kernelName:Zl,backendName:"cpu",kernelFunc:JM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tz=Ye(tu,n=>n<0?-1:n>0?1:0),nz={kernelName:tu,backendName:"cpu",kernelFunc:tz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rz=Ye(Jl,n=>Math.sin(n)),sz={kernelName:Jl,backendName:"cpu",kernelFunc:rz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oz=Ye(eu,n=>Math.sinh(n)),az={kernelName:eu,backendName:"cpu",kernelFunc:oz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iz=11920928955078125e-23,Aw=Math.log(iz)+2,lz=Ye(ru,n=>{const e=n>-Aw,t=n<Aw,r=Math.exp(n);let s;return t?s=r:e?s=n:s=Math.log(1+r),s}),uz={kernelName:ru,backendName:"cpu",kernelFunc:lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,paddings:a}=r;$e([s],"spaceToBatchND");const l=oe(o),u=[[0,0]];u.push(...a);for(let O=1+o.length;O<s.shape.length;++O)u.push([0,0]);const d=CN.kernelFunc({inputs:{x:s},backend:t,attrs:{paddings:u,constantValue:0}}),p=Su(d.shape,o,l,!1),f=$u(p.length,o.length,!1),m=Cu(d.shape,o,l,!1),v=lt({inputs:{x:d},backend:t,attrs:{shape:p}}),$=yn({inputs:{x:v},backend:t,attrs:{perm:f}}),T=lt({inputs:{x:$},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo($),T}const dz={kernelName:of,backendName:"cpu",kernelFunc:cz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const l=t.data.get(r.dataId).values,u=t.data.get(s.dataId).values,d=t.data.get(o.dataId).values,p=t.data.get(a.dataId).values[0],[f,m,g,y,v]=YC(l,r.shape,r.dtype,u,s.dtype,d,p);return[t.makeTensorInfo(m,r.dtype,f),t.makeTensorInfo([m[0]],s.dtype,g),t.makeTensorInfo([y.length],"bool",new Uint8Array(y.map(w=>Number(w)))),t.makeTensorInfo([v.length],r.dtype,new Int32Array(v))]}const fz={kernelName:uf,backendName:"cpu",kernelFunc:pz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hz(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.data.get(s.dataId).values),l=t.data.get(r.dataId).values,u=Array.from(t.data.get(o.dataId).values),[d,p,f]=QC(l,r.shape,r.dtype,a,u);return[t.makeTensorInfo(p,r.dtype,d),t.makeTensorInfo([f.length],o.dtype,new Int32Array(f))]}const mz={kernelName:cf,backendName:"cpu",kernelFunc:hz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(r.dataId).values,l=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,[d,p]=qx(a,r.shape,r.dtype,l,u,!0);return t.makeTensorInfo(p,r.dtype,d)}const yz={kernelName:df,backendName:"cpu",kernelFunc:gz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(r.dataId).values,l=t.data.get(s.dataId).values,u=t.data.get(o.dataId).values,[d,p]=qx(a,r.shape,r.dtype,l,u);return t.makeTensorInfo(p,r.dtype,d)}const vz={kernelName:pf,backendName:"cpu",kernelFunc:xz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:l}=r,{sliceRank:u,numUpdates:d,sliceSize:p,strides:f,outputSize:m}=Xs(o,s,l),g=!1,y=t.bufferSync(s);let v;switch(o.dtype){case"bool":{const w=t.bufferSync(o),b=!!t.data.get(a.dataId).values[0];v=$o(y,w,l,m,p,d,u,f,b,g);break}case"float32":{const w=t.bufferSync(o),b=t.data.get(a.dataId).values[0];v=$o(y,w,l,m,p,d,u,f,b,g);break}case"int32":{const w=t.bufferSync(o),b=t.data.get(a.dataId).values[0];v=$o(y,w,l,m,p,d,u,f,b,g);break}case"string":{const w=t.bufferSync(o),b=ns(t.data.get(a.dataId).values[0]);v=$o(y,w,l,m,p,d,u,f,b,g);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(l,v.dtype,v.values)}const bz={kernelName:ff,backendName:"cpu",kernelFunc:wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,l=ze(a,s.shape)[0],u=zx(s,o,l),d=new Array(s.shape.length).fill(0),p=s.shape.slice();return u.map(f=>{const m=[...p];m[l]=f;const g=Po({inputs:{x:s},backend:t,attrs:{begin:d,size:m}});return d[l]+=f,g})}const $z={kernelName:af,backendName:"cpu",kernelFunc:Sz};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cz={kernelName:py,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,r=e;$e(t,"square");const s=r.data.get(t.dataId).values,o=new Float32Array(s.length);for(let l=0;l<s.length;++l){const u=s[l];o[l]=u*u}return{dataId:r.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nz=Ye(du,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),kz={kernelName:du,backendName:"cpu",kernelFunc:Nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,end:a,strides:l,beginMask:u,endMask:d,ellipsisMask:p,newAxisMask:f,shrinkAxisMask:m}=r;$e(s,"stridedSlice");const{finalShapeSparse:g,finalShape:y,isIdentity:v,sliceDim0:w,isSimpleSlice:b,begin:$,end:I,strides:k}=bx(s.shape,o,a,l,u,d,p,f,m);let T;if(v)T=lt({inputs:{x:s},backend:t,attrs:{shape:y}});else if(w||b){D(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const O=yx($,I,k),A=Po({inputs:{x:s},backend:t,attrs:{begin:$,size:O}});T=lt({inputs:{x:A},backend:t,attrs:{shape:y}}),t.disposeIntermediateTensorInfo(A)}else{const O=t.bufferSync(s),A=eN(g,O,k,$);T=t.makeTensorInfo(y,A.dtype,A.values)}return T}const Tz={kernelName:hf,backendName:"cpu",kernelFunc:Iz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ez(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:o,leftPad:a,rightPad:l,padWidth:u,preserveShortSequences:d}=r,{data:p,dataSplits:f}=e,m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values,[y,v]=tN(m,g,s,o,a,l,u,d);return[t.makeTensorInfo([y.length],"string",y),t.makeTensorInfo(f.shape,"int32",v)]}const Rz={kernelName:mf,backendName:"cpu",kernelFunc:Ez};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const l=t.data.get(o.dataId).values,u=t.data.get(a.dataId).values[0],[d,p,f]=nN(l,u,s),m=p.length;return[t.makeTensorInfo([m,2],"int32",d),t.makeTensorInfo([m],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(f))]}const Oz={kernelName:gf,backendName:"cpu",kernelFunc:_z};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dz(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(o.dataId).values,l=rN(a,s);return t.makeTensorInfo(o.shape,"int32",l)}const Az={kernelName:yf,backendName:"cpu",kernelFunc:Dz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fz=Ye(lu,n=>Math.tan(n)),Pz={kernelName:lu,backendName:"cpu",kernelFunc:Fz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lz=Ye(uu,n=>Math.tanh(n)),Vz={kernelName:uu,backendName:"cpu",kernelFunc:Lz};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(n){const{inputs:e,backend:t}=n,{tensor:r,indices:s,updates:o}=e,{sliceRank:a,numUpdates:l,sliceSize:u,strides:d,outputSize:p}=Xs(o,s,r.shape),f=!1,m=t.bufferSync(s),g=t.bufferSync(o),y=t.bufferSync(r),v=$o(m,g,r.shape,p,u,l,a,d,y,f);return t.makeTensorInfo(r.shape,v.dtype,v.values)}const Mz={kernelName:ef,backendName:"cpu",kernelFunc:Bz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:o}=r;$e(s,"tile");const a=oN(t.bufferSync(s),o);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const Wz={kernelName:cu,backendName:"cpu",kernelFunc:zz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:o,sorted:a}=r;$e(s,"topk");const l=t.data.get(s.dataId).values,[u,d]=iN(l,s.shape,s.dtype,o,a);return[t.makeTensorInfo(u.shape,u.dtype,u.values),t.makeTensorInfo(d.shape,d.dtype,d.values)]}const Gz={kernelName:xf,backendName:"cpu",kernelFunc:Uz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hz(n){const{inputs:e,attrs:t,backend:r}=n,{image:s,transforms:o}=e,{interpolation:a,fillMode:l,fillValue:u,outputShape:d}=t,[p,f,m,g]=s.shape,[y,v]=d??[f,m],w=[p,y,v,g],b=Te(s.shape),$=b[0],I=b[1],k=b[2],T=Te(w),O=T[0],A=T[1],V=T[2],P=Ft(s.dtype,oe(w));P.fill(u);const F=r.data.get(s.dataId).values,E=r.data.get(o.dataId).values;for(let j=0;j<p;++j){const Y=o.shape[0]===1?E:E.subarray(j*8,j*8+8);for(let Q=0;Q<y;++Q)for(let Z=0;Z<v;++Z)for(let ne=0;ne<g;++ne){let U;const K=Y[6]*Z+Y[7]*Q+1;if(K===0)continue;const X=(Y[0]*Z+Y[1]*Q+Y[2])/K,L=(Y[3]*Z+Y[4]*Q+Y[5])/K,H=Fw(X,m,l),se=Fw(L,f,l);switch(a){case"nearest":U=Qz(F,f,m,$,I,k,j,se,H,ne,u);break;case"bilinear":U=Zz(F,f,m,$,I,k,j,se,H,ne,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const ae=j*O+Q*A+Z*V+ne;P[ae]=U}return r.makeTensorInfo(w,s.dtype,P)}return{dataId:r.write(P,w,s.dtype),shape:s.shape,dtype:s.dtype}}const jz={kernelName:vf,backendName:"cpu",kernelFunc:Hz};function Fw(n,e,t){switch(t){case"reflect":return qz(n,e);case"wrap":return Kz(n,e);case"nearest":return Yz(n,e);case"constant":default:return Xz(n)}}function qz(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const r=2*e;t<r&&(t=r*Math.trunc(-t/r)+t),t=t<-e?t+r:-t-1}else if(t>e-1)if(e<=1)t=0;else{const r=2*e;t-=r*Math.trunc(t/r),t>=e&&(t=r-t-1)}return Vs(0,t,e-1)}function Kz(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const r=e-1;t+=e*(Math.trunc(-t/r)+1)}else if(t>e-1)if(e<=1)t=0;else{const r=e-1;t-=e*Math.trunc(t/r)}return Vs(0,t,e-1)}function Xz(n,e){return n}function Yz(n,e){return Vs(0,n,e-1)}function Vi(n,e,t,r,s,o,a,l,u,d,p){const f=a*r+l*s+u*o+d;return 0<=l&&l<e&&0<=u&&u<t?n[f]:p}function Qz(n,e,t,r,s,o,a,l,u,d,p){const f=Math.round(l),m=Math.round(u);return Vi(n,e,t,r,s,o,a,f,m,d,p)}function Zz(n,e,t,r,s,o,a,l,u,d,p){const f=Math.floor(l),m=Math.floor(u),g=f+1,y=m+1,v=(y-u)*Vi(n,e,t,r,s,o,a,f,m,d,p)+(u-m)*Vi(n,e,t,r,s,o,a,f,y,d,p),w=(y-u)*Vi(n,e,t,r,s,o,a,g,m,d,p)+(u-m)*Vi(n,e,t,r,s,o,a,g,y,d,p);return(g-l)*v+(l-f)*w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:o}=e;$e(o,"unique");const a=r.data.get(o.dataId).values,{outputValues:l,outputShape:u,indices:d}=lN(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,l),r.makeTensorInfo([d.length],"int32",d)]}const eW={kernelName:wf,backendName:"cpu",kernelFunc:Jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tW(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s.shape.length,l=s.shape[o],u=new Array(a-1);let d=0;for(let g=0;g<a;g++)g!==o&&(u[d++]=s.shape[g]);const p=new Array(a).fill(0),f=s.shape.slice();f[o]=1;const m=new Array(l);for(let g=0;g<m.length;g++){p[o]=g;const y=Po({inputs:{x:s},backend:t,attrs:{begin:p,size:f}});m[g]=lt({inputs:{x:y},backend:t,attrs:{shape:u}}),t.disposeIntermediateTensorInfo(y)}return m}const nW={kernelName:bf,backendName:"cpu",kernelFunc:tW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rW(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:o}=e,{numSegments:a}=r;$e(s,"unsortedSegmentSum");const l=s.shape.length,u=o.shape.length,d=[],p=[],f=l-u;let m=o;for(let y=0;y<f;++y){const v=Cd({inputs:{input:m},backend:t,attrs:{dim:y+1}});m=v,p.push(v)}for(let y=0;y<a;++y){const v=is(y,"int32"),w=t.makeTensorInfo([],"int32",v),b=$C({inputs:{a:w,b:m},backend:t}),$=Hs({inputs:{x:b},backend:t,attrs:{dtype:"float32"}}),I=Yf({inputs:{a:$,b:s},backend:t}),k=Nu({inputs:{x:I},backend:t,attrs:{axis:0,keepDims:!1}});d.push(k),p.push(w),p.push(b),p.push($),p.push(I),p.push(k)}const g=$N({inputs:d,backend:t,attrs:{axis:0}});return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}const sW={kernelName:Sf,backendName:"cpu",kernelFunc:rW};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oW=[JL,D3,t4,r4,B3,o4,i4,u4,d4,f4,m4,y4,v4,S4,C4,I4,E4,_4,D4,QL,F4,L4,B4,z3,z4,L3,U3,U4,A3,H4,q4,K4,Y4,Z4,eV,nV,sV,aV,lV,cV,pV,hV,gV,xV,vV,bV,$V,NV,kV,IV,TV,RV,DV,GL,FV,G3,UV,H3,GV,q3,YV,QV,JV,X3,Q3,tB,rB,oB,iB,J3,tL,F3,uB,j4,dB,fB,mB,HL,rL,oL,yB,iL,vB,SB,CB,IB,EB,_B,OB,uL,AB,PB,VB,MB,WB,GB,jB,dL,KB,QB,eM,fL,mL,rM,aM,uM,yL,dM,fM,hM,CN,xM,qL,wL,wM,SM,CM,kM,P3,Og,TM,KL,XL,YL,RM,OM,AM,PM,VM,BM,zM,TL,UM,KM,YM,ez,RL,nz,sz,az,_L,ZB,uz,dz,fz,mz,yz,vz,bz,$z,AL,Cz,PL,VL,kz,Tz,Rz,Oz,Az,WL,_V,Pz,Vz,Mz,Wz,Gz,jz,xL,eW,nW,sW,pM];for(const n of oW)Nf(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wo={},Wc={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function aW(n,e){wo[n]=e}function wr(n,e){if(!(n in wo)||e!=null){const r=lW(n,e);if(r!==null)wo[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=wo[n];return t==null||t.isContextLost()?(delete wo[n],wr(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),wo[n])}function iW(n){if(!J().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function lW(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??iW(n);return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete wo[n]},!1),J().getBool("SOFTWARE_WEBGL_ENABLED")&&(Wc.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Wc)||t.getContext("experimental-webgl",Wc):t.getContext("webgl2",Wc)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var rl;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(rl||(rl={}));var Wn;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Wn||(Wn={}));var Mt;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Mt||(Mt={}));function ku(n,e){return[e,n]}function uW(n,e){return n*e}function Uc(n){const e=oe(n),t=Math.ceil(e/4);return dd(t)}function Wa(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function cW(n,e){const[t,r]=Wa(n,e);return t*r*4}function Zx(n,e){const t=n;let r,s,o,a,l,u,d,p,f,m;return J().getNumber("WEBGL_VERSION")===2?(r=t.R32F,s=t.R16F,o=t.RGBA16F,a=t.RGBA32F,l=t.RED,d=4,p=1,f=t.HALF_FLOAT,m=t.FLOAT,u=t.RGBA8):(r=n.RGBA,s=n.RGBA,o=n.RGBA,a=t.RGBA,l=n.RGBA,d=4,p=4,f=e!=null?e.HALF_FLOAT_OES:null,m=n.FLOAT,u=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:d,defaultNumChannels:p,textureTypeHalfFloat:f,textureTypeFloat:m}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function we(n,e){const t=e();return J().getBool("DEBUG")&&dW(n),t}function dW(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+mW(n,e))}const pW=596e-10,fW=65504;function hW(n){return!!(J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||pW<Math.abs(n)&&Math.abs(n)<fW)}function mW(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Gc(n,e){return ds(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function gW(n,e){const t=ds(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(we(n,()=>n.shaderSource(t,e)),we(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function yW(n,e){const t=ds(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(we(n,()=>n.shaderSource(t,e)),we(n,()=>n.compileShader(t)),J().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw NN(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const xW=/ERROR: [0-9]+:([0-9]+):/g;function NN(n,e){const t=xW.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],s=n.split(`
`),o=s.length.toString().length+2,a=s.map((f,m)=>No((m+1).toString(),o)+f);let l=0;for(let f=0;f<a.length;f++)l=Math.max(a[f].length,l);const u=a.slice(0,r-1),d=a.slice(r-1,r),p=a.slice(r);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${No(d[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join(`
`))}function vW(n){return ds(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function wW(n,e){if(we(n,()=>n.linkProgram(e)),!J().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function og(n,e){if(we(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function bW(n,e){const t=ds(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return we(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),we(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function SW(n,e){const t=ds(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return we(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),we(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function $W(n){return ds(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function CW(n,e){const t=J().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,s=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function NW(n){return ds(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Pw(n,e,t,r,s,o,a){const l=n.getAttribLocation(e,t);return l===-1?!1:(we(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),we(n,()=>n.vertexAttribPointer(l,s,n.FLOAT,!1,o,a)),we(n,()=>n.enableVertexAttribArray(l)),!0)}function kW(n,e,t){_W(n,t),we(n,()=>n.activeTexture(n.TEXTURE0+t)),we(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function IW(n,e,t){return ds(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function TW(n,e,t){return n.getUniformLocation(e,t)}function EW(n,e,t,r){we(n,()=>kW(n,e,r)),we(n,()=>n.uniform1i(t,r))}function ag(n,e,t){we(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),we(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Lw(n,e){we(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),we(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Hc(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+RW(n,e))}function RW(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function ds(n,e,t){const r=we(n,()=>e());if(r==null)throw new Error(t);return r}function _W(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const s=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${s}.`)}}function Pa(n,e=2){return oe(n.slice(0,n.length-e))}function La(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function jc(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Pa(n),...La(n)]),e}function OW(n,e=!1){let t=J().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=J().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&J().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((l,u)=>u>=n.length-2?Ad(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=as(n).newShape);let s=oe(n),o=null;n.length<=1&&s<=t?o=[1,s]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const a=o!=null&&Math.max(...o)>r&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const l=Pa(n);let u=2,d=2;n.length&&([u,d]=La(n)),s=l*(u/2)*(d/2),o=dd(s).map(p=>p*2)}else o=dd(s);return o}function qc(n){return n%2===0}function kd(n,e){if(n=n.slice(-2),e=e.slice(-2),Ze(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],r=e[e.length-1];if(t===r||qc(t)&&qc(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&qc(n[0])&&qc(e[0])}let ig,lg;function DW(n){if(ig==null){const e=wr(n);ig=e.getParameter(e.MAX_TEXTURE_SIZE)}return ig}function AW(n){if(lg==null){const e=wr(n);lg=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,lg)}function FW(n){if(n===0)return 0;let e;const t=wr(n);return er(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:er(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function er(n,e){return n.getExtension(e)!=null}function Vw(n){try{if(wr(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function PW(n){if(n===0)return!1;const e=wr(n);if(n===1){if(!er(e,"OES_texture_float"))return!1}else if(!er(e,"EXT_color_buffer_float"))return!1;return Ag(e)}function LW(n){if(n===0)return!1;const e=wr(n);if(n===1){if(!er(e,"OES_texture_float")||!er(e,"WEBGL_color_buffer_float"))return!1}else{if(er(e,"EXT_color_buffer_float"))return Ag(e);const r="EXT_color_buffer_half_float";if(er(e,r)){const s=e.getExtension(r);return VW(e,s)}return!1}return Ag(e)}function Ag(n){const e=Zx(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),a}function VW(n,e){const t=Zx(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const l=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(a),l}function BW(n){return n!==2?!1:wr(n).fenceSync!=null}function Iu(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&D(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ne=J();Ne.registerFlag("HAS_WEBGL",()=>Ne.getNumber("WEBGL_VERSION")>0);Ne.registerFlag("WEBGL_VERSION",()=>Vw(2)?2:Vw(1)?1:0);Ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ne.get("WEBGL_VERSION")===2);Ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ne.registerFlag("WEBGL_PACK",()=>Ne.getBool("HAS_WEBGL"));Ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_CLIP",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_REDUCE",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_CONV_IM2COL",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>DW(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>AW(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ne.getNumber("WEBGL_VERSION");return n===0?0:FW(n)});Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!my());Ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>PW(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ne.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>LW(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>BW(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>my()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ne.registerFlag("WEBGL_EXP_CONV",()=>!1);Ne.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ne.getBool("IS_TEST"));Ne.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ne.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ne.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ne.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dn(){let n,e,t,r,s,o,a,l,u,d;return J().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",o="outputColor",a="out vec4 outputColor;",l=J().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",d=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",o="gl_FragColor",a="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,d=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:o,defineOutput:a,defineSpecialNaN:l,defineSpecialInf:u,defineRound:d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uo(n,e,t="index"){const r=Te(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / ${s}`,l=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${s}`:`index -= ${n[o]} * ${s}`;return`${a}; ${l};`}).join("")}function Qf(n,e,t="index"){const r=Te(e);return r.map((s,o)=>{const a=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,l=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${a}; ${l};`}).join("")}function MW(n,e){const t=n.length,r=n.map(o=>`${e}[${o}]`),s=new Array(t-1);s[t-2]=r[t-1];for(let o=t-3;o>=0;--o)s[o]=`(${s[o+1]} * ${r[o+1]})`;return s}function zW(n,e,t="index"){const r=n.map((o,a)=>a),s=MW(r,e);return s.map((o,a)=>{const l=`int ${n[a]} = ${t} / ${s[a]}`,u=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${s[a]}`:`index -= ${n[a]} * ${s[a]}`;return`${l}; ${u};`}).join("")}function Jx(n){const e=Te(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function e0(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const kN=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:IN}=hC;function WW(n,e,t){const r=[];if(n.forEach(g=>{const y=oe(g.shapeInfo.logicalShape);if(g.shapeInfo.isUniform?r.push(`uniform float ${g.name}${y>1?`[${y}]`:""};`):(r.push(`uniform sampler2D ${g.name};`),r.push(`uniform int offset${g.name};`)),t.enableShapeUniforms){const{uniformShape:v}=t0(t.packedInputs,g.shapeInfo.logicalShape,g.shapeInfo.texShape);switch(v.length){case 1:r.push(`uniform int ${g.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${g.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${g.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${g.name}Shape;`);break}r.push(`uniform ivec2 ${g.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(g=>{r.push(`uniform ${g.type} ${g.name}${g.arrayIndex?`[${g.arrayIndex}]`:""};`)});const s=r.join(`
`),o=n.map(g=>UW(g,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,l=dn(),u=jW(l);let d,p,f=XW(l);return e.isPacked?(d=GW(e.logicalShape,a,t.enableShapeUniforms),p=KW(l)):(d=HW(e.logicalShape,a,t.enableShapeUniforms),p=qW(l)),t.packedInputs&&(f+=JW),[f,u,p,s,d,o,t.userCode].join(`
`)}function Ua(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return dU(n,e);case 1:return fU(n,e);case 2:return mU(n,e);case 3:return yU(n,e);case 4:return vU(n,e);case 5:return wU(n);case 6:return bU(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function TN(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return cU(n);case 1:return pU(n,e);case 2:return hU(n,e);case 3:return gU(n,e);default:return xU(n,e)}}function UW(n,e,t=!1,r){let s="";t?s+=TN(n,r):s+=Ua(n,r);const o=n.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(t?s+=SU(n,e):s+=$U(n,e)),s}function GW(n,e,t){switch(n.length){case 0:return EN();case 1:return eU(n,e,t);case 2:return lU(n,e,t);case 3:return nU(n,e,t);default:return sU(n,e,t)}}function HW(n,e,t){switch(n.length){case 0:return EN();case 1:return tU(n,e,t);case 2:return uU(n,e,t);case 3:return rU(n,e,t);case 4:return oU(n,e,t);case 5:return aU(n,e);case 6:return iU(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function jW(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function qW(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function KW(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function XW(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${YW}
    ${QW}
    ${ZW}
  `}const YW=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,QW=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,ZW=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,JW=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function EN(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function eU(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function tU(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function nU(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),o=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function rU(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Qf(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=Uo(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function sU(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),o=s*Math.ceil(n[n.length-2]/2);let a=o,l="",u="b, r, c";for(let d=2;d<n.length-1;d++)a*=n[n.length-d-1],l=`
      int b${d} = index / ${a};
      index -= b${d} * ${a};
    `+l,u=`b${d}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${l}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${u});
    }
  `}function oU(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Qf(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=Uo(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function aU(n,e){const t=Uo(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function iU(n,e){const t=Uo(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function lU(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ze(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function uU(n,e,t){return Ze(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Go(n){return`offset${n}`}function cU(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=dn();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function dU(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[s,o]=n.shapeInfo.texShape;if(s===1&&o===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Go(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[l,u]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${l}, ${u}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function pU(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,o=dn();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function fU(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Ga(n)}
      }
    `;const s=n.shapeInfo.texShape,o=s[0],a=s[1];if(a===1&&o===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const l=Go(t);return a===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${l});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${l});
      return sampleTexture(${t}, uv);
    }
  `}function hU(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=o[0],l=o[1],u=dn();if(o!=null&&Ze(t,o))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${a}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;const d=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],p=Math.ceil(t[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${p}, ${d[0]}, ${d[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function mU(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape;if(o!=null&&Ze(t,o)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const m=o[0],g=o[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${g}.0, ${m}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:a,keptDims:l}=as(t),u=a;if(u.length<t.length){const m=Ha(n,u),g=["row","col"];return`
      ${Ua(m,e)}
      float ${s}(int row, int col) {
        return ${s}(${ja(g,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Ga(n)}
      }
    `;const d=o[0],p=o[1],f=Go(r);return p===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${f}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${f}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `:d===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${f}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${f}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${f};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${f};
    vec2 uv = uvFromFlat(${d}, ${p}, index);
    return sampleTexture(${r}, uv);
  }
`}function gU(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const m=t.slice(1),g=[1,2],y=Ha(n,m),v=["b","row","col"];return`
        ${TN(y,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${ja(v,g)});
        }
      `}const l=dn();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;const u=a[0],d=a[1],p=Math.ceil(t[2]/2),f=p*Math.ceil(t[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${d}, ${f}, ${p}, b, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function yU(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[1]*t[2],a=t[2],{newShape:l,keptDims:u}=as(t),d=l;if(d.length<t.length){const v=Ha(n,d),w=["row","col","depth"];return`
        ${Ua(v,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${ja(w,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${Ga(n)}
      }
    `;const p=n.shapeInfo.texShape,f=p[0],m=p[1],g=n.shapeInfo.flatOffset;if(m===o&&g==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${f}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(m===a&&g==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${f}.0);
      return sampleTexture(${r}, uv);
    }
  `;const y=Go(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${y};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${y};
        vec2 uv = uvFromFlat(${f}, ${m}, index);
        return sampleTexture(${r}, uv);
      }
  `}function xU(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=dn();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,a=o.length,l=n.shapeInfo.texShape,u=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],d=u[0],p=u[1],f=Math.ceil(o[a-1]/2);let m=f*Math.ceil(o[a-2]/2),g="int b, int row, int col",y=`b * ${m} + (row / 2) * ${f} + (col / 2)`;for(let v=2;v<a-1;v++)g=`int b${v}, `+g,m*=o[a-v-1],y=`b${v} * ${m} + `+y;return`
    vec4 ${r}(${g}) {
      int index = ${y};
      int texR = index / ${p};
      int texC = index - texR * ${p};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${d});
      return ${s.texture2D}(${t}, uv);
    }
  `}function vU(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[3],a=t[2]*o,l=t[1]*a,{newShape:u,keptDims:d}=as(t);if(u.length<t.length){const $=Ha(n,u),I=["row","col","depth","depth2"];return`
      ${Ua($,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${ja(I,d)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${a}, ${o}, 1)));
        ${Ga(n)}
      }
    `;const p=n.shapeInfo.flatOffset,f=n.shapeInfo.texShape,m=f[0],g=f[1],y=`int stride2 = ${r}Shape[3];`,v=`int stride1 = ${r}Shape[2] * stride2;`,w=`int stride0 = ${r}Shape[1] * stride1;`;if(g===l&&p==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${y}
        ${v}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${m}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(g===o&&p==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${m}.0);
        return sampleTexture(${r}, uv);
      }
    `;const b=Go(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${y}
      ${v}
      ${w}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${m}, ${g}, index + ${b});
      return sampleTexture(${r}, uv);
    }
  `}function wU(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e[4],o=e[3]*s,a=e[2]*o,l=e[1]*a,{newShape:u,keptDims:d}=as(e);if(u.length<e.length){const v=Ha(n,u),w=["row","col","depth","depth2","depth3"];return`
      ${Ua(v)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${ja(w,d)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${a}, ${o}, ${s})) +
          depth3;
        ${Ga(n)}
      }
    `;const p=n.shapeInfo.flatOffset,f=n.shapeInfo.texShape,m=f[0],g=f[1];if(g===l&&p==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(g===s&&p==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;const y=Go(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${a} + depth * ${o} +
          depth2 * ${s} + depth3 + ${y};
      vec2 uv = uvFromFlat(${m}, ${g}, index);
      return sampleTexture(${t}, uv);
    }
  `}function bU(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:s,keptDims:o}=as(e);if(s.length<e.length){const w=Ha(n,s),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${Ua(w)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${ja(b,o)});
      }
    `}const a=e[5],l=e[4]*a,u=e[3]*l,d=e[2]*u,p=e[1]*d;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${p}, ${d}, ${u}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Ga(n)}
      }
    `;const f=n.shapeInfo.flatOffset,m=n.shapeInfo.texShape,g=m[0],y=m[1];if(y===p&&f==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${d}, ${u}, ${l}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${g}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(y===a&&f==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${g}.0);
        return sampleTexture(${t}, uv);
      }
    `;const v=Go(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${p} + col * ${d} + depth * ${u} +
          depth2 * ${l} + depth3 * ${a} + depth4 + ${v};
      vec2 uv = uvFromFlat(${g}, ${y}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Ga(n){const e=n.name,t=oe(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function SU(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,l=IN(n.shapeInfo.logicalShape,e.logicalShape),u=Je(a),d=a-o;let p;const f=["x","y","z","w","u","v"];o===0?p="":a<2&&l.length>=1?p="coords = 0;":p=l.map($=>`coords.${f[$+d]} = 0;`).join(`
`);let m="";a<2&&o>0?m="coords":m=n.shapeInfo.logicalShape.map(($,I)=>`coords.${f[I+d]}`).join(", ");let g="return outputValue;";const v=oe(n.shapeInfo.logicalShape)===1,b=oe(e.logicalShape)===1;if(o===1&&!v&&!b)g=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(v&&!b)a===1?g=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:g=`
        return vec4(outputValue.x);
      `;else if(l.length){const $=o-2,I=o-1;l.indexOf($)>-1&&l.indexOf(I)>-1?g="return vec4(outputValue.x);":l.indexOf($)>-1?g="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(I)>-1&&(g="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${u} coords = getOutputCoords();
      ${p}
      vec4 outputValue = get${r}(${m});
      ${g}
    }
  `}function $U(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=e.texShape,a=n.shapeInfo.texShape,l=n.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!n.shapeInfo.isUniform&&l===u&&n.shapeInfo.flatOffset==null&&Ze(a,o))return`
      float ${s}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const d=Je(u),p=IN(n.shapeInfo.logicalShape,e.logicalShape),f=u-l;let m;const g=["x","y","z","w","u","v"];l===0?m="":u<2&&p.length>=1?m="coords = 0;":m=p.map(v=>`coords.${g[v+f]} = 0;`).join(`
`);let y="";return u<2&&l>0?y="coords":y=n.shapeInfo.logicalShape.map((v,w)=>`coords.${g[w+f]}`).join(", "),`
    float ${s}() {
      ${d} coords = getOutputCoords();
      ${m}
      return get${r}(${y});
    }
  `}function Je(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function t0(n,e,t){const{newShape:r,keptDims:s}=as(e),o=e.length,a=n&&o===3&&e[0]===1,l=a?e.slice(1):r,u=!n&&o>1&&!Ze(e,t)&&r.length<o||a;return{useSqueezeShape:u,uniformShape:u?l:e,keptDims:s}}function Ha(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function ja(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n,e,t,r){const s=t.map((p,f)=>{const m={logicalShape:p.shape,texShape:p.isUniform?null:p.texData.texShape,isUniform:p.isUniform,isPacked:p.isUniform?!1:p.texData.isPacked,flatOffset:null};return p.texData!=null&&p.texData.slice!=null&&p.texData.slice.flatOffset>0&&(m.flatOffset=p.texData.slice.flatOffset),{name:e.variableNames[f],shapeInfo:m}}),o=s.map(p=>p.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=WW(s,a,e),u=yW(n.gl,l),d=n.createProgram(u);return J().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:l,webGLProgram:d,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(d),Object.assign({program:e,fragmentShader:u,source:l,webGLProgram:d,inShapeInfos:o,outShapeInfo:a},RN(n,e,d)))}function RN(n,e,t){const r=[],s=[];let o,a,l,u=null,d=null;d=n.getUniformLocation(t,"NAN",!1),J().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(t,"INFINITY",!1));const p=!1;for(const f of e.variableNames){const m={name:f,uniform:n.getUniformLocation(t,f,p),offset:n.getUniformLocation(t,`offset${f}`,p)};e.enableShapeUniforms&&(m.shape=n.getUniformLocation(t,`${f}Shape`,p),m.texShape=n.getUniformLocation(t,`${f}TexShape`,p)),r.push(m)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",p),l=n.getUniformLocation(t,"outShapeStrides",p),a=n.getUniformLocation(t,"outTexShape",p)),e.customUniforms)for(const f of e.customUniforms)s.push(n.getUniformLocation(t,f.name,p));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:d,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:a}}function Bw(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const s=t.logicalShape,o=e[r],a=o.shape;if(!Ze(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(t.isUniform&&o.isUniform)return;const l=t.texShape,u=o.isUniform?null:o.texData.texShape;if(!Ze(l,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${l} and ${u} must match`)})}function NU(n,e,t,r,s){e.program.enableShapeUniforms||(Bw(e.inShapeInfos,t),Bw([e.outShapeInfo],[r]));const o=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):n.setOutputMatrixTexture(o.texture,a[0],a[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),J().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let u=0;u<t.length;++u){const d=t[u],{uniform:p,offset:f,shape:m,texShape:g}=e.variablesLocations[u];if(m){const{uniformShape:y}=t0(e.program.packedInputs,d.shape,d.texData.texShape);switch(y.length){case 1:n.gl.uniform1iv(m,new Int32Array(y));break;case 2:n.gl.uniform2iv(m,new Int32Array(y));break;case 3:n.gl.uniform3iv(m,new Int32Array(y));break;case 4:n.gl.uniform4iv(m,new Int32Array(y));break}}if(g&&n.gl.uniform2i(g,d.texData.texShape[0],d.texData.texShape[1]),p!=null){if(d.isUniform){if(oe(d.shape)<2)n.gl.uniform1f(p,d.uniformValues[0]);else{let y=d.uniformValues;y instanceof Float32Array||(y=new Float32Array(y)),n.gl.uniform1fv(p,y)}continue}d.texData.slice!=null&&f!=null&&n.gl.uniform1i(f,d.texData.slice.flatOffset),n.setInputMatrixTexture(d.texData.texture.texture,p,u)}}const l=e.outShapeLocation;if(l)switch(r.shape.length){case 1:n.gl.uniform1iv(l,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(l,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(l,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(l,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const u=Te(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s)for(let u=0;u<e.program.customUniforms.length;++u){const d=e.program.customUniforms[u],p=e.customUniformLocations[u],f=s[u];if(d.type==="float")n.gl.uniform1fv(p,f);else if(d.type==="vec2")n.gl.uniform2fv(p,f);else if(d.type==="vec3")n.gl.uniform3fv(p,f);else if(d.type==="vec4")n.gl.uniform4fv(p,f);else if(d.type==="int")n.gl.uniform1iv(p,f);else if(d.type==="ivec2")n.gl.uniform2iv(p,f);else if(d.type==="ivec3")n.gl.uniform3iv(p,f);else if(d.type==="ivec4")n.gl.uniform4iv(p,f);else throw Error(`uniform type ${d.type} is not supported yet.`)}n.executeProgram()}function kU(n,e,t){let r="";e.concat(t).forEach(a=>{const l=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const u=a.texData.texShape,{useSqueezeShape:d,uniformShape:p,keptDims:f}=t0(n.packedInputs,a.shape,u);let m="",g="",y="";if(p.length===1&&n.packedInputs){const T=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];m=`${T[0]>1}_${T[1]>1}`}else if(p.length===2&&!n.packedInputs)g=`${p[0]>1}_${p[1]>1}`;else if(p.length>2&&!n.packedInputs){const T=Te(p);y=`${T[0]===u[1]}_${T[T.length-1]===u[1]}`}const v=a.shape.length,w=p.length===2&&Ze(a.shape,u),b=oe(a.shape)===1,$=Do(a.shape,t.shape),I=!n.packedInputs&&v===t.shape.length&&Ze(u,t.texData.texShape),k=n.packedInputs||p.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${v}_${I}_${d?f:""}_${p.length}_${b}_${$}_${w}_${m}_${g}_${y}_${k}_${l}`}else{const u=a.isUniform?"uniform":a.texData.texShape;r+=`${a.shape}_${u}_${l}`}});const s=n.userCode;let o=n.constructor.name;return o+="_"+r+"_"+s+`${J().getNumber("WEBGL_VERSION")}`,o}function Jt(n){return J().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IU{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=rl.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=dn();this.outputShape=e,this.enableShapeUniforms=Jt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qf(["r","c","d"],e):Uo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=rl.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=dn();this.outputShape=e,this.enableShapeUniforms=Jt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Qf(["r","c","d"],e):Uo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EU{constructor(e){this.variableNames=["A"],this.outTexUsage=Wn.DOWNLOAD;const t=dn();this.outputShape=e,this.userCode=`
      ${kN}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Wn.DOWNLOAD;const t=dn();this.outputShape=e,this.userCode=`
      ${kN}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _U={R:0,G:1,B:2,A:3};class Mw{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=dn();this.outputShape=e,this.enableShapeUniforms=Jt(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let a="";for(let l=0;l<r.length;l++){const u=r[l];a+=`
          if(offset == ${l}) {
            result = values[${_U[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?e0():Jx(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${a}
        }
        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OU{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=dn();this.outputShape=e,this.enableShapeUniforms=Jt(this.outputShape.length);let s="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let l=0;l<=1;l++){const u=a*2+l;s+=`
          localCoords = coords;
          if(localCoords[2] + ${l} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${l};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?e0():Jx(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(n){const e=dn(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return gW(n,t)}function AU(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return bW(n,e)}function FU(n){const e=new Uint16Array([0,1,2,2,1,3]);return SW(n,e)}function Tu(n,e,t,r,s,o){CW(e,t);const a=$W(n),l=n.TEXTURE_2D;return we(n,()=>n.bindTexture(l,a)),we(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),we(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),we(n,()=>n.texParameteri(l,n.TEXTURE_MIN_FILTER,n.NEAREST)),we(n,()=>n.texParameteri(l,n.TEXTURE_MAG_FILTER,n.NEAREST)),J().getNumber("WEBGL_VERSION")===1?we(n,()=>n.texImage2D(l,0,r,e,t,0,s,o,null)):we(n,()=>n.texStorage2D(l,1,r,e,t)),we(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function _N(n){return n.internalFormatFloat}function PU(n,e,t,r){const[s,o]=ku(e,t);return Tu(n,s,o,_N(r),r.textureFormatFloat,n.FLOAT)}function ON(n){return n.internalFormatHalfFloat}function LU(n,e,t,r){const[s,o]=ku(e,t);return Tu(n,s,o,ON(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function DN(n){return n.downloadTextureFormat}function VU(n,e,t,r){const[s,o]=ku(e,t);return Tu(n,s,o,DN(r),n.RGBA,n.UNSIGNED_BYTE)}function AN(n){return n.internalFormatPackedFloat}function BU(n,e,t,r){const[s,o]=Wa(e,t);return Tu(n,s,o,AN(r),n.RGBA,n.FLOAT)}function FN(n){return n.internalFormatPackedHalfFloat}function MU(n,e,t,r){const[s,o]=Wa(e,t);return Tu(n,s,o,FN(r),n.RGBA,r.textureTypeHalfFloat)}function zU(n,e,t){return we(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Pw(n,e,"clipSpacePos",t,3,20,0)&&Pw(n,e,"uv",t,2,20,12)}function WU(n,e,t,r,s,o){we(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,l,u;s instanceof Uint8Array?(a=new Uint8Array(t*r*4),l=n.UNSIGNED_BYTE,u=n.RGBA):(a=new Float32Array(t*r*4),l=n.FLOAT,u=o.internalFormatPackedFloat),a.set(s),J().getNumber("WEBGL_VERSION")===2?we(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,l,a)):we(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,t,r,0,n.RGBA,l,a)),we(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function UU(n,e,t){we(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?J().getNumber("WEBGL_VERSION")===2?we(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):we(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):J().getNumber("WEBGL_VERSION")===2?we(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):we(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),we(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function GU(n,e,t,r){const s=n.createBuffer();we(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,s));const l=4*4*e*t;return we(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,l,n.STREAM_READ)),we(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),we(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),s}function HU(n,e,t){const r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function jU(n,e,t,r){const[s,o]=ku(e,t),a=4,l=new Uint8Array(uW(e*t,a));return we(n,()=>n.readPixels(0,0,s,o,r.downloadTextureFormat,n.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function qU(n,e,t,r,s,o,a,l){const u=n,d=new Float32Array(cW(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,d),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),d}function KU(n,e,t){const r=new Float32Array(e*t*4);return we(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ug{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=J().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,aW(t,e)):this.gl=wr(t),e=this.gl,J().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>we(o,()=>o.createVertexArray()),this.bindVertexArray=a=>we(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>we(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>we(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>we(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>we(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>we(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>we(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),J().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Gc(this.gl,o),er(this.gl,a))this.textureHalfFloatExtension=Gc(this.gl,a);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),er(this.gl,s))this.colorBufferHalfFloatExtension=Gc(this.gl,s);else if(J().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",er(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(er(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=AU(this.gl),this.indexBuffer=FU(this.gl),this.framebuffer=NW(this.gl),this.textureConfig=Zx(this.gl,this.textureHalfFloatExtension)}get debug(){return J().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;we(e,()=>e.finish()),we(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),we(e,()=>e.deleteFramebuffer(this.framebuffer)),we(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),we(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),we(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),PU(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),LU(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),VU(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),UU(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,s){this.throwIfDisposed(),WU(this.gl,e,t,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),MU(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),BU(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Lw(this.gl,this.framebuffer),this.outputTexture=null),we(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>jU(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,s,o,a){return qU(this.gl,e,t,r,s,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return HU(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const s=GU(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(J().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,o=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const a=s.clientWaitSync(o,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=o}else J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>KU(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=DU(t));const r=vW(t);we(t,()=>t.attachShader(r,this.vertexShader)),we(t,()=>t.attachShader(r,e)),wW(t,r);const s=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&og(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;we(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),zU(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(we(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&og(this.gl,this.program),we(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?IW(this.gl,e,t):TW(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),we(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),EW(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[s,o]=Wa(t,r);this.setOutputMatrixTextureDriver(e,s,o)}setOutputMatrixWriteRegion(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&og(this.gl,this.program),Hc(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}we(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),we(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Gc(this.gl,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await pg(()=>this.disposed||this.isQueryAvailable(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=XU(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in J().platform&&(r=J().platform.setTimeoutCustom.bind(J().platform)),pg(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),ag(this.gl,e,this.framebuffer),this.debug&&Hc(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(ag(this.gl,this.outputTexture,this.framebuffer),this.debug&&Hc(this.gl)):Lw(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const s=this.gl;ag(s,e,this.framebuffer),this.debug&&Hc(s),this.outputTexture=e,we(s,()=>s.viewport(0,0,t,r)),we(s,()=>s.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,s){this.throwIfDisposed(),we(this.gl,()=>this.gl.scissor(e,t,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function XU(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:YU,bincountImpl:PN,bincountReduceImpl:QU,bitwiseAndImpl:ZU,castImpl:JU,ceilImpl:eG,concatImpl:tG,equalImpl:nG,expImpl:rG,expm1Impl:sG,floorImpl:oG,gatherNdImpl:aG,gatherV2Impl:iG,greaterImpl:lG,greaterEqualImpl:uG,lessImpl:cG,lessEqualImpl:dG,linSpaceImpl:pG,logImpl:fG,maxImpl:hG,maximumImpl:mG,minimumImpl:gG,multiplyImpl:yG,negImpl:xG,notEqualImpl:vG,prodImpl:wG,raggedGatherImpl:bG,raggedRangeImpl:SG,raggedTensorToTensorImpl:$G,rangeImpl:CG,rsqrtImpl:NG,scatterImpl:kG,sigmoidImpl:IG,simpleAbsImpl:LN,sliceImpl:TG,sparseFillEmptyRowsImpl:EG,sparseReshapeImpl:RG,sparseSegmentReductionImpl:VN,sqrtImpl:_G,staticRegexReplaceImpl:OG,stridedSliceImpl:DG,stringNGramsImpl:AG,stringSplitImpl:FG,stringToHashBucketFastImpl:PG,subImpl:LG,tileImpl:VG,topKImpl:BG,transposeImpl:n0,uniqueImpl:MG}=UL;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BN(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function ln(n,e){return e===1?[n]:BN(n,e)}function zG(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WG{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Jt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=ln("rc",this.rank),r=Je(this.rank),s=this.getOutOfBoundsCondition(t),o=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let o=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Jt(this.outputShape.length);let r="";for(let s=0;s<4;s++){let o="thisRC = rc;";s%2===1&&(o+="thisRC.z += 1;"),s>1&&(o+="thisRC.y += 1;"),r+=`
        ${o}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${UG(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?e0():Jx(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function UG(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?zW(["r","c","d"],"inputShape"):Uo(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GG{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){const s=Ww(t,r),o=Uw(e,s,r);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=zw(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const u=this.freeTextures[o].pop();return this.usedTextures[o].push(u),u}let l;return s===Mt.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Mt.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Mt.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Mt.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Mt.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(l),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),l}releaseTexture(e,t,r,s){if(this.freeTextures==null)return;const o=Ww(r,s),a=Uw(t,o,s);a in this.freeTextures||(this.freeTextures[a]=[]);const l=zw(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=J().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=l):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=l),this.numUsedTextures--;const d=this.usedTextures[a],p=d&&d.indexOf(e);if(p==null||p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");d[p]=d[d.length-1],d.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function HG(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function zw(n,e,t,r,s){const o=jG(e,r);let a;if(s){const[u,d]=Wa(n[0],n[1]);a=u*d}else{const[u,d]=ku(n[0],n[1]);a=u*d}const l=HG(t,o);return a*l}function jG(n,e){switch(n){case Mt.PACKED_2X2_FLOAT32:return AN(e);case Mt.PACKED_2X2_FLOAT16:return FN(e);case Mt.UNPACKED_FLOAT32:return _N(e);case Mt.UNPACKED_FLOAT16:return ON(e);case Mt.PACKED_4X1_UNSIGNED_BYTE:return DN(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function qG(n){return J().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Mt.PACKED_2X2_FLOAT32:Mt.UNPACKED_FLOAT32:n?Mt.PACKED_2X2_FLOAT16:Mt.UNPACKED_FLOAT16}function Ww(n,e){if(n===Wn.UPLOAD)return Mt.PACKED_2X2_FLOAT32;if(n===Wn.RENDER||n==null)return qG(e);if(n===Wn.DOWNLOAD||n===Wn.PIXELS)return Mt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Uw(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Er{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Jt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const sr="if (isnan(x)) return x;",KG="return x;",Gw="return abs(x);",XG="return (x >= 0.0) ? x : (exp(x) - 1.0);",YG=sr+`
  return (x < 0.0) ? 0.0 : x;
`,QG=sr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Os="return x;",ZG="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JG="return x;",eH=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,tH=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,nH=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,rH="return 1.0 / (1.0 + exp(-1.0 * x));";class Ps{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Jt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Jt(this.outputShape.length);const t=e.length,r=ln("rc",t),s=Je(t),o=zG(t,r),a=r.slice(-2),l=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${l}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oH=Lf,aH=1e-7,iH=1e-4,Kc={};function lH(n){return n in Kc||(Kc[n]={}),Kc[n]}const uH=J().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),cH=600;function dH(){return J().global.screen==null?1024:J().global.screen.height*J().global.screen.width*window.devicePixelRatio*cH/1024/1024}class Zf extends Dd{nextDataId(){return Zf.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!J().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof ug)t=e;else{const r=wr(J().getNumber("WEBGL_VERSION"),e);t=new ug(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=wr(J().getNumber("WEBGL_VERSION"));t=new ug(r),this.binaryCache=lH(J().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new GG(this.gpgpu),this.numMBBeforeWarning=dH(),this.texData=new Qg(this,fr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,s,o,a){const l=this.makeTensorInfo(t,r),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,o]},u.texShape=[s,o];const d=jc(t),p=new Mw(d,!1,a),f=this.runWebGLProgram(p,[l],r,[[s,o]]);return f.shape=t,u.texture=null,this.disposeIntermediateTensorInfo(l),f.dataId}write(e,t,r){if((J().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||J().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:r,values:e,usage:Wn.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,s,o){if(J().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:t,usage:Wn.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:o,slice:a,shape:l,isPacked:u}=t;if(a!=null){let m;u?m=new Ps(l,Os):m=new Er(l,Os);const g=this.runWebGLProgram(m,[{dataId:e,shape:l,dtype:s}],s),y=this.readSync(g.dataId);return this.disposeIntermediateTensorInfo(g),y}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const d=this.activeTimers!=null;let p;d&&(p=En());let f;if(s==="complex64"){const m=this.readSync(o.real.dataId),g=this.readSync(o.imag.dataId);f=ss(m,g)}else f=this.getValuesFromTexture(e);return d&&(this.downloadWaitMs+=En()-p),this.convertAndCacheOnCPU(e,f)}async read(e){if(this.pendingRead.has(e)){const y=this.pendingRead.get(e);return new Promise(v=>y.push(v))}const t=this.texData.get(e),{values:r,shape:s,slice:o,dtype:a,complexTensorInfos:l,isPacked:u}=t;if(o!=null){let y;u?y=new Ps(s,Os):y=new Er(s,Os);const v=this.runWebGLProgram(y,[{dataId:e,shape:s,dtype:a}],a),w=this.read(v.dataId);return this.disposeIntermediateTensorInfo(v),w}if(r!=null)return this.convertAndCacheOnCPU(e);if(J().getBool("DEBUG")&&!J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&J().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let d=null,p;if(a!=="complex64"&&J().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);const y=this.texData.get(p.dataId);d=this.gpgpu.createBufferFromTexture(y.texture.texture,...Uc(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let f;if(a==="complex64"){const y=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),v=y[0],w=y[1];f=ss(v,w)}else if(d==null)f=this.getValuesFromTexture(e);else{const y=oe(s);f=this.gpgpu.downloadFloat32MatrixFromBuffer(d,y)}if(p!=null&&this.disposeIntermediateTensorInfo(p),d!=null){const y=this.gpgpu.gl;we(y,()=>y.deleteBuffer(d))}const m=this.convertAndCacheOnCPU(e,f),g=this.pendingRead.get(e);return this.pendingRead.delete(e),g.forEach(y=>y(m)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&fr().removeDataId(e,this),this.pendingDeletes--),m}readToGPU(e,t={}){const r=this.texData.get(e),{values:s,shape:o,slice:a,dtype:l,isPacked:u,texture:d}=r;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let g;u?g=new Ps(o,Os):g=new Er(o,Os);const y=this.runWebGLProgram(g,[{dataId:e,shape:o,dtype:l}],l),v=this.readToGPU(y,t);return this.disposeIntermediateTensorInfo(y),v}if(d==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const p=this.decode(e,t.customTexShape),f=fr().makeTensorFromTensorInfo(p),m=this.texData.get(p.dataId);return Object.assign({tensorRef:f},m.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>ns(s));return Fe(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Fe(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!hW(r))throw J().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:s}=this.texData.get(e),o=oe(t);if(J().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const m=this.decode(e),g=this.texData.get(m.dataId),y=this.gpgpu.downloadMatrixFromPackedTexture(g.texture.texture,...Uc(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(m),y}const a=J().getBool("WEBGL_PACK")&&s===!0,l=a?jc(t):t,u=a?new RU(l):new EU(l),d=this.runWebGLProgram(u,[{shape:l,dtype:r,dataId:e}],"float32"),p=this.texData.get(d.dataId),f=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(d),f}timerAvailable(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=Or(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=Or(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);const l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(o);l.kernelMs=Sb(u),l.getExtraProfileInfo=()=>u.map((d,p)=>({name:a[p],ms:d})).map(d=>`${d.name}: ${d.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:En(),endMs:null}}endTimer(e){return J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=En(),e)}async getQueryTime(e){if(J().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:s,usage:o,isPacked:a,slice:l}=this.texData.get(e),u=l&&l.origDataId||e,d=this.dataRefCount.get(u);d>1?this.dataRefCount.set(u,d-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(t,s,o,a)));const p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=uH){return J().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&oe(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Mn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return oH(e.shape,t)}packedUnaryOp(e,t,r){const s=new Ps(e.shape,t),o=this.compileAndRun(s,[e],r);return fr().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=LN(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(J().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Gw,e.dtype);const t=new Er(e.shape,Gw),r=this.compileAndRun(t,[e]);return fr().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&Tr(r[0])){const o=r.map(a=>Rr(a));s=this.write(o,e,t)}else s=this.write(r,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,r){return fr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new sH(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new WG(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const r=[Pa(e.shape),...La(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},o=[Pa(t),...La(t)],a=new MN(o,r),l=!0,u=[r],d=this.runWebGLProgram(a,[s],e.dtype,u,l);return{dataId:d.dataId,shape:t,dtype:d.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:s,shape:o,dtype:a}=r;if(t!=null){const m=oe(o),g=t[0]*t[1]*4;D(m<=g,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const l=jc(o);let u;s?u=new TU(l):u=new IU(l);const d=!0,p=[t??Uc(l)],f=this.runWebGLProgram(u,[{shape:l,dtype:a,dataId:e}],a,p,d,t);return{dtype:a,shape:o,dataId:f.dataId}}runWebGLProgram(e,t,r,s,o=!1,a){const l=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(l.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===rl.DENSE){const b=a??Uc(e.outputShape);u.texShape=b.map($=>$*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),oe(l.shape)===0)return u.values=Ft(l.dtype,0),l;const d=[],p=t.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let $=this.texData.get(b.dataId);if($.texture==null){if(!e.packedInputs&&oe(b.shape)<=J().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:$.values};e.packedInputs&&($.isPacked=!0,$.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!$.isPacked!=!!e.packedInputs)b=$.isPacked?this.unpackTensor(b):this.packTensor(b),d.push(b),$=this.texData.get(b.dataId);else if($.isPacked&&!kd($.shape,b.shape)){const I=b,k=b.shape;b.shape=$.shape,b=this.packedReshape(b,k),d.push(b),$=this.texData.get(b.dataId),I.shape=k}return{shape:b.shape,texData:$,isUniform:!1}});this.uploadToGPU(l.dataId);const f={shape:l.shape,texData:u,isUniform:!1},m=kU(e,p,f),g=this.getAndSaveBinary(m,()=>CU(this.gpgpu,e,p,f)),y=this.activeTimers!=null;let v;y&&(v=this.startTimer()),J().get("ENGINE_COMPILE_ONLY")||NU(this.gpgpu,g,p,f,s),d.forEach(b=>this.disposeIntermediateTensorInfo(b)),y&&(v=this.endTimer(v),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(v)}));const w=J().getNumber("WEBGL_FLUSH_THRESHOLD");if(w>0){const b=En();b-this.lastGlFlushTime>w&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!J().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const b=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),b}return l}compileAndRun(e,t,r,s,o=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,s,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(J().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Ge(()=>{if(!J().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=J().getBool("DEBUG");J().set("DEBUG",!1);const t=this.abs(Be(1e-8)).dataSync()[0];if(J().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?aH:iH}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:s,values:o,texture:a,usage:l,isPacked:u}=t;if(a!=null)return;const d=this.activeTimers!=null;let p;d&&(p=En());let f=t.texShape;if(f==null&&(f=OW(r,u),t.texShape=f),o!=null){const m=jc(r);let g,y=f[1],v=f[0];const w=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!w)&&([y,v]=Wa(f[0],f[1])),u?g=new OU(m,w):g=new Mw(m,w);const b=w?[v,y]:f,$=this.makeTensorInfo(b,s),I=this.texData.get($.dataId);w?I.usage=Wn.PIXELS:I.usage=Wn.UPLOAD,I.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture($.dataId),y,v,o);const k=[[v,y]],O=this.runWebGLProgram(g,[$],s,k,!0),A=this.texData.get(O.dataId);t.texShape=A.texShape,t.isPacked=A.isPacked,t.usage=A.usage,J().get("ENGINE_COMPILE_ONLY")?this.disposeData(O.dataId):(t.texture=A.texture,t.values=null,this.texData.delete(O.dataId)),this.disposeIntermediateTensorInfo($),d&&(this.uploadWaitMs+=En()-p)}else{const m=this.acquireTexture(f,l,s,u);t.texture=m}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:s}=r;return t!=null&&(r.values=pH(t,s)),r.values}acquireTexture(e,t,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*zi(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(o){throw o}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await U2(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(NN(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:r,infLoc:s,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}=RN(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=o,e.outShapeLocation=a,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";const{texture:s,height:o,width:a,channels:l}=e,u=fr().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const d=u.writeTexture(s,t,r,o,a,l);return fr().makeTensorFromDataId(d,t,r,u)}}Zf.nextDataId=0;function pH(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gy()&&xy("webgl",()=>new Zf,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r0=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Lo{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=Ve(t,r),this.enableShapeUniforms=Jt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ho=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class qa{constructor(e,t,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ve(t,r);const o=this.outputShape.length;this.enableShapeUniforms=Jt(o);let a="";if(s)if(o===0||oe(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${Je(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=ln("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function On(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const fH={kernelName:Rl,backendName:"webgl",kernelFunc:On};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Js(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,o=t.makeTensorInfo(r.shape,"complex64"),a=t.texData.get(o.dataId),l=On({inputs:{x:r},backend:t}),u=On({inputs:{x:s},backend:t});return a.complexTensorInfos={real:l,imag:u},o}const hH={kernelName:Kd,backendName:"webgl",kernelFunc:Js};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zN="return (a < 0.) ? b * a : a;",WN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function mH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:o}=r,a=t.makeTensorInfo([],"float32",is(o,"float32")),l=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qa(WN,s.shape,a.shape):new Lo(zN,s.shape,a.shape),u=t.runWebGLProgram(l,[s,a],"float32");return t.disposeIntermediateTensorInfo(a),u}const gH={kernelName:$p,backendName:"webgl",kernelFunc:mH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UN="return (a < 0.) ? b * a : a;",GN=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function yH(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e,o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qa(GN,r.shape,s.shape):new Lo(UN,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],"float32")}const xH={kernelName:Wp,backendName:"webgl",kernelFunc:yH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ka="if (isnan(x)) return x;";function Me({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:s,backend:o})=>{const{x:a}=s,l=o,u=r||a.dtype;if(l.shouldExecuteOnCPU([a])&&t!=null){const f=l.texData.get(a.dataId),m=t(f.values,u);return l.makeTensorInfo(a.shape,u,m)}const d=J().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let p;return d?p=new Ps(a.shape,e):p=new Er(a.shape,n),l.runWebGLProgram(p,[a],u)}}function jt({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:a,backend:l})=>{const{a:u,b:d}=a,p=l;if(r&&u.dtype==="complex64"){const y=p.texData.get(u.dataId),v=p.texData.get(d.dataId),[w,b]=[[y.complexTensorInfos.real,v.complexTensorInfos.real],[y.complexTensorInfos.imag,v.complexTensorInfos.imag]].map(I=>{const[k,T]=I,O={dataId:k.dataId,dtype:k.dtype,shape:u.shape},A={dataId:T.dataId,dtype:T.dtype,shape:d.shape},V=new Lo(n,u.shape,d.shape);return p.runWebGLProgram(V,[O,A],mn(k.dtype,T.dtype))}),$=Js({inputs:{real:w,imag:b},backend:p});return p.disposeIntermediateTensorInfo(w),p.disposeIntermediateTensorInfo(b),$}const f=o||mn(u.dtype,d.dtype);if((u.dtype==="string"||d.dtype==="string"||p.shouldExecuteOnCPU([u,d]))&&s!=null){const y=p.texData.get(u.dataId).values,v=p.texData.get(d.dataId).values,w=u.dtype==="string"?os(y):y,b=u.dtype==="string"?os(v):v,[$,I]=s(u.shape,d.shape,w,b,f),k=p.makeTensorInfo(I,f),T=p.texData.get(k.dataId);return T.values=$,k}const m=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let g;return m?g=new qa(e,u.shape,d.shape,t):g=new Lo(n,u.shape,d.shape),p.runWebGLProgram(g,[u,d],f)}}function sl(n,e=!1){if(n==="linear")return e?JG:KG;if(n==="relu")return e?tH:YG;if(n==="elu")return e?eH:XG;if(n==="relu6")return e?nH:QG;if(n==="prelu")return e?GN:UN;if(n==="leakyrelu")return e?WN:zN;if(n==="sigmoid")return e?rH:ZG;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HN{constructor(e,t,r,s=!1,o=!1,a=!1,l=null,u=!1,d=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=Jt(this.outputShape.length);const p=s?e[1]:e[2],f=Math.ceil(p/2),m=s?"i * 2, rc.y":"rc.y, i * 2",g=o?"rc.z, i * 2":"i * 2, rc.z",y=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],v=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let w="",b="";l&&(u?w=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${l}
        }`:d?w=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${l}
        }`:w=`vec4 activation(vec4 x) {
          ${l}
        }`,b="result = activation(result);");const $=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha");let I="rc.x",k="rc.x";e[0]<t[0]?I=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(k=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${w}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${f}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${I};
        int batchB = ${k};
        for (int i = 0; i < ${f}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${g});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${y[0]} * ${v[0]});
          result += (${y[1]} * ${v[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${$}

        ${b}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class jw{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ve(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qw="return a * b;";function s0(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=mn(r.dtype,s.dtype);if(r.dtype==="complex64"){const l=t.texData.get(r.dataId),u=t.texData.get(s.dataId),d=new jw(Hw.REAL,r.shape,s.shape),p=new jw(Hw.IMAG,r.shape,s.shape),f=[{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],m=t.runWebGLProgram(d,f,"float32"),g=t.runWebGLProgram(p,f,"float32"),y=Js({inputs:{real:m,imag:g},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),y}if(t.shouldExecuteOnCPU([r,s])){const l=t.texData.get(r.dataId),u=t.texData.get(s.dataId),[d,p]=yG(r.shape,s.shape,l.values,u.values,o),f=t.makeTensorInfo(p,o),m=t.texData.get(f.dataId);return m.values=d,f}let a;return J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new qa(qw,r.shape,s.shape):a=new Lo(qw,r.shape,s.shape),t.runWebGLProgram(a,[r,s],o)}const vH={kernelName:Gl,backendName:"webgl",kernelFunc:s0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(n,e,t){const r=[Pa(n.shape),...La(n.shape)],s={dtype:n.dtype,shape:r,dataId:n.dataId},o=[Pa(e),...La(e)],a=new MN(o,r),l=!0,u=[r],d=t.runWebGLProgram(a,[s],n.dtype,u,l);return{dataId:d.dataId,shape:e,dtype:d.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ye(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:o}=r,a=t,l=oe(s.shape),u=Zg(o,l),d=oe(u);D(l===d,()=>`The new shape (${u}) has ${d} elements and the old shape (${s.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const p=a.texData.get(s.dataId);return p.isPacked&&!kd(s.shape,u)&&!(p.texture!==null&&kd(p.shape,u))?wH(s,u,a):(a.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype})}const bH={kernelName:Xp,backendName:"webgl",kernelFunc:ye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kw{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];const l=Math.floor(r/4)*4,u=r%4;let d="sumValue += dot(values, ones);";if(t!=null){const f=1/t;d=`sumValue += dot(values * ${To(f)?f.toPrecision(2):f}, ones);`}let p="";o%r>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${l};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${d}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${d}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${d}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SH{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];let l="0.0",u="";t==="prod"?l="1.0":t==="min"?(l="1.0 / 1e-20",u="min"):t==="max"&&(l="-1.0 / 1e-20",u="max");let d=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?d="sumValue":t==="prod"?d="prodValue":t==="all"?d="allValue":t==="any"&&(d="anyValue");const p=Math.floor(r/4)*4,f=r%4;let m=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,g="vec4";t==="all"?(l="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,g="bvec4"):t==="any"&&(l="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,g="bvec4");let y="";o%r>0&&(y=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${l};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${y}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${l});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${p};
        if (${f===1}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${f===2}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${f===3}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${d});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $H(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=Kf(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function jo(n,e,t,r){const s=$H(n.shape);let o=n;for(let a=0;a<s.length;a++){const{inSize:l,windowSize:u,outSize:d}=s[a];let p,f;t==="mean"?p=a===0?new Kw({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:d},l):new Kw({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:d}):p=new SH({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:d},t),f=o,o=r.runWebGLProgram(p,[o],e),f.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(f)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CH{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[t[a]];this.outputShape=r,this.rank=r.length;const s=Je(this.rank),o=NH(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function NH(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<n.length;s++)r[n[s]]=t[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kH{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let p=0;p<r.length;p++)r[p]=e[t[p]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=Je(this.rank),o=BN("rc",this.rank),a=new Array(this.rank);for(let p=0;p<t.length;p++)a[t[p]]=o[p];const l=`vec2(${a.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${r[this.rank-1]}`,d=`getChannel(getA(${a.join()}), ${l})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${d};
      if(${u}) {
        result[1] = ${d};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${d};
        if(${u}) {
          result[3] = ${d};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jf(n,e,t){const r=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new kH(n.shape,e):new CH(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(n,e,t,r){const s=e,o=n.shape.length,a=ze(s,n.shape);let l=a;const u=bt(l,o),d=u!=null;let p=n;d&&(p=Jf(n,u,r),l=St(l.length,o)),Ht("sum",l,o);const[f,m]=Gt(p.shape,l);let g=f;t&&(g=Et(f,a));const y=oe(m),w=oe(n.shape)/y,b=ye({inputs:{x:p},attrs:{shape:[w,y]},backend:r}),$=kf(n.dtype),I=jo(b,$,"sum",r),k=ye({inputs:{x:I},attrs:{shape:g},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(I),d&&r.disposeIntermediateTensorInfo(p),k}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eh(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r;return IH(s,o,a,t)}const TH={kernelName:sf,backendName:"webgl",kernelFunc:eh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{perm:o}=r,a=t,l=s.shape.length,u=new Array(l);for(let p=0;p<u.length;p++)u[p]=s.shape[o[p]];let d;if(a.shouldExecuteOnCPU([s])){const f=a.texData.get(s.dataId).values,m=n0(f,s.shape,s.dtype,o,u);d=a.makeTensorInfo(u,s.dtype);const g=a.texData.get(d.dataId);g.values=m}else d=Jf(s,o,a);return d}const EH={kernelName:wa,backendName:"webgl",kernelFunc:cn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jN=1e3;function Id({a:n,b:e,transposeA:t,transposeB:r,backend:s,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:l=0,activation:u=null}){const d=n.shape.length,p=e.shape.length,f=t?n.shape[d-2]:n.shape[d-1],m=r?e.shape[p-1]:e.shape[p-2],g=t?n.shape[d-1]:n.shape[d-2],y=r?e.shape[p-2]:e.shape[p-1],v=n.shape.slice(0,-2),w=e.shape.slice(0,-2),b=oe(v),$=oe(w),k=Ve(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([g,y]);D(f===m,()=>`Error in matMul: inner shapes (${f}) and (${m}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const T=t?[b,f,g]:[b,g,f],O=r?[$,y,m]:[$,m,y],A=ye({inputs:{x:n},backend:s,attrs:{shape:T}}),V=ye({inputs:{x:e},backend:s,attrs:{shape:O}}),P=[A,V],F=Math.max(b,$),E=t?A.shape[1]:A.shape[2],W=o!=null,j=a!=null,Y=u==="leakyrelu",Q=u!=null?sl(u,!0):null,Z=W||j||Y||Q!=null;let ne;if((g===1||y===1)&&E>jN&&Z===!1){let K=A,X=V;t&&(K=cn({inputs:{x:A},backend:s,attrs:{perm:[0,2,1]}}),P.push(K)),r&&(X=cn({inputs:{x:V},backend:s,attrs:{perm:[0,2,1]}}),P.push(X));const L=y!==1,H=y===1;let se=K;L&&(se=ye({inputs:{x:K},backend:s,attrs:{shape:[F,E,1]}}),P.push(se));const ae=y===1?2:1;let ie=X;H&&(ie=ye({inputs:{x:X},backend:s,attrs:{shape:[F,1,E]}}),P.push(ie));const ue=s0({inputs:{a:se,b:ie},backend:s});ne=eh({inputs:{x:ue},backend:s,attrs:{axis:ae,keepDims:!0}}),P.push(ue)}else{const K=mn(n.dtype,e.dtype),X=new HN(T,O,[F,g,y],t,r,W,Q,j,Y),L=[A,V];if(o!=null&&L.push(o),j&&L.push(a),Y){const H=s.makeTensorInfo([],"float32",is(l,"float32"));L.push(H),P.push(H)}ne=s.runWebGLProgram(X,L,K)}const U=ye({inputs:{x:ne},backend:s,attrs:{shape:k}});P.push(ne);for(const K of P)s.disposeIntermediateTensorInfo(K);return U}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RH(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o,bias:a,preluActivationWeights:l}=e,{transposeA:u,transposeB:d,activation:p,leakyreluAlpha:f}=r;return Id({a:s,b:o,transposeA:u,transposeB:d,backend:t,bias:a,preluActivationWeights:l,leakyreluAlpha:f,activation:p})}const _H={kernelName:Wi,backendName:"webgl",kernelFunc:RH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xw="return abs(x);";function OH(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const o=t.texData.get(r.dataId),a=LN(o.values);return t.makeTensorInfo(r.shape,r.dtype,a)}let s;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Ps(r.shape,Xw):s=new Er(r.shape,Xw),t.runWebGLProgram(s,[r],r.dtype)}const DH={kernelName:Pd,backendName:"webgl",kernelFunc:OH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AH=sr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,FH=Me({opSnippet:AH}),PH={kernelName:il,backendName:"webgl",kernelFunc:FH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LH=sr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,VH=Me({opSnippet:LH}),BH={kernelName:ll,backendName:"webgl",kernelFunc:VH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yw="return a + b;",MH=jt({opSnippet:Yw,packedOpSnippet:Yw,supportsComplex:!0,cpuKernelImpl:YU}),zH={kernelName:Va,backendName:"webgl",kernelFunc:MH};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WH{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`float v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UH{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`vec4 v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function id(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return On({inputs:{x:r[0]},backend:t});if(r.length>J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(r.length/2),d=id({inputs:r.slice(0,u),backend:t}),p=id({inputs:r.slice(u),backend:t});return id({inputs:[d,p],backend:t})}const s=r.map(u=>u.dtype).reduce((u,d)=>mn(u,d)),o=r.map(u=>u.shape),l=J().getBool("WEBGL_PACK")?new UH(r[0].shape,o):new WH(r[0].shape,o);return t.runWebGLProgram(l,r,s)}const GH={kernelName:Ld,backendName:"webgl",kernelFunc:id};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,l=s.shape.length,u=ze(o,s.shape);let d=u;const p=bt(d,l);let f=s;p!=null&&(f=cn({inputs:{x:s},backend:t,attrs:{perm:p}}),d=St(d.length,l)),Ht("all",d,l);const[m,g]=Gt(f.shape,d),y=oe(g),v=ye({inputs:{x:f},backend:t,attrs:{shape:[-1,y]}}),w=jo(v,v.dtype,"all",t);let b;if(a){const $=Et(m,u);b=ye({inputs:{x:w},backend:t,attrs:{shape:$}})}else b=ye({inputs:{x:w},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(w),p!=null&&t.disposeIntermediateTensorInfo(f),b}const jH={kernelName:Vd,backendName:"webgl",kernelFunc:HH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,l=s.shape.length,u=ze(o,s.shape);let d=u;const p=bt(d,l);let f=s;p!=null&&(f=cn({inputs:{x:s},backend:t,attrs:{perm:p}}),d=St(d.length,l)),Ht("any",d,l);const[m,g]=Gt(f.shape,d),y=oe(g),v=ye({inputs:{x:f},backend:t,attrs:{shape:[-1,y]}}),w=jo(v,v.dtype,"any",t);let b;if(a){const $=Et(m,u);b=ye({inputs:{x:w},backend:t,attrs:{shape:$}})}else b=ye({inputs:{x:w},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(w),p!=null&&t.disposeIntermediateTensorInfo(f),b}const KH={kernelName:Bd,backendName:"webgl",kernelFunc:qH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XH{constructor(e,t,r){this.variableNames=["A"];const{windowSize:s,batchSize:o,outSize:a}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const l=t==="max"?">":"<",u=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${l} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YH{constructor(e,t,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,D(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const l=this.outputShape,u=l.length,d=Je(u),p=ln("coords",u);let f,m;if(a===1){m=u+1;const V=Je(m);f=`
        ${V} sourceLocR = ${V}(${p.join()}, 0);
        ++${p[u-1]};
        ${V} sourceLocG = ${V}(${p.join()}, 0);
        ++${p[u-2]};
        ${V} sourceLocA = ${V}(${p.join()}, 0);
        --${p[u-1]};
        ${V} sourceLocB = ${V}(${p.join()}, 0);
        --${p[u-2]};`}else m=u,f=`
        ${d} sourceLocR = coords;
        ++${p[u-1]};
        ${d} sourceLocG = coords;
        ++${p[u-2]};
        ${d} sourceLocA = coords;
        --${p[u-1]};
        ${d} sourceLocB = coords;
        --${p[u-2]};`;const g=["x","y","z","w","u","v"].slice(0,m),y="."+g[m-1],v=g.map(V=>"int "+V),w=ln("sourceLocR",m-1).concat("inIdx.r"),b=ln("sourceLocG",m-1).concat("inIdx.g"),$=ln("sourceLocB",m-1).concat("inIdx.b"),I=ln("sourceLocA",m-1).concat("inIdx.a"),k=r==="max"?"greaterThan":"lessThan",T=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${$.join()}),
                             getBestIndicesAChannel(${I.join()})));`,O=`vec4(
            getAChannel(${w.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${$.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${I.join()}) : 0.)`,A=s?"":`
      float getBestIndicesAChannel(${v.join()}) {
        return getChannel(getBestIndicesA(${g.join()}),
                                          vec2(${g.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${v.join()}) {
        return getChannel(getA(${g.join()}),
                               vec2(${g.slice(-2).join()}));
      }
      ${A}
      void main() {
        ${d} coords = getOutputCoords();
        bool hasNextCol = ${p[u-1]} < ${l[u-1]-1};
        bool hasNextRow = ${p[u-2]} < ${l[u-2]-1};
        ${f}
        ivec4 srcIdx = ivec4(sourceLocR${y}, sourceLocG${y},
          sourceLocB${y}, sourceLocA${y}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${O};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${T}
          vec4 candidate = ${O};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${k}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(n,e,t,r=null){let s=e.shape[0],o=e.shape[1];r!=null&&(s=r.shape[0],o=r.shape[1]);const a=Kf(o),l={windowSize:a,inSize:o,batchSize:s,outSize:Math.ceil(o/a)},u=new XH(l,t,r==null),d=[e];r!=null&&d.push(r);const p=n.runWebGLProgram(u,d,"int32");if(p.shape[1]===1)return p;const f=qN(n,e,t,p);return n.disposeIntermediateTensorInfo(p),f}function KN(n,e,t,r=null){const s=r!=null?r.shape:e.shape,o=s[s.length-1],a=Kf(o),l=new YH(s,a,t,r==null),u=r==null?[e]:[e,r],d=n.runWebGLProgram(l,u,"int32");if(d.shape.length===e.shape.length){const p=KN(n,e,t,d);return n.disposeIntermediateTensorInfo(d),p}return d}function XN(n,e,t,r){const s=[t];if(Ht("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!J().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=n.texData.get(e.dataId),l=a!==null&&a.isPacked;let u=e;l&&(u=n.unpackTensor(e),o.push(u));const[d,p]=Gt(u.shape,s),f=oe(p),m=ye({inputs:{x:u},backend:n,attrs:{shape:[-1,f]}});o.push(m);const g=qN(n,m,r);o.push(g);const y=ye({inputs:{x:g},backend:n,attrs:{shape:d}});return o.forEach(v=>n.disposeIntermediateTensorInfo(v)),y}return KN(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=ze(o,s.shape);const l=bt(a,s.shape.length);let u=s;const d=[];l!=null&&(u=cn({inputs:{x:s},backend:t,attrs:{perm:l}}),d.push(u),a=St(a.length,u.shape.length)),Ht("argMax",[a[0]],u.shape.length);const p=XN(t,u,a[0],"max");return d.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const ZH={kernelName:Md,backendName:"webgl",kernelFunc:QH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JH(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let a=ze(o,s.shape);const l=bt(a,s.shape.length);let u=s;const d=[];l!=null&&(u=cn({inputs:{x:s},backend:t,attrs:{perm:l}}),d.push(u),a=St(a.length,u.shape.length)),Ht("argMin",[a[0]],u.shape.length);const p=XN(t,u,a[0],"min");return d.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const ej={kernelName:zd,backendName:"webgl",kernelFunc:JH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tj=sr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,nj=Me({opSnippet:tj}),rj={kernelName:ul,backendName:"webgl",kernelFunc:nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj=sr+"return log(x + sqrt(x * x + 1.0));",oj=Me({opSnippet:sj}),aj={kernelName:cl,backendName:"webgl",kernelFunc:oj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij=sr+`
  return atan(x);
`,lj=Me({opSnippet:ij}),uj={kernelName:dl,backendName:"webgl",kernelFunc:lj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj=r0+`
  return atan(a, b);
`,dj=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ho+`
  return result;
`,pj=jt({opSnippet:cj,packedOpSnippet:dj}),fj={kernelName:fl,backendName:"webgl",kernelFunc:pj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hj=sr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,mj=Me({opSnippet:hj}),gj={kernelName:pl,backendName:"webgl",kernelFunc:mj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ol{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,l=e.strideHeight,u=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const v=t==="avg",w=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let $="0.0";if(v||($="-1.0 / 1e-20"),r){const V=">=";this.userCode=`
        const ivec2 strides = ivec2(${l}, ${u});
        const ivec2 pads = ivec2(${g}, ${y});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${f};
              wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${V} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?o?w:b:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / max(count, 1.0)");const T=Math.floor(a/4)*4,O=a%4,A=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${g}, ${y});
      const float initializationValue = ${$};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${$});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${f};
            wR += ${d}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${T}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${A}
          }

          int xC = xCCorner + ${T};
          if (${O===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${O===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${A}
          } else if (${O===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${A}
          }
        }
        setOutput(${k});
      }
    `}}class o0{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,l=e.strideDepth,u=e.strideHeight,d=e.strideWidth,p=e.dilationDepth,f=e.dilationHeight,m=e.dilationWidth,g=e.effectiveFilterDepth,y=e.effectiveFilterHeight,v=e.effectiveFilterWidth,w=e.padInfo.front,b=e.padInfo.top,$=e.padInfo.left;this.outputShape=e.outShape;const I=t==="avg";let k="0.0";if(I||(k="-1.0 / 1e-20"),r){const F=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${l}, ${u}, ${d});
        const ivec3 pads = ivec3(${w}, ${b}, ${$});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${g};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${y};
                wR += ${f}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${v};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${F} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${y} * ${v} +
                      wR * ${v} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const T="max";let O=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(O="avgValue / max(count, 1.0)");const A=Math.floor(a/4)*4,V=a%4,P=`
      if (${I}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${T}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${l}, ${u}, ${d});
      const ivec3 pads = ivec3(${w}, ${b}, ${$});
      const float initializationValue = ${k};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${k});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${g};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${y};
            wR += ${f}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${A}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${P}
            }

            int xC = xCCorner + ${A};
            if (${V===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${V===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${P}
            } else if (${V===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${P}
            }
          }
        }
        setOutput(${O});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Iu(s,"avgPool");const{filterSize:o,strides:a,pad:l,dimRoundingMode:u}=r,d=1;D(Zt(a,d),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=nr(s.shape,o,a,d,l,u);if(p.filterWidth===1&&p.filterHeight===1&&Ze(p.inShape,p.outShape))return On({inputs:{x:s},backend:t});const f=new ol(p,"avg",!1);return t.runWebGLProgram(f,[s],"float32")}const xj={kernelName:Wd,backendName:"webgl",kernelFunc:yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:u,dataFormat:d}=r,p=[1,1,1],f=ls(s.shape,o,a,p,l,u,d),m=new o0(f,"avg",!1);return t.runWebGLProgram(m,[s],"float32")}const wj={kernelName:Ud,backendName:"webgl",kernelFunc:vj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bj{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=u-1-e.padInfo.top,f=d-1-e.padInfo.left,m=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${f});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${d};
            wC+= ${l}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Sj{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,p=e.dilationWidth,f=e.effectiveFilterDepth,m=e.effectiveFilterHeight,g=e.effectiveFilterWidth,y=f-1-e.padInfo.front,v=m-1-e.padInfo.top,w=g-1-e.padInfo.left,b=1/(t*r*s);this.userCode=`
      const ivec3 pads = ivec3(${y}, ${v}, ${w});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${d}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${g};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $j(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=r,f=[1,1,1],m=ls(a.shape,l,u,f,d,p),g=new Sj(m);return t.runWebGLProgram(g,[s],a.dtype)}const Cj={kernelName:sy,backendName:"webgl",kernelFunc:$j};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nj(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o;Iu([s,o],"avgPoolGrad");const{filterSize:l,strides:u,pad:d}=r,p=nr(a.shape,l,u,1,d),f=new bj(p);return t.runWebGLProgram(f,[s],a.dtype)}const kj={kernelName:ry,backendName:"webgl",kernelFunc:Nj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ij(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o}=e,{transposeA:a,transposeB:l}=r;return Id({a:s,b:o,transposeA:a,transposeB:l,backend:t})}const Tj={kernelName:Gd,backendName:"webgl",kernelFunc:Ij};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ej{constructor(e,t,r,s,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ve(e,t),Ve(e,r);let l="0.0";s!=null&&(Ve(e,s),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="1.0";o!=null&&(Ve(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${l};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rj{constructor(e,t,r,s,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ve(e,t),Ve(e,r);let l="vec4(0.0)";s!=null&&(Ve(e,s),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&(Ve(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${l};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _j=({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:s,variance:o,offset:a,scale:l}=n;D(s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(l==null||s.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);const d=[r,s,o];let p=null;a!=null&&(p=a.shape,d.push(a));let f=null;l!=null&&(f=l.shape,d.push(l));const m=J().getBool("WEBGL_PACK_NORMALIZATION")?new Rj(r.shape,s.shape,o.shape,p,f,u):new Ej(r.shape,s.shape,o.shape,p,f,u);return e.runWebGLProgram(m,d,d[0].dtype)},Oj={kernelName:xp,backendName:"webgl",kernelFunc:_j};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dj{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Je(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=Aj(this.rank);let s;const o=e.map((a,l)=>`sourceLoc.${Fg[l]} = start[${l}] + coords.${Fg[l]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const Fg=["x","y","z","w","u","v"];function Aj(n){if(n===1)return"sourceLoc";if(n<=6)return Fg.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fj{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Je(this.rank),r=ln("coords",this.rank),s=ln("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${o})`,l=`
      result.x = ${a};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,d=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,f)=>`start[${f}]`).join()});`:e.map((p,f)=>`${s[f]} = ${r[f]} + start[${f}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${d}
        vec4 result = vec4(0.);
        ${l}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(n,e,t,r){const s=r.texData.get(n.dataId),o=r.makeTensorInfo(t,n.dtype),a=r.texData.get(o.dataId);Object.assign(a,s),a.refCount=1,a.shape=t,a.dtype=n.dtype;let l=vx(e,Te(n.shape));s.slice&&(l+=s.slice.flatOffset),a.slice={flatOffset:l,origDataId:s.slice&&s.slice.origDataId||n.dataId};const u=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,u+1),o}function Xa(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,size:a}=r,[l,u]=wx(s,o,a);if(gx(s,l,u),oe(u)===0)return t.makeTensorInfo(u,s.dtype,[]);if(t.shouldExecuteOnCPU([s])||s.dtype==="string"){const f=t.texData.get(s.dataId),m=TG(f.values,l,u,s.shape,s.dtype);return t.makeTensorInfo(u,s.dtype,m)}const{isPacked:d}=t.texData.get(s.dataId),p=xx(s.shape,l,u);if(d||!p){const f=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Fj(u):new Dj(u),m=[l];return t.runWebGLProgram(f,[s],s.dtype,m)}return t.uploadToGPU(s.dataId),Pj(s,l,u,t)}const Lj={kernelName:rf,backendName:"webgl",kernelFunc:Xa};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vj=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,crops:a}=r;D(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=o.reduce(($,I)=>$*I),u=Su(s.shape,o,l),d=$u(u.length,o.length),p=Cu(s.shape,o,l),f=Nx(a,o.length),m=kx(p,a,o.length),g=[],y=ye({inputs:{x:s},backend:t,attrs:{shape:u}}),v=cn({inputs:{x:y},backend:t,attrs:{perm:d}}),w=ye({inputs:{x:v},backend:t,attrs:{shape:p}}),b=Xa({inputs:{x:w},backend:t,attrs:{begin:f,size:m}});return g.push(y),g.push(v),g.push(w),g.forEach($=>t.disposeIntermediateTensorInfo($)),b},Bj={kernelName:Hd,backendName:"webgl",kernelFunc:Vj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mj(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a}=r,l=t.readSync(s.dataId),u=t.readSync(o.dataId),d=PN(l,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,d)}const zj={kernelName:jd,backendName:"webgl",kernelFunc:Mj};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wj=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Uj=`
  return float(int(a.r) & int(b.r));
`;function Gj(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=J().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([r,s])||a===1){const u=t.texData.get(r.dataId).values,d=t.texData.get(s.dataId).values,[p,f]=ZU(r.shape,s.shape,u,d,r.dtype),m=t.makeTensorInfo(f,r.dtype),g=t.texData.get(m.dataId);return g.values=p,m}let l;return o?l=new qa(Wj,r.shape,s.shape,!1):l=new Lo(Uj,r.shape,s.shape),t.runWebGLProgram(l,[r,s],r.dtype)}const Hj={kernelName:hl,backendName:"webgl",kernelFunc:Gj};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jj(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,o=t.readSync(r.dataId),a=t.readSync(s.dataId),l=Ve(Array.from(o),Array.from(a));return t.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const qj={kernelName:qd,backendName:"webgl",kernelFunc:jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kj="return float(a != b);",YN=jt({opSnippet:Kj,cpuKernelImpl:vG,dtype:"bool"}),Xj={kernelName:Hl,backendName:"webgl",kernelFunc:YN};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eu(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return On({inputs:{x:s.complexTensorInfos.real},backend:t})}const Yj={kernelName:Kp,backendName:"webgl",kernelFunc:Eu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qj="return float(int(x));";function Zj(n,e){const t=new Er(n.shape,Qj),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pg(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return On({inputs:{x:s},backend:t});const a=Us(s.shape),l=Pg({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),u=Js({inputs:{real:l,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(l),u}if(s.dtype==="complex64"){const a=Eu({inputs:{input:s},backend:t}),l=Pg({inputs:{x:a},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(a),l}if(!Jg(s.dtype,o)){const a=On({inputs:{x:s},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(t.shouldExecuteOnCPU([s])){const a=t.texData.get(s.dataId).values,[l,u,d]=JU(a,s.shape,s.dtype,o);return t.makeTensorInfo(l,u,d)}if(o==="int32")return Zj(s,t);if(o==="bool"){const a=t.makeTensorInfo([],"bool",Ft("bool",1)),u=YN({inputs:{a:s,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const Jj={kernelName:ml,backendName:"webgl",kernelFunc:Pg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qw="return ceil(x);",e6=Me({opSnippet:Qw,packedOpSnippet:Qw,cpuKernelImpl:eG}),t6={kernelName:gl,backendName:"webgl",kernelFunc:e6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n6{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r6{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{clipValueMin:o,clipValueMax:a}=r;let l;J().getBool("WEBGL_PACK_CLIP")?l=new r6(s.shape):l=new n6(s.shape);const u=[[o],[a]];return t.runWebGLProgram(l,[s],s.dtype,u)}const o6={kernelName:yl,backendName:"webgl",kernelFunc:s6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a6{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zw(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function i6(n){const{inputs:e,backend:t}=n,{x:r}=e,s=t.texData.get(r.dataId),o=new a6(r.shape),a=[Zw(r,s.complexTensorInfos.real),Zw(r,s.complexTensorInfos.imag)];return t.runWebGLProgram(o,a,a[0].dtype)}const l6={kernelName:Xd,backendName:"webgl",kernelFunc:i6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u6{constructor(e){this.outputShape=[],this.outputShape=_r(e,1),this.variableNames=e.map((a,l)=>`T${l}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const l=t[a-1];r.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${l}));`)}const s=t.length,o=t[t.length-1];r.push(`else setOutput(getT${s}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c6{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=_r(e,t);const r=this.outputShape,s=r.length,o=Je(s),a=ln("coords",s),l=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((v,w)=>`T${w}`);const u=new Array(e.length-1);u[0]=e[0][t];for(let v=1;v<u.length;v++)u[v]=u[v-1]+e[v][t];const d=l[t],p=l.slice(-2),f=l.join();let m=`if (${d} < ${u[0]}) {
        return getChannel(
            getT0(${f}), vec2(${p.join()}));
        }`;for(let v=1;v<u.length;v++){const w=u[v-1];m+=`
        if (${d} < ${u[v]}  && ${d} >= ${u[v-1]}) {
          return getChannel(
            getT${v}(${Xc(l,d,w)}),
            vec2(${Xc(p,d,w)}));
        }`}const g=u.length,y=u[u.length-1];m+=`
        return getChannel(
          getT${g}(${Xc(l,d,y)}),
          vec2(${Xc(p,d,y)}));`,this.userCode=`
      float getValue(${l.map(v=>"int "+v)}) {
        ${m}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${r[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${r[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${r[s-2]} &&
            ${a[s-1]} < ${r[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function Xc(n,e,t){const r=n.indexOf(e);return n.map((o,a)=>a===r?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function th(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return On({inputs:{x:s.complexTensorInfos.imag},backend:t})}const d6={kernelName:Sp,backendName:"webgl",kernelFunc:th};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bi(n,e,t){const r=n[0].dtype;if(r==="complex64"){const g=n.map($=>Eu({inputs:{input:$},backend:t})),y=n.map($=>th({inputs:{input:$},backend:t})),v=Bi(g,e,t),w=Bi(y,e,t),b=Js({inputs:{real:v,imag:w},backend:t});return g.forEach($=>t.disposeIntermediateTensorInfo($)),y.forEach($=>t.disposeIntermediateTensorInfo($)),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(w),b}let s=t.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){const g=n.map(k=>{const O=[-1,oe(k.shape.slice(e))];return ye({inputs:{x:k},backend:t,attrs:{shape:O}})}),y=g.map(k=>({vals:t.readSync(k.dataId),shape:k.shape})),v=_r(g.map(k=>k.shape),1),w=g[0].shape[0]===1,b=tG(y,v,r,w),$=_r(n.map(k=>k.shape),e),I=t.makeTensorInfo($,r,b);return g.forEach(k=>t.disposeIntermediateTensorInfo(k)),I}const o=n.filter(g=>oe(g.shape)>0),a=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const g=a?new Er(n[0].shape,Os):new Ps(n[0].shape,Os);return t.runWebGLProgram(g,n,r)}const l=J().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>l){const g=[];for(let v=0;v<o.length;v+=l){const w=o.slice(v,v+l);g.push(Bi(w,e,t))}const y=Bi(g,e,t);for(const v of g)t.disposeIntermediateTensorInfo(v);return y}if(a){const g=new c6(o.map(y=>y.shape),e);return t.runWebGLProgram(g,o,r)}const{tensors2D:u,outShape:d}=p6(o,e,t),p=new u6(u.map(g=>g.shape)),f=t.runWebGLProgram(p,u,r);u.forEach(g=>t.disposeIntermediateTensorInfo(g));const m=ye({inputs:{x:f},attrs:{shape:d},backend:t});return t.disposeIntermediateTensorInfo(f),m}function p6(n,e,t){const r=_r(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>ye({inputs:{x:o},attrs:{shape:[-1,oe(o.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,o=ze(s,e[0].shape)[0],a=e.map(d=>d.shape);Sx(a,o);const l=_r(e.map(d=>d.shape),o);if(oe(l)===0)return t.makeTensorInfo(l,e[0].dtype,[]);const u=e.filter(d=>oe(d.shape)>0);return u.length===1?On({inputs:{x:u[0]},backend:t}):Bi(u,o,t)}const f6={kernelName:Yd,backendName:"webgl",kernelFunc:QN};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZN{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,d=e.strideWidth,p=e.dilationHeight,f=e.dilationWidth,m=e.filterHeight,g=e.filterWidth,y=Math.floor(e.inChannels/4)*4,v=e.inChannels%4,w=e.dataFormat==="channelsLast",b=w?1:2,$=w?2:3,I=w?3:1;let k="",T="";r&&(s?k=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?k=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:k=`
          float activation(float x) {
            ${r}
          }
        `,T="result = activation(result);");const O=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${k}

      const ivec2 strides = ivec2(${u}, ${d});
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${I}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${$}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${g}; wC++) {
            int xC = xCCorner + wC * ${f};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${y}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${w}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${v===1}) {

              if (${w}) {
                dotProd +=
                    getX(batch, xR, xC, ${y}) *
                    getW(wR, wC, ${y}, d2);
              } else {
                dotProd +=
                    getX(batch, ${y}, xR, xC) *
                    getW(wR, wC, ${y}, d2);
              }

            } else if (${v===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${y}, d2),
                getW(wR, wC, ${y} + 1, d2)
              );

              if (${w}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${y}),
                  getX(batch, xR, xC, ${y} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${y}, xR, xC),
                  getX(batch, ${y} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${v===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${y}, d2),
                getW(wR, wC, ${y} + 1, d2),
                getW(wR, wC, ${y} + 2, d2)
              );

              if (${w}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${y}),
                  getX(batch, xR, xC, ${y} + 1),
                  getX(batch, xR, xC, ${y} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${y}, xR, xC),
                  getX(batch, ${y} + 1, xR, xC),
                  getX(batch, ${y} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${O}
        ${T}
        setOutput(result);
      }
    `}}class h6{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,d=e.dilationHeight,p=e.dilationWidth,f=e.filterDepth,m=e.filterHeight,g=e.filterWidth,y=Math.floor(e.inChannels/4)*4,v=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${l});
      const ivec3 pads = ivec3(${t}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${f}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${d};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${g}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${y}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${v===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${y}) *
                  getW(wF, wR, wC, ${y}, d2);
              } else if (${v===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${y}),
                  getX(batch, xF, xR, xC, ${y} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${y}, d2),
                  getW(wF, wR, wC, ${y} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${v===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${y}),
                  getX(batch, xF, xR, xC, ${y} + 1),
                  getX(batch, xF, xR, xC, ${y} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${y}, d2),
                  getW(wF, wR, wC, ${y} + 1, d2),
                  getW(wF, wR, wC, ${y} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JN{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Jt(this.outputShape.length);const a=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,f=p;let m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let w=0;w<p;w++)m+=`
           vec4 xTexelC${w*2};
           int xTexelC${w*2}Ready;
           vec4 xTexelC${w*2+1};
           int xTexelC${w*2+1}Ready;
           vec4 xC${w};`;m+=`
     for (int r = 0; r < ${d}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let w=0;w<p;w++)m+=`
           xTexelC${w*2} = vec4(0.0);
           xTexelC${w*2}Ready = 0;
           xTexelC${w*2+1} = vec4(0.0);
           xTexelC${w*2+1}Ready = 0;
           xC${w} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let w=0;w<(f+1)/2;w++){const b=w*2;if(m+=`
           xC = xCCorner + ${b*u};
           `,l===1){if(b<p&&(a%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,u===1&&b>0?m+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<p)){const $=a%2===0?Ad(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${$};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,u>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:m+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):$===1?m+=`
                     xC${b+1} = xTexelC${b};
                     `:m+=`
                     xCOffset = xC + ${$};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<p&&(a%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<p&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<p&&(m+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<p&&(m+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<p&&(m+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let g="",y="";r&&(s?g=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:o?g=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:g=`vec4 activation(vec4 x) {
           ${r}
         }`,y="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${g}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${v}
         ${y}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m6{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Jt(this.outputShape.length);const{dataFormat:r}=t,s=dn(),o=r==="channelsLast",a=o?1:2,l=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let d="";for(let p=0;p<=1;p++)for(let f=0;f<=1;f++)d+=`
          blockIndex = rc.z + ${f};
          pos = rc.y + ${p};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${l}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+f}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+f}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${d}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Td(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function ek({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const u=n.shape,d=r.texData.get(n.dataId),p=t.inChannels,f=u[0]*u[1]*u[2],m=t.outChannels,g=t.dataFormat==="channelsLast",y=!1,v=!1;let w;const b=[];if(o!=null){const k=Td(o.shape,g);k!=null&&(o=ye({inputs:{x:o},backend:r,attrs:{shape:k}}),b.push(o))}if(s!=null){const k=Td(s.shape,g);k!=null&&(s=ye({inputs:{x:s},backend:r,attrs:{shape:k}}),b.push(s))}if(!((f===1||m===1)&&p>jN)&&d.isPacked&&g&&d.texture!=null&&u[2]%2!==0&&Ze(d.shape.slice(-3),u.slice(-3))){const k=u[0]*u[1]*(u[2]+1),T={dataId:n.dataId,shape:[1,k,t.inChannels],dtype:n.dtype},O=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,D(kd(d.shape,T.shape),()=>`packed reshape ${d.shape} to ${T.shape} isn't free`);const A=ye({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});b.push(A);const V=Id({a:T,b:A,backend:r,transposeA:y,transposeB:v,bias:s,activation:l,preluActivationWeights:o,leakyreluAlpha:a}),P=r.texData.get(V.dataId);D(P.isPacked,()=>"batchMatMul result is expected to be packed"),d.shape=O,P.shape=t.outShape,w=On({inputs:{x:V},backend:r}),w.shape=t.outShape,b.push(V)}else{const k=t.outHeight*t.outWidth,T=ye({inputs:{x:n},backend:r,attrs:{shape:g?[t.batchSize,k,t.inChannels]:[t.batchSize,t.inChannels,k]}}),O=ye({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),A=Id({a:g?T:O,b:g?O:T,transposeA:!g,transposeB:v,backend:r,bias:s,activation:l,preluActivationWeights:o,leakyreluAlpha:a});w=ye({inputs:{x:A},backend:r,attrs:{shape:t.outShape}}),b.push(T),b.push(O),b.push(A)}for(const k of b)r.disposeIntermediateTensorInfo(k);return w}function tk({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const{filterWidth:u,filterHeight:d,inChannels:p,outWidth:f,outHeight:m,dataFormat:g}=t,y=g==="channelsLast",v=u*d*p,w=m*f,b=[t.batchSize,v,w],$=!0,I=!1,k=[];if(o!=null){const U=Td(o.shape,y);U!=null&&(o=ye({inputs:{x:o},backend:r,attrs:{shape:U}}),k.push(o))}if(s!=null){const U=Td(s.shape,y);U!=null&&(s=ye({inputs:{x:s},backend:r,attrs:{shape:U}}),k.push(s))}const T=ye({inputs:{x:e},backend:r,attrs:{shape:[1,v,oe(e.shape)/v]}});k.push(T);const O=new m6(b,t),A=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],V=r.runWebGLProgram(O,[n],"float32",A),P=ye({inputs:{x:V},backend:r,attrs:{shape:b}});k.push(V),k.push(P);const F=s!=null,E=o!=null,W=l==="leakyrelu",j=l?sl(l,!0):null,Y=new HN(y?P.shape:T.shape,y?T.shape:P.shape,y?[t.batchSize,w,t.outChannels]:[t.batchSize,t.outChannels,w],$,I,F,j,E,W),Q=y?[P,T]:[T,P];if(s&&Q.push(s),E&&Q.push(o),W){const U=r.makeTensorInfo([],"float32",is(a,"float32"));Q.push(U),k.push(U)}const Z=r.runWebGLProgram(Y,Q,"float32"),ne=ye({inputs:{x:Z},backend:r,attrs:{shape:t.outShape}});k.push(Z);for(const U of k)r.disposeIntermediateTensorInfo(U);return ne}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:l,dataFormat:u,dilations:d,dimRoundingMode:p}=r,f=us(u),m=Pt(s.shape,o.shape,a,d,l,p,!1,f);let g;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))g=ek({x:s,filter:o,convInfo:m,backend:t});else if(m.strideWidth<=2&&f==="channelsLast"&&J().getBool("WEBGL_EXP_CONV")){const v=new JN(m),w=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];g=t.runWebGLProgram(v,[s,o],"float32",w)}else if(J().getBool("WEBGL_CONV_IM2COL"))g=tk({x:s,filter:o,convInfo:m,backend:t});else{const v=new ZN(m);g=t.runWebGLProgram(v,[s,o],"float32")}const y=ye({inputs:{x:g},backend:t,attrs:{shape:m.outShape}});return t.disposeIntermediateTensorInfo(g),y}const y6={kernelName:Qd,backendName:"webgl",kernelFunc:g6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x6{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class v6{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",l=t-1-e.padInfo.top,u=r-1-e.padInfo.left,d=a?1:2,p=a?2:3,f=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${f}];

        ivec2 dyCorner = ivec2(coords[${d}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class w6{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,l=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${l};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class b6{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,l=e.strideWidth,u=t-1-e.padInfo.front,d=r-1-e.padInfo.top,p=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${d}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:l,dataFormat:u,dimRoundingMode:d,filterShape:p}=r,f=us(u),m=Pt(s.shape,p,a,1,l,d,!1,f),g=new x6(m);return t.runWebGLProgram(g,[s,o],"float32")}const $6={kernelName:Zd,backendName:"webgl",kernelFunc:S6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C6{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Jt(this.outputShape.length);const t=e.filterHeight,r=e.filterWidth,s=t-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N6(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{inputShape:a,strides:l,pad:u,dataFormat:d,dimRoundingMode:p}=r,f=us(d),m=Pt(a,o.shape,l,1,u,p,!1,f);if(J().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&f==="channelsLast"){const g=[[m.strideHeight,m.strideWidth]],y=new C6(m);return t.runWebGLProgram(y,[s,o],"float32",g)}else{const g=new v6(m);return t.runWebGLProgram(g,[s,o],"float32")}}const k6={kernelName:Jd,backendName:"webgl",kernelFunc:N6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:l,dilations:u}=r,d=Ks(s.shape,o.shape,a,u,l),p=new h6(d);return t.runWebGLProgram(p,[s,o],"float32")}const T6={kernelName:ep,backendName:"webgl",kernelFunc:I6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,pad:l,filterShape:u}=r,d=Ks(s.shape,u,a,1,l),p=new w6(d);return t.runWebGLProgram(p,[s,o],"float32")}const R6={kernelName:oy,backendName:"webgl",kernelFunc:E6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _6(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{pad:a,strides:l,inputShape:u}=r,d=Ks(u,o.shape,l,1,a),p=new b6(d);return t.runWebGLProgram(p,[s,o],"float32")}const O6={kernelName:tp,backendName:"webgl",kernelFunc:_6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6=Ka+`
  return cos(x);
`,A6=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Ho}
  return result;
`,F6=Me({opSnippet:D6,packedOpSnippet:A6}),P6={kernelName:xl,backendName:"webgl",kernelFunc:F6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L6=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,V6=Me({opSnippet:L6}),B6={kernelName:vl,backendName:"webgl",kernelFunc:V6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M6{constructor(e,t,r,s,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,l,u,d]=e,[p]=t,[f,m]=r;this.outputShape=[p,f,m,d];const g=s==="bilinear"?1:0,[y,v]=[`${l-1}.0`,`${u-1}.0`],[w,b,$]=f>1?[`${(l-1)/(f-1)}`,"(y2-y1) * height_ratio",`y1*${y} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${y}`],[I,k,T]=m>1?[`${(u-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${v} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${v}`];this.userCode=`
      const float height_ratio = float(${w});
      const float width_ratio = float(${I});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${k};

        float in_y = ${$};
        if( in_y < 0.0 || in_y > ${y} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${T};
        if( in_x < 0.0 || in_x > ${v} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${g} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:o,boxInd:a}=e,{cropSize:l,method:u,extrapolationValue:d}=r,p=new M6(s.shape,o.shape,l,u,d);return t.runWebGLProgram(p,[s,o,a],"float32")},W6={kernelName:sp,backendName:"webgl",kernelFunc:z6};var al;(function(n){n.Prod="*",n.Sum="+"})(al||(al={}));class Jw{constructor(e,t,r,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===al.Prod?"1.0":"0.0",l=r?a:`getX(${eb(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let d="",p="";r?(d=s?`end != ${u-1}`:"end != 0",p=s?"end + 1":"end - 1"):(d=s?`end + pow2 < ${u}`:"end >= pow2",p=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${Je(o)} coords = getOutputCoords();
        int end = ${tb(o,"coords",this.op)};
        float val = ${l};
        int pow2 = int(pow(2.0, index));
        if (${d}) {
          int idx = ${p};
          ${tb(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${eb(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function eb(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function tb(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n,e,t,r,s,o){const a=e.shape.length,l=bt([r],a);let u=e;l!=null&&(u=cn({inputs:{x:e},backend:t,attrs:{perm:l}}));const d=St(1,a)[0];if(d!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const p=u.shape[d];let f=On({inputs:{x:u},backend:t});for(let m=0;m<=Math.ceil(Math.log2(p))-1;m++){const g=new Jw(n,u.shape,!1,o),y=[[m]],v=f;f=t.runWebGLProgram(g,[f],f.dtype,y),t.disposeIntermediateTensorInfo(v)}if(s){const m=new Jw(n,u.shape,s,o),g=f;f=t.runWebGLProgram(m,[f],f.dtype),t.disposeIntermediateTensorInfo(g)}if(l!=null){const m=yu(l),g=cn({inputs:{x:f},backend:t,attrs:{perm:m}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(u),g}return f}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:l}=r;return nk(al.Prod,s,t,o,a,l)}const G6={kernelName:np,backendName:"webgl",kernelFunc:U6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:a,reverse:l}=r;return nk(al.Sum,s,t,o,a,l)}const j6={kernelName:rp,backendName:"webgl",kernelFunc:H6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:a,binaryOutput:l}=r;if(s.shape.length===1){const u=t.readSync(s.dataId),d=t.readSync(o.dataId),p=PN(u,d,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,p)}else if(s.shape.length===2){const u=t.bufferSync(s),d=t.bufferSync(o),p=QU(u,d,a,l);return t.makeTensorInfo(p.shape,o.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const K6={kernelName:op,backendName:"webgl",kernelFunc:q6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X6{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:o,dataFormat:a}=r,l=s.shape[0],u=a==="NHWC"?s.shape[1]:s.shape[2],d=a==="NHWC"?s.shape[2]:s.shape[3],p=a==="NHWC"?s.shape[3]:s.shape[1],f=u*o,m=d*o,g=p/(o*o),y=a==="NHWC"?[l,f,m,g]:[l,g,f,m],v=new X6(y,o,a);return t.runWebGLProgram(v,[s],s.dtype)}const Q6={kernelName:ap,backendName:"webgl",kernelFunc:Y6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rk{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Jt(this.outputShape.length);const a=e.filterHeight,l=e.filterWidth,u=e.outChannels/e.inChannels;let d="",p="";r&&(s?d=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?d=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:d=`
          float activation(float x) {
            ${r}
          }
        `,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${d}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${l}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${f}
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sk{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Jt(this.outputShape.length);const a=e.outChannels/e.inChannels,l=e.padInfo.left,u=e.strideWidth,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=f;let g=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<f;b++)g+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;g+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let b=0;b<f;b++)g+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;g+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(m+1)/2;b++){const $=b*2;if(g+=`
          xC = xCCorner + ${$*d};
          `,u===1){if($<f&&(l%2===1?(g+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }
              `,d===1&&$>0?g+=`
                xC${$} = vec4(xTexelC${$-2}.zw, xTexelC${$}.xy);
                `:g+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${$} = vec4(previous.zw, xTexelC${$}.xy);
                  } else {
                    xC${$} = vec4(0.0, 0.0, xTexelC${$}.xy);
                  }
                  `):g+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xC${$} = xTexelC${$};
                `,$+1<f)){const I=l%2===0?Ad(d):d;d%2===0&&l%2===1||d%2!==0&&l%2!==1?(g+=`
                  xCOffset = xC + imod(pads[1], 2) + ${I};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                    xTexelC${$+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${$+1}.zw = vec2(0.0);
                    }
                    xTexelC${$+1}Ready = 1;
                  }
                  `,d>1?g+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${$+1} = vec4(previous.zw, xTexelC${$+1}.xy);
                    } else {
                     xC${$+1} = vec4(0.0, 0.0, xTexelC${$+1}.xy);
                    }
                    `:g+=`
                    xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.xy);
                    `):I===1?g+=`
                    xC${$+1} = xTexelC${$};
                    `:g+=`
                    xCOffset = xC + ${I};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                      xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${$+1}.zw = vec2(0.0);
                      }
                      xTexelC${$+1}Ready = 1;
                    }

                    xC${$+1} = xTexelC${$+1};
                    `}}else $<f&&(l%2===1?(g+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.0);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
              `,$+1<f&&(g+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${$+1} = vec4(xTexelC${$+1}.xy, final.xy);
                `)):(g+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                  xTexelC${$} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${$}.zw = vec2(0.0);
                  }
                  xTexelC${$}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                  xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${$+1}.zw = vec2(0.);
                  }
                  xTexelC${$+1}Ready = 1;
                }

                xC${$} = vec4(
                  xTexelC${$}.xy, xTexelC${$+1}.xy);
              `,$+1<f&&(g+=`
                  xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
                `)));$<f&&(g+=`
            wTexel = getW(r, ${$}, d1, q);
            dotProd += xC${$} * vec4(wTexel.xz, wTexel.xz);
          `,$+1<f&&(g+=`
              wTexel = getW(r, ${$+1}, d1, q);
              dotProd += xC${$+1} * vec4(wTexel.xz, wTexel.xz);
            `))}g+=`
    }
  `,g+=`
      }
    `;let y="",v="";r&&(s?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:y=`vec4 activation(vec4 x) {
          ${r}
        }`,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${y}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${g}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${w}
        ${v}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z6(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:l,dilations:u,dimRoundingMode:d}=r;let p=u;p==null&&(p=[1,1]),D(Zt(a,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);const f=Pt(s.shape,o.shape,a,p,l,d,!0);let m;J().getBool("WEBGL_PACK_DEPTHWISECONV")&&f.strideWidth<=2&&f.outChannels/f.inChannels===1?m=new sk(f):m=new rk(f);const g=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]];return t.runWebGLProgram(m,[s,o],"float32",g)}const J6={kernelName:ip,backendName:"webgl",kernelFunc:Z6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class e5{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class t5{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,l=r-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:a,dilations:l,pad:u,dimRoundingMode:d,filterShape:p}=r,f=Pt(s.shape,p,a,l,u,d,!0),m=new e5(f);return t.runWebGLProgram(m,[s,o],"float32")}const r5={kernelName:lp,backendName:"webgl",kernelFunc:n5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s5(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{strides:a,dilations:l,pad:u,dimRoundingMode:d,inputShape:p}=r,f=Pt(p,o.shape,a,l,u,d,!0),m=new t5(f);return t.runWebGLProgram(m,[s,o],"float32")}const o5={kernelName:up,backendName:"webgl",kernelFunc:s5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a5{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i5(n){const{inputs:e,backend:t}=n,{x:r}=e,s=[...r.shape,...r.shape],o=oe(r.shape),a=ye({inputs:{x:r},backend:t,attrs:{shape:[o]}}),l=new a5(o),u=t.runWebGLProgram(l,[a],a.dtype),d=ye({inputs:{x:u},backend:t,attrs:{shape:s}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(u),d}const l5={kernelName:cp,backendName:"webgl",kernelFunc:i5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u5{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:s,strideHeight:o,strideWidth:a,filterHeight:l,filterWidth:u,dilationHeight:d,dilationWidth:p}=e,{top:f,left:m}=s;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${f}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${l}; h++) {
          int hIn = hBeg + h * ${d};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:a,pad:l,dilations:u}=r,d=hu(s.shape,o.shape,a,l,"NHWC",u);let p;const f=new u5(d);p=t.runWebGLProgram(f,[s,o],"float32");const m=ye({inputs:{x:p},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(p),m}const d5={kernelName:dp,backendName:"webgl",kernelFunc:c5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p5(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,o=e,{allDims:a,summedDims:l,idDims:u}=Px(s,o.length);Vx(a.length,u,o);const{path:d,steps:p}=Bx(l,u),f=p.length;let m=null,g=a.length;const y=[];for(let v=0;v<f;++v){for(const w of p[v]){const{permutationIndices:b,expandDims:$}=Lx(g,u[w]);let I;Mx(b)?I=o[w]:(I=cn({inputs:{x:o[w]},backend:t,attrs:{perm:b}}),y.push(I));const k=I.shape.slice();for(let T=0;T<$.length;++T)k.splice($[T],0,1);Ze(I.shape,k)||(I=ye({inputs:{x:I},backend:t,attrs:{shape:k}}),y.push(I)),m===null?m=I:(m=s0({inputs:{a:I,b:m},backend:t}),y.push(m))}v<f-1&&(d[v]>=0&&(m=eh({inputs:{x:m},backend:t,attrs:{axis:d[v]-(a.length-g),keepDims:!1}}),y.push(m)),g--)}for(const v of y)v!==m&&t.disposeIntermediateTensorInfo(v);return m}const f5={kernelName:fp,backendName:"webgl",kernelFunc:p5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5="return (x >= 0.0) ? x : (exp(x) - 1.0);",m5=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,g5=Me({opSnippet:h5,packedOpSnippet:m5}),y5={kernelName:bl,backendName:"webgl",kernelFunc:g5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x5="return (b >= 0.0) ? a : a * (b + 1.0);",v5=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,w5=n=>{const{inputs:e,backend:t}=n,{dy:r,y:s}=e,o=J().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new qa(v5,r.shape,s.shape):new Lo(x5,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],r.dtype)},b5={kernelName:ay,backendName:"webgl",kernelFunc:w5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S5=`
  return vec4(equal(a, b));
`,$5="return float(a == b);",C5=jt({opSnippet:$5,packedOpSnippet:S5,dtype:"bool",cpuKernelImpl:nG}),N5={kernelName:$l,backendName:"webgl",kernelFunc:C5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Ex};
  float a1 = ${Rx};
  float a2 = ${_x};
  float a3 = ${Ox};
  float a4 = ${Dx};
  float a5 = ${Ax};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,I5=Me({opSnippet:k5}),T5={kernelName:Sl,backendName:"webgl",kernelFunc:I5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5=Ka+`
  return exp(x);
`,R5=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ok=Me({opSnippet:E5,packedOpSnippet:R5,cpuKernelImpl:rG,dtype:"float32"}),_5={kernelName:Cl,backendName:"webgl",kernelFunc:ok};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lg(n){const{inputs:e,attrs:t,backend:r}=n,{dim:s}=t,{input:o}=e,a=o.shape.length,l=o.shape.slice();let u=s;return s<0&&(D(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),l.splice(u,0,1),ye({inputs:{x:o},backend:r,attrs:{shape:l}})}const O5={kernelName:hp,backendName:"webgl",kernelFunc:Lg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nb="return exp(x) - 1.0;",D5=Me({opSnippet:nb,packedOpSnippet:nb,cpuKernelImpl:sG}),A5={kernelName:Nl,backendName:"webgl",kernelFunc:D5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rb{constructor(e,t,r){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const o=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=r?`${s}.0`:"1.0";let l;if(e==="real")l="return real * expR - imag * expI;";else if(e==="imag")l="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${l}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ak(n,e,t){const r=t.texData.get(n.dataId),s=oe(n.shape),o=n.shape[n.shape.length-1],a=s/o,l=ye({inputs:{x:n},backend:t,attrs:{shape:[a,o]}}),u=l.shape,d=new rb("real",u,e),p=new rb("imag",u,e),f=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],m=t.runWebGLProgram(d,f,"float32"),g=t.runWebGLProgram(p,f,"float32"),y=Js({inputs:{real:m,imag:g},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g);const v=ye({inputs:{x:y},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(y),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(n){const{inputs:e,backend:t}=n,{input:r}=e;return ak(r,!1,t)}const P5={kernelName:mp,backendName:"webgl",kernelFunc:F5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L5{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ru(n){const{backend:e,attrs:t}=n,{shape:r,value:s}=t;let{dtype:o}=t;if(o=o||zo(s),o==="string"){const a=vt(o,oe(r));return a.fill(s),e.makeTensorInfo(r,o,a)}else{const a=new L5(r,s),l=[[s]];return e.runWebGLProgram(a,[],o,l)}}const V5={kernelName:gp,backendName:"webgl",kernelFunc:Ru};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B5{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5={kernelName:yp,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,s=new B5(t.shape);return r.runWebGLProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sb="return floor(x);",z5=Me({opSnippet:sb,packedOpSnippet:sb,cpuKernelImpl:oG}),W5={kernelName:kl,backendName:"webgl",kernelFunc:z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U5=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,G5=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,H5=jt({opSnippet:U5,packedOpSnippet:G5,dtype:"int32"}),j5={kernelName:Il,backendName:"webgl",kernelFunc:H5};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q5{constructor(e){this.variableNames=["A"];const t=dn(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K5{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=dn(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5={kernelName:fd,backendName:"webgl",kernelFunc:Y5};let ya,cg=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Y5(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:s}=e;const{numChannels:o}=r,a=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,l=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[u,d]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],p=[d,u],f=[d,u,o];if(l||a){const v=J().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(ya==null||v!==cg)&&(cg=v,ya=document.createElement("canvas").getContext("2d",{willReadFrequently:cg})),ya.canvas.width=u,ya.canvas.height=d,ya.drawImage(s,0,0,u,d),s=ya.canvas}const m=t.makeTensorInfo(p,"int32");t.texData.get(m.dataId).usage=Wn.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(m.dataId),s);const g=J().getBool("WEBGL_PACK")?new K5(f):new q5(f),y=t.runWebGLProgram(g,[m],"int32");return t.disposeData(m.dataId),y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:l}=e,{strides:u,pad:d,dataFormat:p,dilations:f,dimRoundingMode:m,activation:g,leakyreluAlpha:y}=r,v=us(p),w=Pt(s.shape,o.shape,u,f,d,m,!1,v);let b;const $=[],I=a!=null,k=l!=null,T=g==="leakyrelu",O=()=>{const V=[s,o],P=(F,E)=>{if(E==="NCHW"&&F.shape.length===1&&F.shape[0]!==1){const W=ye({inputs:{x:F},backend:t,attrs:{shape:[F.shape[0],1,1]}});return $.push(W),W}return F};if(I&&V.push(P(a,p)),k&&V.push(P(l,p)),T){const F=t.makeTensorInfo([],"float32",is(y,"float32"));V.push(F),$.push(F)}return V};if(w.filterHeight===1&&w.filterWidth===1&&w.dilationHeight===1&&w.dilationWidth===1&&w.strideHeight===1&&w.strideWidth===1&&(w.padInfo.type==="SAME"||w.padInfo.type==="VALID"))b=ek({x:s,filter:o,convInfo:w,backend:t,bias:a,activation:g,preluActivationWeights:l,leakyreluAlpha:y});else if(w.strideWidth<=2&&v==="channelsLast"&&J().getBool("WEBGL_EXP_CONV")){const V=g?sl(g,!0):null,P=new JN(w,I,V,k,T),F=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],E=O();b=t.runWebGLProgram(P,E,"float32",F)}else if(J().getBool("WEBGL_CONV_IM2COL"))b=tk({x:s,filter:o,convInfo:w,backend:t,bias:a,activation:g,preluActivationWeights:l,leakyreluAlpha:y});else{const V=g?sl(g,!1):null,P=new ZN(w,I,V,k,T),F=O();b=t.runWebGLProgram(P,F,"float32")}const A=ye({inputs:{x:b},backend:t,attrs:{shape:w.outShape}});return $.push(b),$.forEach(V=>t.disposeIntermediateTensorInfo(V)),A}const Z5={kernelName:Ui,backendName:"webgl",kernelFunc:Q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:a,preluActivationWeights:l}=e,{strides:u,pad:d,dilations:p,dimRoundingMode:f,activation:m,leakyreluAlpha:g}=r,y=[];let v=p;v==null&&(v=[1,1]),D(Zt(u,v),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${v}'`);const w=Pt(s.shape,o.shape,u,v,d,f,!0),b=J().getBool("WEBGL_PACK_DEPTHWISECONV")&&w.strideWidth<=2&&w.outChannels/w.inChannels===1,$=m?sl(m,b):null,I=[s,o],k=a!=null,T=l!=null,O=m==="leakyrelu";if(k&&I.push(a),T&&I.push(l),O){const F=t.makeTensorInfo([],"float32",is(g,"float32"));I.push(F),y.push(F)}let A;b?A=new sk(w,k,$,T,O):A=new rk(w,k,$,T,O);const V=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],P=t.runWebGLProgram(A,I,"float32",V);return y.forEach(F=>t.disposeIntermediateTensorInfo(F)),P}const e8={kernelName:Gi,backendName:"webgl",kernelFunc:J5};class t8{constructor(e,t,r,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const o=Je(r.length);let a=`
    int index;`;for(let l=0;l<this.sliceDim;l++)a+=`
          index = round(getIndices(coords[0], ${l}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[l]};
          flattenIndex += index * ${this.strides[l]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,o=s.shape,a=o[o.length-1],l=oe(r.shape),[u,d,p,f]=qf(r,s),m=ye({inputs:{x:s},backend:t,attrs:{shape:[d,a]}}),g=ye({inputs:{x:r},backend:t,attrs:{shape:[oe(r.shape)/p,p]}});if(t.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const b=t.readSync(s.dataId),$=t.bufferSync(r),I=aG(b,$,r.dtype,d,a,p,f,r.shape,l);return t.makeTensorInfo(u,r.dtype,I.values)}const y=new t8(a,f,[d,p],r.shape),v=t.runWebGLProgram(y,[g,m],g.dtype),w=ye({inputs:{x:v},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(v),w}const r8={kernelName:wp,backendName:"webgl",kernelFunc:n8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s8{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=Je(this.rank),s=o8(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function o8(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n.length;s++)s===2?r.push("index"):r.push(`${t[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ik(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:o}=e,{axis:a,batchDims:l}=r,u=ze(a,s.shape)[0];if(J().get("DEBUG")){const $=t.readSync(o.dataId),I=s.shape[u];for(let k=0;k<$.length;++k){const T=$[k];D(T<=I-1&&T>=0,()=>`GatherV2: the index value ${T} is not in [0, ${I-1}]`)}}const d=Wx(s,o,u,l),p=oe(o.shape),f=[],m=ye({inputs:{x:s},backend:t,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),g=ye({inputs:{x:o},backend:t,attrs:{shape:[d.batchSize,p/d.batchSize]}});f.push(m),f.push(g);const y=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize];if(t.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const $=t.bufferSync(g),I=t.bufferSync(m),k=iG(I,$,y);return f.forEach(T=>t.disposeIntermediateTensorInfo(T)),t.makeTensorInfo(d.outputShape,k.dtype,k.values)}const v=new s8(m.shape,y),w=t.runWebGLProgram(v,[m,g],m.dtype);f.push(w);const b=ye({inputs:{x:w},backend:t,attrs:{shape:d.outputShape}});return f.forEach($=>t.disposeIntermediateTensorInfo($)),b}const a8={kernelName:vp,backendName:"webgl",kernelFunc:ik};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i8="return float(a > b);",l8=`
  return vec4(greaterThan(a, b));
`,u8=jt({opSnippet:i8,packedOpSnippet:l8,cpuKernelImpl:lG,dtype:"bool"}),c8={kernelName:Tl,backendName:"webgl",kernelFunc:u8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d8="return float(a >= b);",p8=`
  return vec4(greaterThanEqual(a, b));
`,f8=jt({opSnippet:d8,packedOpSnippet:p8,dtype:"bool",cpuKernelImpl:uG}),h8={kernelName:El,backendName:"webgl",kernelFunc:f8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m8(n){const{inputs:e,backend:t}=n,{input:r}=e;return ak(r,!0,t)}const g8={kernelName:bp,backendName:"webgl",kernelFunc:m8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8="return float(!isnan(x) && !isinf(x));",x8=Me({opSnippet:y8,dtype:"bool"}),v8={kernelName:_l,backendName:"webgl",kernelFunc:x8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8="return float(isinf(x));",b8=Me({opSnippet:w8,dtype:"bool"}),S8={kernelName:Ol,backendName:"webgl",kernelFunc:b8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8="return float(isnan(x));",C8=Me({opSnippet:$8,dtype:"bool"}),N8={kernelName:Dl,backendName:"webgl",kernelFunc:C8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8="return float(a < b);",I8=`
  return vec4(lessThan(a, b));
`,T8=jt({opSnippet:k8,packedOpSnippet:I8,cpuKernelImpl:cG,dtype:"bool"}),E8={kernelName:Al,backendName:"webgl",kernelFunc:T8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R8="return float(a <= b);",_8=`
  return vec4(lessThanEqual(a, b));
`,O8=jt({opSnippet:R8,packedOpSnippet:_8,cpuKernelImpl:dG,dtype:"bool"}),D8={kernelName:Fl,backendName:"webgl",kernelFunc:O8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A8(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:o}=t,a=pG(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const F8={kernelName:Cp,backendName:"webgl",kernelFunc:A8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P8=Ka+`
  return x < 0.0 ? 0./0. : log(x);
`,L8=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,V8=Me({opSnippet:P8,packedOpSnippet:L8,cpuKernelImpl:fG}),B8={kernelName:Pl,backendName:"webgl",kernelFunc:V8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M8=Ka+`
  return log(1.0 + x);
`,z8=Me({opSnippet:M8}),W8={kernelName:Ll,backendName:"webgl",kernelFunc:z8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U8="return float(a >= 1.0 && b >= 1.0);",G8=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,H8=jt({opSnippet:U8,packedOpSnippet:G8,dtype:"bool"}),j8={kernelName:Vl,backendName:"webgl",kernelFunc:H8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q8="return float(!(x >= 1.0));",K8=Me({opSnippet:q8}),X8={kernelName:Bl,backendName:"webgl",kernelFunc:K8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y8="return float(a >= 1.0 || b >= 1.0);",Q8=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Z8=jt({opSnippet:Y8,packedOpSnippet:Q8,dtype:"bool"}),J8={kernelName:Ml,backendName:"webgl",kernelFunc:Z8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eq{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[];const a=t,l=e[3]-1;this.outputShape=e;let u;const d=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${d})`:o===1?u=`1.0/(${d})`:u=`exp(log(${d}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${l}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tq{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,l=e[3]-1;this.outputShape=e;let u;const d=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${d})`:o===1?u=`1.0/(${d})`:u=`exp(log(${d}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nq=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:o,bias:a,alpha:l,beta:u}=r,d=J().getBool("WEBGL_PACK_NORMALIZATION")?new tq(s.shape,o,a,l,u):new eq(s.shape,o,a,l,u);return t.runWebGLProgram(d,[s],s.dtype)},rq={kernelName:Np,backendName:"webgl",kernelFunc:nq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sq{constructor(e,t,r,s,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=s,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oq=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s,y:o,dy:a}=e,{depthRadius:l,bias:u,alpha:d,beta:p}=r,f=new sq(s.shape,l,u,d,p);return t.runWebGLProgram(f,[s,o,a],s.dtype)},aq={kernelName:iy,backendName:"webgl",kernelFunc:oq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iq(n,e,t,r){const s=oe(e),a=oe(n.shape)/s,l=ye({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=jo(l,n.dtype,"max",r),d=ye({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),d}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lk(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:o,keepDims:a}=r,l=s.shape.length,u=ze(o,s.shape);let d=u;const p=bt(d,l),f=p!=null,m=t.shouldExecuteOnCPU([s]);let g=s;if(f){if(m){const I=t.texData.get(g.dataId).values,k=new Array(l);for(let A=0;A<k.length;A++)k[A]=s.shape[p[A]];const T=n0(I,s.shape,s.dtype,p,k);g=t.makeTensorInfo(k,s.dtype);const O=t.texData.get(g.dataId);O.values=T}else g=Jf(s,p,t);d=St(d.length,l)}Ht("max",d,l);const[y,v]=Gt(g.shape,d);let w=y;a&&(w=Et(y,u));let b;if(m){const I=t.texData.get(g.dataId).values,k=hG(I,oe(v),w,s.dtype);b=t.makeTensorInfo(w,s.dtype);const T=t.texData.get(b.dataId);T.values=k}else b=iq(g,v,w,t);return f&&t.disposeIntermediateTensorInfo(g),b}const lq={kernelName:kp,backendName:"webgl",kernelFunc:lk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq=r0+`
  return max(a, b);
`,cq=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ho+`
  return result;
`,dq=jt({opSnippet:uq,packedOpSnippet:cq,cpuKernelImpl:mG}),pq={kernelName:zl,backendName:"webgl",kernelFunc:dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Iu(s,"maxPool");const{filterSize:o,strides:a,pad:l,dimRoundingMode:u}=r,d=1;D(Zt(a,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const p=nr(s.shape,o,a,d,l,u);if(p.filterWidth===1&&p.filterHeight===1&&Ze(p.inShape,p.outShape))return On({inputs:{x:s},backend:t});const f=new ol(p,"max",!1);return t.runWebGLProgram(f,[s],s.dtype)}const hq={kernelName:Ip,backendName:"webgl",kernelFunc:fq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:a,pad:l,dataFormat:u,dimRoundingMode:d}=r,p=[1,1,1],f=ls(s.shape,o,a,p,l,d,u),m=new o0(f,"max",!1);return t.runWebGLProgram(m,[s],s.dtype)}const gq={kernelName:Tp,backendName:"webgl",kernelFunc:mq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yq{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,l=o-1-e.padInfo.top,u=a-1-e.padInfo.left,d=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${d} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class xq{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=u-1-e.padInfo.front,m=d-1-e.padInfo.top,g=p-1-e.padInfo.left,y=u*d*p-1;this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${y} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${d} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vq(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,a=o,{filterSize:l,strides:u,pad:d,dimRoundingMode:p}=r,f=[1,1,1],m=ls(a.shape,l,u,f,d,p),g=new o0(m,"max",!0),y=t.runWebGLProgram(g,[a],a.dtype),v=new xq(m),w=t.runWebGLProgram(v,[s,y],a.dtype);return t.disposeIntermediateTensorInfo(y),w}const wq={kernelName:uy,backendName:"webgl",kernelFunc:vq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bq(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o,output:a}=e,l=o;Iu([o,a],"maxPoolGrad");const{filterSize:u,strides:d,pad:p,dimRoundingMode:f}=r,m=nr(l.shape,u,d,1,p,f),g=!0,y=new ol(m,"max",g),v=t.runWebGLProgram(y,[l],l.dtype),w=new yq(m),b=t.runWebGLProgram(w,[s,v],l.dtype);return t.disposeIntermediateTensorInfo(v),b}const Sq={kernelName:ly,backendName:"webgl",kernelFunc:bq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $q(n,e,t,r){let s=new ol(t,"max",!1);const o=r.runWebGLProgram(s,[n],"float32");s=new ol(t,"max",!0,!0,e);const a=r.runWebGLProgram(s,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq={kernelName:Ep,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:o,pad:a,includeBatchInIndex:l}=e,u=t;D(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const d=[1,1];D(Zt(o,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const p=nr(r.shape,s,o,d,a),[f,m]=$q(r,l,p,u);return[f,m]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nq(n,e,t,r){const s=oe(e),a=oe(n.shape)/s,l=ye({inputs:{x:n},attrs:{shape:[a,s]},backend:r}),u=jo(l,"float32","mean",r),d=ye({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(u),d}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kq={kernelName:Rp,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:s,axis:o}=e,a=t,l=r.shape.length,u=ze(o,r.shape);let d=u;const p=bt(d,l),f=p!=null,m=a.shouldExecuteOnCPU([r]),g=[];let y=r;if(f){if(m){const k=a.texData.get(y.dataId).values,T=new Array(l);for(let V=0;V<T.length;V++)T[V]=r.shape[p[V]];const O=n0(k,r.shape,r.dtype,p,T);y=a.makeTensorInfo(T,r.dtype);const A=a.texData.get(y.dataId);A.values=O}else y=Jf(r,p,a);g.push(y),d=St(d.length,l)}Ht("sum",d,l);const[v,w]=Gt(y.shape,d);let b=v;s&&(b=Et(v,u));const $=Nq(y,w,b,a);for(const I of g)a.disposeIntermediateTensorInfo(I);return $}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iq(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,l=s.shape.length,u=ze(o,s.shape);let d=u;const p=bt(d,l);let f=s;p!=null&&(f=cn({inputs:{x:s},backend:t,attrs:{perm:p}}),d=St(d.length,s.shape.length)),Ht("min",d,l);const[m,g]=Gt(f.shape,d),y=oe(g),v=ye({inputs:{x:f},backend:t,attrs:{shape:[-1,y]}}),w=jo(v,v.dtype,"min",t);let b;if(a){const $=Et(m,u);b=ye({inputs:{x:w},backend:t,attrs:{shape:$}})}else b=ye({inputs:{x:w},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(w),p!=null&&t.disposeIntermediateTensorInfo(f),b}const Tq={kernelName:_p,backendName:"webgl",kernelFunc:Iq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eq=r0+`
  return min(a, b);
`,Rq=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Ho+`
  return result;
`,_q=jt({opSnippet:Eq,packedOpSnippet:Rq,cpuKernelImpl:gG}),Oq={kernelName:Wl,backendName:"webgl",kernelFunc:_q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dq{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((p,f)=>p[0]+e[f]+p[1]);const s=e.length,o=Je(s),a=t.map(p=>p[0]).join(","),l=t.map((p,f)=>p[0]+e[f]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),d=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${d};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${d};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${l});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${d};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${d};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aq{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((y,v)=>y[0]+e[v]+y[1]);const s=e.length,o=Je(s),a=t.map(y=>y[0]).join(","),l=t.map((y,v)=>y[0]+e[v]).join(","),u=ln("rc",s),d=ln("source",s),p=`${u[s-1]} < ${this.outputShape[s-1]}`,f=s===1?"source":`vec2(${d.slice(-2).join()})`,m=r==="reflect"?0:1;let g="";if(s===1){const y=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;g=`
        ${o} rc = outputLoc;
        ${y}
        result[0] = getChannel(getX(${d.join()}), ${f});
        ${u[s-1]} += 1;
        if(${p}) {
          ${y}
          result[1] = getChannel(getX(${d.join()}), ${f});
        }
      `}else{const y=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;g=`
        ${o} rc = outputLoc;
        ${y}
        result[0] = getChannel(getX(${d.join()}), ${f});
        ${u[s-1]} += 1;
        if(${p}) {
          ${y}
          result[1] = getChannel(getX(${d.join()}), ${f});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${y}
          result[2] = getChannel(getX(${d.join()}), ${f});
          ${u[s-1]} += 1;
          if(${p}) {
            ${y}
            result[3] = getChannel(getX(${d.join()}), ${f});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${l});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fq=({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:s,mode:o}=t,a=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Aq(r.shape,s,o):new Dq(r.shape,s,o);return e.runWebGLProgram(a,[r],r.dtype)},Pq={kernelName:Op,backendName:"webgl",kernelFunc:Fq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq=`if (b == 0.0) return NAN;
  return mod(a, b);`,Vq=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Ho+`
  return result;
`,Bq=jt({opSnippet:Lq,packedOpSnippet:Vq}),Mq={kernelName:Ul,backendName:"webgl",kernelFunc:Bq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zq{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wq=`
if (a == b) {
  return 1.0;
};
return a / b;`,Uq=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,uk=jt({opSnippet:Wq,packedOpSnippet:Uq,checkOutOfBounds:!0}),Gq={kernelName:wl,backendName:"webgl",kernelFunc:uk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ob="return a - b;",ck=jt({opSnippet:ob,packedOpSnippet:ob,supportsComplex:!0,cpuKernelImpl:LG}),Hq={kernelName:iu,backendName:"webgl",kernelFunc:ck};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dk(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:o}=r,a=ze([o],s.shape),l=lk({inputs:{x:s},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),u=Et(l.shape,a),d=ye({inputs:{x:l},backend:t,attrs:{shape:u}}),p=ck({inputs:{a:s,b:d},backend:t}),f=ok({inputs:{x:p},backend:t}),m=eh({inputs:{x:f},backend:t,attrs:{axis:a,keepDims:!1}}),g=ye({inputs:{x:m},backend:t,attrs:{shape:u}}),y=uk({inputs:{a:f,b:g},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),y}const jq={kernelName:lf,backendName:"webgl",kernelFunc:dk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qq(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:o,seed:a,normalized:l}=r,u=l?s:dk({inputs:{logits:s},backend:t,attrs:{dim:s.shape.length-1}}),d=u.shape[0],p=u.shape[1],f=new zq(d,p,o),m=[[a]],g=t.runWebGLProgram(f,[u],"int32",m);return l||t.disposeIntermediateTensorInfo(u),g}const Kq={kernelName:Dp,backendName:"webgl",kernelFunc:qq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq=sr+`
  return -x;
`,Yq=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Qq(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const o=t.texData.get(r.dataId),[a,l]=xG(o.values,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,a)}let s;return J().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Ps(r.shape,Yq):s=new Er(r.shape,Xq),t.runWebGLProgram(s,[r],r.dtype)}const Zq={kernelName:Ap,backendName:"webgl",kernelFunc:Qq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jq=Uf;function eK(n){Mn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:u}=r,d=t.readSync(s.dataId),p=t.readSync(o.dataId),{selectedIndices:f}=Jq(d,p,a,l,u);return t.makeTensorInfo([f.length],"int32",new Int32Array(f))}const tK={kernelName:Fp,backendName:"webgl",kernelFunc:eK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nK=Gf;function rK(n){Mn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:d}=r,p=t.readSync(s.dataId),f=t.readSync(o.dataId),{selectedIndices:m,validOutputs:g}=nK(p,f,a,l,u,d);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([],"int32",new Int32Array([g]))]}const sK={kernelName:Pp,backendName:"webgl",kernelFunc:rK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oK=Hf;function aK(n){Mn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:l,scoreThreshold:u,softNmsSigma:d}=r,p=t.readSync(s.dataId),f=t.readSync(o.dataId),m=a,g=l,y=u,v=d,{selectedIndices:w,selectedScores:b}=oK(p,f,m,g,y,v);return[t.makeTensorInfo([w.length],"int32",new Int32Array(w)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const iK={kernelName:Lp,backendName:"webgl",kernelFunc:aK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lK{constructor(e,t,r,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uK=n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:o,depth:a,onValue:l,offValue:u}=r,d=oe(s.shape),p=new lK(d,a,l,u),f=ye({inputs:{x:s},backend:t,attrs:{shape:[d]}}),m=t.runWebGLProgram(p,[f],o);t.disposeIntermediateTensorInfo(f);const g=[...s.shape,a],y=ye({inputs:{x:m},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(m),y},cK={kernelName:Bp,backendName:"webgl",kernelFunc:uK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ed(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const s=Eu({inputs:{input:r},backend:t}),o=Ed({inputs:{x:s},backend:t}),a=th({inputs:{input:r},backend:t}),l=Ed({inputs:{x:a},backend:t}),u=Js({inputs:{real:o,imag:l},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}else return Ru({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const dK={kernelName:$f,backendName:"webgl",kernelFunc:Ed};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pk(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=Eu({inputs:{input:r},backend:t}),o=pk({inputs:{x:s},backend:t}),a=th({inputs:{input:r},backend:t}),l=Ed({inputs:{x:a},backend:t}),u=Js({inputs:{real:o,imag:l},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}else return Ru({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const pK={kernelName:Vp,backendName:"webgl",kernelFunc:pk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fK(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return Lg({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(p=>{Ut(o,p.shape,"All tensors passed to stack must have matching shapes"),D(a===p.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=e.map(p=>{const f=Lg({inputs:{input:p},backend:t,attrs:{dim:s}});return l.push(f),f}),d=QN({inputs:u,backend:t,attrs:{axis:s}});return l.forEach(p=>t.disposeIntermediateTensorInfo(p)),d}const hK={kernelName:Mp,backendName:"webgl",kernelFunc:fK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mK{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((d,p)=>d[0]+e[p]+d[1]);const s=e.length,o=Je(s),a=t.map(d=>d[0]).join(","),l=t.map((d,p)=>d[0]+e[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${l});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gK{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((v,w)=>v[0]+e[w]+v[1]);const s=e.length,o=Je(s),a=t.map(v=>v[0]).join(","),l=t.map((v,w)=>v[0]+e[w]).join(","),u=ln("rc",s),d=ln("source",s),p=`${u[s-1]} < ${this.outputShape[s-1]}`,f=s===1?"source":`vec2(${d.slice(-2).join()})`,m=[`${o} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${p}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${u[s-1]} += 1;
         if(${p}) {`],g=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let y="";for(let v=0,w=s===1?2:4;v<w;v++)y+=`
        ${m[v]}
        if (${g}) {
          result[${v}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${v}] = getChannel(getX(${d.join()}), ${f});
        }
      `;y+=s===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${l});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${y}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,constantValue:a}=r;if(oe(s.shape)===0){const d=o.map((p,f)=>p[0]+s.shape[f]+p[1]);return Ru({backend:t,attrs:{shape:d,value:a,dtype:s.dtype}})}const l=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gK(s.shape,o,a):new mK(s.shape,o,a),u=[[a]];return t.runWebGLProgram(l,[s],s.dtype,u)},yK={kernelName:zp,backendName:"webgl",kernelFunc:fk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xK=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,vK=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Ho+`
  return result;
`,wK=jt({opSnippet:xK,packedOpSnippet:vK}),bK={kernelName:jl,backendName:"webgl",kernelFunc:wK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SK(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:a}=r,l=s.shape.length,u=[],d=ze(o,s.shape);let p=d;const f=bt(p,l);let m=s;f!=null&&(m=cn({inputs:{x:s},backend:t,attrs:{perm:f}}),p=St(p.length,l),u.push(m)),Ht("prod",p,l);let g;if(t.shouldExecuteOnCPU([m])){const y=t.texData.get(m.dataId).values,{outVals:v,outShape:w,outDtype:b}=wG(m.shape,m.dtype,y,p);g=t.makeTensorInfo(w,b,v)}else{const[y,v]=Gt(m.shape,p),w=oe(v),b=ye({inputs:{x:m},backend:t,attrs:{shape:[-1,w]}}),$=kf(s.dtype),I=jo(b,$,"prod",t);g=ye({inputs:{x:I},backend:t,attrs:{shape:y}}),u.push(b),u.push(I)}if(a){u.push(g);const y=Et(g.shape,d);g=ye({inputs:{x:g},backend:t,attrs:{shape:y}})}return u.forEach(y=>t.disposeIntermediateTensorInfo(y)),g}const $K={kernelName:Up,backendName:"webgl",kernelFunc:SK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CK(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:l}=r,u=s.map(b=>t.readSync(b.dataId)),d=s.map(b=>b.shape),p=t.readSync(o.dataId),f=t.readSync(a.dataId),[m,g,y]=bG(u,d,p,o.shape,o.dtype,f,a.shape,l),v=m.map(b=>t.makeTensorInfo([b.length],"int32",b)),w=t.makeTensorInfo(y,o.dtype,g);return v.concat([w])}const NK={kernelName:Gp,backendName:"webgl",kernelFunc:CK};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kK(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:o}=e,a=t.readSync(r.dataId),l=t.readSync(s.dataId),u=t.readSync(o.dataId),[d,p]=SG(a,r.shape,r.dtype,l,s.shape,u,o.shape),f=t.makeTensorInfo([d.length],"int32",d),m=t.makeTensorInfo([p.length],r.dtype,p);return[f,m]}const IK={kernelName:Hp,backendName:"webgl",kernelFunc:kK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TK(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:o,defaultValue:a,rowPartitionTensors:l}=e,{rowPartitionTypes:u}=r,d=t.readSync(s.dataId),p=t.readSync(o.dataId),f=t.readSync(a.dataId),m=l.map(w=>t.readSync(w.dataId)),g=l.map(w=>w.shape),[y,v]=$G(d,s.shape,p,o.shape,o.dtype,f,a.shape,m,g,u);return t.makeTensorInfo(y,o.dtype,v)}const EK={kernelName:jp,backendName:"webgl",kernelFunc:TK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hk=n=>{const{backend:e,attrs:t}=n,{start:r,stop:s,step:o,dtype:a}=t,l=CG(r,s,o,a);return e.makeTensorInfo([l.length],a,l)},RK={kernelName:qp,backendName:"webgl",kernelFunc:hk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _K="return 1.0 / x;",OK=Me({opSnippet:_K}),DK={kernelName:ql,backendName:"webgl",kernelFunc:OK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AK=sr+`
  return (x < 0.0) ? 0.0 : x;
`,FK=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,PK=Me({opSnippet:AK,packedOpSnippet:FK}),LK={kernelName:Kl,backendName:"webgl",kernelFunc:PK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VK=sr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,BK=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,MK=Me({opSnippet:VK,packedOpSnippet:BK}),zK={kernelName:Xl,backendName:"webgl",kernelFunc:MK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WK{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,l,u,d]=e;this.outputShape=[a,t,r,d];const p=[s&&t>1?l-1:l,s&&r>1?u-1:u],f=[s&&t>1?t-1:t,s&&r>1?r-1:r];let m;o?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/f[0]},
          ${p[1]/f[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UK{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,l,u,d]=e;this.outputShape=[a,t,r,d];const p=[s&&t>1?l-1:l,s&&r>1?u-1:u],f=[s&&t>1?t-1:t,s&&r>1?r-1:r];let m;o?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/f[0]},
          ${p[1]/f[1]},
          ${p[1]/f[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${d-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GK(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:l}=r,[u,d]=l,p=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new UK(s.shape,u,d,o,a):new WK(s.shape,u,d,o,a);return t.runWebGLProgram(p,[s],"float32")}const HK={kernelName:Qp,backendName:"webgl",kernelFunc:GK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jK{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,l]=e,u=[r&&a>1?s-1:s,r&&l>1?o-1:o],d=[r&&a>1?a-1:a,r&&l>1?l-1:l],p=u[0]/d[0],f=u[1]/d[1],m=1/p,g=1/f,y=Math.ceil(m)*2+2,v=Math.ceil(g)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${f});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${g});

        const int winHeight = int(${y});
        const int winWidth = int(${v});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qK(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,l=new jK(o.shape,s.shape,a);return t.runWebGLProgram(l,[o],o.dtype)}const KK={kernelName:dy,backendName:"webgl",kernelFunc:qK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XK{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,l,u,d]=e;this.outputShape=[a,t,r,d];const p=[s&&t>1?l-1:l,s&&r>1?u-1:u],f=[s&&t>1?t-1:t,s&&r>1?r-1:r],m=s?"0.5":"0.0";let g;o?g="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":g="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/f[0]},
          ${p[1]/f[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${g};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YK{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,l,u,d]=e;this.outputShape=[a,t,r,d];const p=[s&&t>1?l-1:l,s&&r>1?u-1:u],f=[s&&t>1?t-1:t,s&&r>1?r-1:r],m=s?"0.5":"0.0";let g;o?g="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":g="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/f[0]},
          ${p[1]/f[1]},
          ${p[1]/f[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${g};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${d-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QK(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:l}=r,[u,d]=l,p=J().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new YK(s.shape,u,d,o,a):new XK(s.shape,u,d,o,a);return t.runWebGLProgram(p,[s],s.dtype)}const ZK={kernelName:Yp,backendName:"webgl",kernelFunc:QK};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JK{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,a,l]=e,u=[r&&a>1?s-1:s,r&&l>1?o-1:o],d=[r&&a>1?a-1:a,r&&l>1?l-1:l],p=u[0]/d[0],f=u[1]/d[1],m=1/p,g=1/f,y=Math.ceil(m)*2+2,v=Math.ceil(g)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${f});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${g});

        const int winHeight = int(${y});
        const int winWidth = int(${v});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${d[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${d[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e7(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:a}=r,l=new JK(o.shape,s.shape,a);return t.runWebGLProgram(l,[o],o.dtype)}const t7={kernelName:cy,backendName:"webgl",kernelFunc:e7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n7{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=l=>t.indexOf(l)!==-1&&e[l]!==1?`${e[l]} - coords[${l}] - 1`:`coords[${l}]`,o=e.map((l,u)=>s(u)).join(","),a=Je(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r7{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=ln("rc",r),o=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,a=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,l=Je(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${l} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(s.slice())};
          if(${o}){
            result.g = ${d(s.slice())};
          }
          if(${a}) {
            result.b = ${p(s.slice())};
            if(${o}) {
              result.a = ${f(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(y){return m(y)}function d(y){return y[r-1]="("+y[r-1]+" + 1)",m(y)}function p(y){return y[r-2]="("+y[r-2]+" + 1)",m(y)}function f(y){return y[r-1]="("+y[r-1]+" + 1)",y[r-2]="("+y[r-2]+" + 1)",m(y)}function m(y){const v=e.map(($,I)=>g(I,y)),w=v.join(","),b=v.slice(-2).join(",");return`getChannel(getX(${w}), vec2(${b}))`}function g(y,v){return t.indexOf(y)!==-1&&e[y]!==1?`${e[y]} - ${v[y]} - 1`:`${v[y]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s7(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:o}=r,a=s.shape.length,l=ze(o,s.shape);if(a===0)return On({inputs:{x:s},backend:t});const u=J().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new r7(s.shape,l):new n7(s.shape,l);return t.runWebGLProgram(u,[s],s.dtype)}const o7={kernelName:Zp,backendName:"webgl",kernelFunc:s7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a7{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i7={kernelName:Cf,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:o,center:a}=e,l=t,u=new a7(r.shape,o),[d,p]=Cx(a,r.shape[1],r.shape[2]),f=[[d,p,Math.sin(s),Math.cos(s)]];return l.runWebGLProgram(u,[r],r.dtype,f)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,u7=Me({opSnippet:l7}),c7={kernelName:Yl,backendName:"webgl",kernelFunc:u7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d7="return inversesqrt(x);",p7=Me({opSnippet:d7,cpuKernelImpl:NG}),f7={kernelName:Ql,backendName:"webgl",kernelFunc:p7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class a0{constructor(e,t,r,s,o,a,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const d=Je(o.length),p=Je(a.length);let f="";r===1?f="i":r===2&&(f="i, j");const m=`getIndices(${f})`;let g="";s===1?g="i":s===2&&(g="i, coords[1]");const y=`getUpdates(${g})`;let v="";u&&(v="coords[0], coords[1]");const w=`getDefaultValue(${v})`,b=t>1?"strides[j]":"strides";this.userCode=`
        ${d} strides = ${d}(${o});

        void main() {
          ${p} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${b};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${y};
              found = true;
            }
          }
          setOutput(mix(${w}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h7{constructor(e,t,r,s,o,a,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const d=Je(o.length),p=Je(a.length);let f="";r===1?f="i":r===2&&(f="i, j");const m=`getIndices(${f})`;let g="";s===1?g="i":s===2&&(g="i, coords[1]");const y=`getUpdates(${g})`;let v="";u&&(v="coords[0], coords[1]");const w=`getDefaultValue(${v})`,b=t>1?"strides[j]":"strides",$=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${d} strides = ${d}(${o});

        void main() {
          ${p} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${m});
              flattenedIndex += index.xz * ${b};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${$};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${y};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${w}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m7(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:f}=Xs(o,s,a),m=[f/d,d];if(f===0)return t.makeTensorInfo(a,s.dtype);const g=ye({inputs:{x:s},backend:t,attrs:{shape:[u,l]}}),y=ye({inputs:{x:o},backend:t,attrs:{shape:[u,d]}}),v=t.makeTensorInfo([],"float32",new Float32Array([0]));let w;J().getBool("WEBGL_PACK")?w=new h7(u,l,g.shape.length,y.shape.length,p,m):w=new a0(u,l,g.shape.length,y.shape.length,p,m);const b=t.runWebGLProgram(w,[y,g,v],y.dtype),$=ye({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(v),$}const g7={kernelName:Jp,backendName:"webgl",kernelFunc:m7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y7{constructor(e,t,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,l=J().getNumber("WEBGL_VERSION")===2?o:a,u=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${l}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:o}=e,{side:a}=r,l=new y7(s.shape[0],s.shape[1],o.shape[1],a),u=[[s.shape[1]]];return t.runWebGLProgram(l,[s,o],"int32",u)}const v7={kernelName:tf,backendName:"webgl",kernelFunc:x7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w7{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let s,o;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)o="resRC",s="resRC";else{const l=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],d=[];for(let p=0;p<t.length;p++)d.push(`${l[p]}`),p<e&&u.push(`${l[p]}`);s=u.join(),o=d.join()}const a=Je(r);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:o}=e,a=new w7(r.shape.length,s.shape,s.shape.length);return t.runWebGLProgram(a,[r,s,o],mn(s.dtype,o.dtype))}const S7={kernelName:nf,backendName:"webgl",kernelFunc:b7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $7=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Ix};
  float scale = ${Tx};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,C7=Me({opSnippet:$7}),N7={kernelName:Zl,backendName:"webgl",kernelFunc:C7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k7=Ka+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,I7=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,T7=Me({opSnippet:k7,packedOpSnippet:I7,cpuKernelImpl:IG}),E7={kernelName:nu,backendName:"webgl",kernelFunc:T7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R7=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,_7=Me({opSnippet:R7}),O7={kernelName:tu,backendName:"webgl",kernelFunc:_7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D7=Ka+`
  return sin(x);
`,A7=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Ho}
  return result;
`,F7=Me({opSnippet:D7,packedOpSnippet:A7}),P7={kernelName:Jl,backendName:"webgl",kernelFunc:F7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L7=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,V7=Me({opSnippet:L7}),B7={kernelName:eu,backendName:"webgl",kernelFunc:V7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M7=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,z7=Me({opSnippet:M7}),W7={kernelName:ru,backendName:"webgl",kernelFunc:z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U7=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,paddings:a}=r;D(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=o.reduce((b,$)=>b*$),u=[[0,0]];u.push(...a);for(let b=1+o.length;b<s.shape.length;++b)u.push([0,0]);const d=[],p=fk({inputs:{x:s},backend:t,attrs:{paddings:u,constantValue:0}}),f=Su(p.shape,o,l,!1),m=$u(f.length,o.length,!1),g=Cu(p.shape,o,l,!1),y=ye({inputs:{x:p},backend:t,attrs:{shape:f}}),v=cn({inputs:{x:y},backend:t,attrs:{perm:m}}),w=ye({inputs:{x:v},backend:t,attrs:{shape:g}});return d.push(p),d.push(y),d.push(v),d.forEach(b=>t.disposeIntermediateTensorInfo(b)),w},G7={kernelName:of,backendName:"webgl",kernelFunc:U7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H7(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const l=t.readSync(r.dataId),u=t.readSync(s.dataId),d=t.readSync(o.dataId),p=t.readSync(a.dataId)[0],[f,m,g,y,v]=EG(l,r.shape,r.dtype,u,s.dtype,d,p);return[t.makeTensorInfo(m,r.dtype,f),t.makeTensorInfo([m[0]],s.dtype,g),t.makeTensorInfo([y.length],"bool",new Uint8Array(y.map(w=>Number(w)))),t.makeTensorInfo([v.length],r.dtype,new Int32Array(v))]}const j7={kernelName:uf,backendName:"webgl",kernelFunc:H7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q7(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.readSync(s.dataId)),l=t.readSync(r.dataId),u=Array.from(t.readSync(o.dataId)),[d,p,f]=RG(l,r.shape,r.dtype,a,u);return[t.makeTensorInfo(p,r.dtype,d),t.makeTensorInfo([f.length],o.dtype,new Int32Array(f))]}const K7={kernelName:cf,backendName:"webgl",kernelFunc:q7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=t.readSync(r.dataId),l=t.readSync(s.dataId),u=t.readSync(o.dataId),[d,p]=VN(a,r.shape,r.dtype,l,u,!0);return t.makeTensorInfo(p,r.dtype,d)}const Y7={kernelName:df,backendName:"webgl",kernelFunc:X7};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q7(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=t.readSync(r.dataId),l=t.readSync(s.dataId),u=t.readSync(o.dataId),[d,p]=VN(a,r.shape,r.dtype,l,u);return t.makeTensorInfo(p,r.dtype,d)}const Z7={kernelName:pf,backendName:"webgl",kernelFunc:Q7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J7(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:l}=r,{sliceRank:u,numUpdates:d,sliceSize:p,strides:f,outputSize:m}=Xs(o,s,l),g=!1;if(o.dtype==="string"){const b=t.bufferSync(s),$=t.bufferSync(o),I=ns(t.readSync(a.dataId)[0]),k=kG(b,$,l,m,p,d,u,f,I,g);return t.makeTensorInfo(l,k.dtype,k.values)}const y=new a0(d,u,s.shape.length,o.shape.length,f,[m,1],g),v=t.runWebGLProgram(y,[o,s,a],o.dtype),w=ye({inputs:{x:v},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(v),w}const eX={kernelName:ff,backendName:"webgl",kernelFunc:J7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tX(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,l=ze(a,s.shape)[0],u=zx(s,o,l),d=s.shape.length,p=new Array(d).fill(0),f=s.shape.slice();return u.map(m=>{const g=[...f];g[l]=m;const y=Xa({inputs:{x:s},backend:t,attrs:{begin:p,size:g}});return p[l]+=m,y})}const nX={kernelName:af,backendName:"webgl",kernelFunc:tX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ab="return sqrt(x);",rX=Me({opSnippet:ab,packedOpSnippet:ab,cpuKernelImpl:_G}),sX={kernelName:su,backendName:"webgl",kernelFunc:rX};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oX="return x * x;",aX=Me({opSnippet:oX}),iX={kernelName:py,backendName:"webgl",kernelFunc:aX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ib="return (a - b) * (a - b);",lX=jt({opSnippet:ib,packedOpSnippet:ib}),uX={kernelName:ou,backendName:"webgl",kernelFunc:lX};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cX(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(s.dataId),a=os(o),l=OG(a,"string",r);return t.makeTensorInfo(s.shape,"string",l)}const dX={kernelName:au,backendName:"webgl",kernelFunc:cX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pX({inputs:n,attrs:e,backend:t}){const{x:r}=n,s=sr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Er(r.shape,s);return t.runWebGLProgram(o,[r],r.dtype)}const fX={kernelName:du,backendName:"webgl",kernelFunc:pX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hX{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,o=Je(r.length),a=Je(r.length);let l="";if(s===1)l="coords * strides + begin";else{let u=0;l=r.map((d,p)=>(u++,r.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${u-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mX(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,end:a,strides:l,beginMask:u,endMask:d,ellipsisMask:p,newAxisMask:f,shrinkAxisMask:m}=r,{finalShapeSparse:g,finalShape:y,isIdentity:v,sliceDim0:w,isSimpleSlice:b,begin:$,end:I,strides:k}=bx(s.shape,o,a,l,u,d,p,f,m);let T;if(v)T=ye({inputs:{x:s},backend:t,attrs:{shape:y}});else if(w||b){D(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const A=yx($,I,k),V=Xa({inputs:{x:s},backend:t,attrs:{begin:$,size:A}});T=ye({inputs:{x:V},backend:t,attrs:{shape:y}}),t.disposeIntermediateTensorInfo(V)}else if(t.shouldExecuteOnCPU([s])){const V=t.readSync(s.dataId),P=Fe(s.shape,s.dtype,V),F=DG(g,P,k,$);T=t.makeTensorInfo(y,s.dtype,F.values)}else{const V=new hX($,k,g);T=t.runWebGLProgram(V,[s],s.dtype)}const O=ye({inputs:{x:T},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(T),O}const gX={kernelName:hf,backendName:"webgl",kernelFunc:mX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yX(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:o,leftPad:a,rightPad:l,padWidth:u,preserveShortSequences:d}=r,{data:p,dataSplits:f}=e,m=t.readSync(p.dataId),g=t.readSync(f.dataId),[y,v]=AG(m,g,s,o,a,l,u,d);return[t.makeTensorInfo([y.length],"string",y),t.makeTensorInfo(f.shape,"int32",v)]}const xX={kernelName:mf,backendName:"webgl",kernelFunc:yX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vX(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const l=t.readSync(o.dataId),u=t.readSync(a.dataId)[0],[d,p,f]=FG(l,u,s),m=p.length;return[t.makeTensorInfo([m,2],"int32",d),t.makeTensorInfo([m],"string",p),t.makeTensorInfo([2],"int32",new Int32Array(f))]}const wX={kernelName:gf,backendName:"webgl",kernelFunc:vX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bX(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(o.dataId),l=PG(a,s);return t.makeTensorInfo(o.shape,"int32",l)}const SX={kernelName:yf,backendName:"webgl",kernelFunc:bX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $X="return tan(x);",CX=Me({opSnippet:$X}),NX={kernelName:lu,backendName:"webgl",kernelFunc:CX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kX=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,IX=Me({opSnippet:kX}),TX={kernelName:uu,backendName:"webgl",kernelFunc:IX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EX(n){const{inputs:e,backend:t,attrs:r}=n,{tensor:s,indices:o,updates:a}=e,{sliceRank:l,numUpdates:u,sliceSize:d,strides:p,outputSize:f}=Xs(a,o,s.shape),m=[f/d,d];if(f===0)return t.makeTensorInfo(s.shape,o.dtype);const g=ye({inputs:{x:o},backend:t,attrs:{shape:[u,l]}}),y=ye({inputs:{x:a},backend:t,attrs:{shape:[u,d]}}),v=ye({inputs:{x:s},backend:t,attrs:{shape:m}}),w=new a0(u,l,g.shape.length,y.shape.length,p,m,!1,!0),b=t.runWebGLProgram(w,[y,g,v],v.dtype),$=ye({inputs:{x:b},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(b),$}const RX={kernelName:ef,backendName:"webgl",kernelFunc:EX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _X{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*t[a];this.outputShape=r,this.rank=r.length;const s=Je(this.rank),o=OX(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function OX(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<n.length;s++)r.push(`imod(${t[s]}, ${n[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mk(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:o}=r;if(s.dtype==="string"||s.shape.length>5){const u=t.readSync(s.dataId),d=s.dtype==="string"?u.map(m=>ns(m)):u,p=Fe(s.shape,s.dtype,d),f=VG(p,o);return t.makeTensorInfo(f.shape,f.dtype,f.values)}const a=new _X(s.shape,o);return t.runWebGLProgram(a,[s],s.dtype)}const DX={kernelName:cu,backendName:"webgl",kernelFunc:mk};class AX{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class FX{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function go(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function lb(n){let e=1;for(;e<n;)e*=2;return e}function PX(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:o,sorted:a}=r,l=J().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=J().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),d=s.shape,p=d[d.length-1];if(t.shouldExecuteOnCPU([s])||p<l||o>u){const F=t.readSync(s.dataId),[E,W]=BG(F,d,s.dtype,o,a);return[t.makeTensorInfo(E.shape,E.dtype,E.values),t.makeTensorInfo(W.shape,W.dtype,W.values)]}if(o===0)return d[d.length-1]=0,[t.makeTensorInfo(d,s.dtype,[]),t.makeTensorInfo(d,"int32",[])];if(p===1)return[s,Ru({attrs:{shape:d,dtype:"int32",value:0},backend:t})];const f=t.texData.get(s.dataId),m=f!==null&&f.isPacked,g=m?t.unpackTensor(s):s,v=oe(d)/p,w=ye({inputs:{x:g},attrs:{shape:[v,p]},backend:t});m&&go(t,g);const b=lb(o),$=lb(p);let I=null;const k=()=>I===null?[w,w]:[w,I],T=(F,E,W)=>{const j=k(),Y=new AX(W),Z=[[p],[I===null?1:0],[Number.NEGATIVE_INFINITY],[F],[E]],ne=I;I=t.runWebGLProgram(Y,j,"int32",Z),go(t,ne)};for(let F=1;F<b;F*=2){const E=F*2;for(let W=F;W>=1;W/=2)T(E,W,[v,$])}for(let F=$;F>b;F/=2){const E=k(),W=new FX([v,F/2]),Y=[[p],[I===null?1:0],[b]],Q=I;I=t.runWebGLProgram(W,E,"int32",Y),go(t,Q);const Z=b/2,ne=Z*2;for(let U=Z;U>=1;U/=2)T(ne,U,I.shape)}let O=I;I=Xa({inputs:{x:I},backend:t,attrs:{begin:0,size:[v,o]}}),go(t,O);let A=ik({inputs:{x:w,indices:I},backend:t,attrs:{axis:1,batchDims:1}});go(t,w);const V=d.slice(0,-1);V.push(o),O=I,I=ye({inputs:{x:I},attrs:{shape:V},backend:t}),go(t,O);const P=A;return A=ye({inputs:{x:A},attrs:{shape:V},backend:t}),go(t,P),[A,I]}const LX={kernelName:xf,backendName:"webgl",kernelFunc:PX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VX{constructor(e,t,r,s,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const l=r==="nearest"?1:2;let u;switch(s){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${l} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BX(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,transforms:o}=e,{interpolation:a,fillMode:l,fillValue:u,outputShape:d}=r,[p,f,m,g]=s.shape,[y,v]=d??[f,m],w=[p,y,v,g],b=new VX(f,m,a,l,u,w);return t.runWebGLProgram(b,[s,o],"float32")}const MX={kernelName:vf,backendName:"webgl",kernelFunc:BX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zX(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:o}=e;Iu(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(o.dataId),{outputValues:l,outputShape:u,indices:d}=MG(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,l),r.makeTensorInfo([d.length],"int32",d)]}const WX={kernelName:wf,backendName:"webgl",kernelFunc:zX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UX(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s,l=a.shape.length,u=s.shape[o],d=new Array(l-1);let p=0;for(let v=0;v<l;v++)v!==o&&(d[p++]=a.shape[v]);const f=[],m=new Array(l).fill(0),g=a.shape.slice();g[o]=1;const y=new Array(u);for(let v=0;v<y.length;v++){m[o]=v;const w=Xa({inputs:{x:a},backend:t,attrs:{begin:m,size:g}}),b=ye({inputs:{x:w},backend:t,attrs:{shape:d}});y[v]=b,f.push(w)}return f.forEach(v=>t.disposeIntermediateTensorInfo(v)),y}const GX={kernelName:bf,backendName:"webgl",kernelFunc:UX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HX{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,o=e.inSize,a=e.numSegments,l=a*Math.ceil(o/r);this.outputShape=[s,l];const u="0.0",d="sumValue",p=Math.floor(r/4)*4,f=r%4,m=`
        sumValue += dot(values, segFilter);
    `;let g="";o%r>0&&(g=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let y="";o%r>0&&(y=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${g}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${y}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${p};
        if (${f===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${f===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${f===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${d});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jX(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:o}=e,{numSegments:a}=r,l=s.shape.length,u=[];let d=0;const p=bt([d],l);let f=s;p!=null&&(f=cn({inputs:{x:s},backend:t,attrs:{perm:p}}),u.push(f),d=St(1,l)[0]);const m=pC(f.shape,d,a),g=oe([f.shape[d]]),y=ye({inputs:{x:f},backend:t,attrs:{shape:[-1,g]}});u.push(y);const v=kf(s.dtype),w=(k,T,O,A,V)=>{const P=k.shape[0],F=k.shape[1],E=dC(F,V),W={windowSize:E,inSize:F,batchSize:P,numSegments:V},j=new HX(W,T),Y=t.compileAndRun(j,[k,O],A);if(u.push(Y),Y.shape[1]===V)return Y;const Q=hk({backend:t,attrs:{start:0,stop:V,step:1,dtype:"float32"}}),Z=mk({inputs:{x:Q},backend:t,attrs:{reps:[F/E]}});return u.push(Q),u.push(Z),w(Y,T,Z,A,V)},b=w(y,"unsortedSegmentSum",o,v,a),$=ye({inputs:{x:b},backend:t,attrs:{shape:m}});let I=$;if(p!=null){u.push($);const k=yu(p);I=cn({inputs:{x:I},backend:t,attrs:{perm:k}})}return u.forEach(k=>t.disposeIntermediateTensorInfo(k)),I}const qX={kernelName:Sf,backendName:"webgl",kernelFunc:jX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KX=[_H,DH,PH,BH,zH,GH,jH,KH,ZH,ej,rj,aj,uj,fj,gj,xj,wj,Cj,kj,Tj,Oj,Bj,zj,Hj,qj,Jj,t6,o6,hH,l6,f6,y6,$6,k6,T6,R6,O6,P6,B6,W6,G6,j6,K6,Q6,J6,r5,o5,l5,d5,f5,y5,b5,N5,T5,_5,O5,A5,P5,V5,M5,W5,j5,X5,Z5,e8,r8,a8,c8,h8,fH,g8,d6,v8,S8,N8,gH,E8,D8,F8,B8,W8,j8,X8,J8,rq,aq,lq,pq,hq,gq,wq,Sq,Cq,kq,Tq,Oq,Pq,Mq,Kq,vH,Zq,tK,sK,iK,Xj,cK,pK,hK,yK,bK,xH,$K,NK,IK,EK,RK,Yj,Gq,DK,LK,zK,bH,HK,KK,ZK,t7,o7,i7,c7,f7,g7,v7,S7,N7,E7,O7,P7,B7,Lj,jq,W7,G7,j7,K7,Y7,Z7,eX,nX,sX,iX,uX,dX,fX,gX,xX,wX,SX,Hq,TH,NX,TX,RX,DX,LX,MX,EH,WX,GX,qX,dK];for(const n of KX)Nf(n);var Mi={exports:{}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XX=J();XX.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var kn;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(kn||(kn={}));var ub;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(ub||(ub={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i0={};function YX(n,e){const t={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:e};i0[n]=t}function gk(n){return i0[n]}function QX(n){delete i0[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N(n,e,t,r,s){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const l=o.inputIndexStart,u=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?l+1:o.inputIndexEnd,d=l<0?e.inputNames.length+l:l;if(o.type==="tensor")return zt(e.inputNames[d],t,r,s);if(o.type==="tensors"){const m=e.inputs.slice(l,u);return e.inputNames.slice(l,u).filter((y,v)=>{var w;return((w=m[v])===null||w===void 0?void 0:w.op)!=="NoOp"}).map(y=>zt(y,t,r,s))}const p=zt(e.inputNames[d],t,r,s),f=p.dataSync();return o.type==="number"?f[0]:Un(p.shape,f)}const a=e.attrParams[n];return a&&a.value}function zt(n,e,t,r){const[s,o]=In(n,t);if(r!=null){const l=r.getHashTableHandleByName(s);if(l!=null)return l}const a=t.currentContextIds.find(l=>!!e[Rd(s,l)]);return a!==void 0?e[Rd(s,a)][o]:void 0}function cb(n,e,t){return e[Rd(n,t.currentContextId)]}function Yr(n,e){const[t,r,s]=In(n,e);return[Rd(t,e&&e.currentContextId),r,s]}function Rd(n,e){return e?`${n}-${e}`:n}function In(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const o=e.parseNodeNameCache.get(n);if(o!=null)return o}const r=n.split(":");let s;if(r.length===1)s=[n,0,void 0];else{const o=r[0],a=r.length===3?r[1]:void 0,l=Number(r[r.length-1]);s=[o,l,a]}return t&&e.parseNodeNameCache.set(n,s),s}function ld(n,e,t){let r=N("pad",n,e,t);if(r==="explicit"){r=N("explicitPaddings",n,e,t);const s=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)s[o][0]=r[o*2],s[o][1]=r[o*2+1];return s}return r}function Qr(n){return n.kept?n:es(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZX=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],JX=Object.freeze(Object.defineProperty({__proto__:null,json:ZX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e9=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],t9=Object.freeze(Object.defineProperty({__proto__:null,json:e9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],r9=Object.freeze(Object.defineProperty({__proto__:null,json:n9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s9=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],o9=Object.freeze(Object.defineProperty({__proto__:null,json:s9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a9=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],i9=Object.freeze(Object.defineProperty({__proto__:null,json:a9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l9=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],u9=Object.freeze(Object.defineProperty({__proto__:null,json:l9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c9=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],d9=Object.freeze(Object.defineProperty({__proto__:null,json:c9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p9=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],f9=Object.freeze(Object.defineProperty({__proto__:null,json:p9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h9=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],m9=Object.freeze(Object.defineProperty({__proto__:null,json:h9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g9=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],y9=Object.freeze(Object.defineProperty({__proto__:null,json:g9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x9=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],v9=Object.freeze(Object.defineProperty({__proto__:null,json:x9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w9=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],b9=Object.freeze(Object.defineProperty({__proto__:null,json:w9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S9=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],$9=Object.freeze(Object.defineProperty({__proto__:null,json:S9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C9=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],N9=Object.freeze(Object.defineProperty({__proto__:null,json:C9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k9=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],I9=Object.freeze(Object.defineProperty({__proto__:null,json:k9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T9=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],E9=Object.freeze(Object.defineProperty({__proto__:null,json:T9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R9=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],_9=Object.freeze(Object.defineProperty({__proto__:null,json:R9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O9=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],D9=Object.freeze(Object.defineProperty({__proto__:null,json:O9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A9=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],F9=Object.freeze(Object.defineProperty({__proto__:null,json:A9},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class db{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[JX,t9,r9,o9,i9,u9,d9,f9,m9,y9,v9,b9,$9,N9,I9,E9,_9,D9,F9],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(e,t={}){const r=e.node,s=[],o=[],a=[],l=r.reduce((v,w)=>(v[w.name]=this.mapNode(w),w.op.startsWith("Placeholder")?s.push(v[w.name]):w.op==="Const"?o.push(v[w.name]):(w.input==null||w.input.length===0)&&a.push(v[w.name]),v),{});let u=[];const d=[];let p={},f={};t!=null&&(p=this.mapSignatureEntries(t.inputs),f=this.mapSignatureEntries(t.outputs));const m=Object.keys(l);m.forEach(v=>{const w=l[v];w.inputNames.forEach((b,$)=>{const[I,,k]=Yr(b),T=l[I];if(T.outputs!=null){const O=T.outputs.indexOf(k);if(O!==-1){const A=`${I}:${O}`;w.inputNames[$]=A}}w.inputs.push(T),T.children.push(w)})}),Object.keys(f).length===0?m.forEach(v=>{const w=l[v];w.children.length===0&&d.push(w)}):Object.keys(f).forEach(v=>{const[w]=Yr(v),b=l[w];b!=null&&(b.signatureKey=f[v],d.push(b))}),Object.keys(p).length>0?Object.keys(p).forEach(v=>{const[w]=Yr(v),b=l[w];b&&(b.signatureKey=p[v],u.push(b))}):u=s;let g={};e.library!=null&&e.library.function!=null&&(g=e.library.function.reduce((v,w)=>(v[w.signature.name]=this.mapFunction(w),v),{}));const y={nodes:l,inputs:u,outputs:d,weights:o,placeholders:s,signature:t,functions:g};return a.length>0&&(y.initNodes=a),y}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){const t=gk(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((s,o)=>(s[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},s),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((s,o)=>{const a=o.type;let l;switch(o.type){case"string":l=Vg(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Vg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":l=Hg(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Hg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":l=Mg(e.attr,o.tfName,o.defaultValue||0),l===void 0&&o.tfDeprecatedName&&(l=Mg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":l=Gg(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Gg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":l=Bg(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Bg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":l=qg(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=qg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":l=Ug(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Ug(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":l=jg(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=jg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":l=zg(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=zg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":l=Wg(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=Wg(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":l=pb(e.attr,o.tfName,o.defaultValue),l===void 0&&o.tfDeprecatedName&&(l=pb(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return s[o.name]={value:l,type:a},s},{})),r}mapFunction(e){const t=e.nodeDef,r=[],s=[];let o={};t!=null&&(o=t.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op==="Const"&&s.push(f[m.name]),f),{}));const a=[],l=[];e.signature.inputArg.forEach(f=>{const[m]=Yr(f.name),g={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:l0(f.type),type:"dtype"}},children:[]};g.signatureKey=f.name,a.push(g),o[m]=g}),Object.keys(o).forEach(f=>{const m=o[f];m.inputNames.forEach((g,y)=>{const[v,,w]=Yr(g),b=o[v];if(b.outputs!=null){const $=b.outputs.indexOf(w);if($!==-1){const I=`${v}:${$}`;m.inputNames[y]=I}}m.inputs.push(b),b.children.push(m)})});const d=e.ret;e.signature.outputArg.forEach(f=>{const[m,g]=Yr(d[f.name]),y=o[m];y!=null&&(y.defaultOutput=g,l.push(y))});const p=this.mapArgsToSignature(e);return{nodes:o,inputs:a,outputs:l,weights:s,placeholders:r,signature:p}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}}function P9(n){const e=J().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function yk(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):P9(n);return e?t:t.toLowerCase()}function Vg(n,e,t,r=!1){const s=n[e];return s!=null?yk(s.s,r):t}function Bg(n,e,t){const r=n[e];return r?r.b:t}function Mg(n,e,t){const r=n[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:t;return typeof s=="number"?s:parseInt(s,10)}function l0(n){switch(typeof n=="string"&&(n=kn[n]),n){case kn.DT_FLOAT:case kn.DT_HALF:return"float32";case kn.DT_INT32:case kn.DT_INT64:case kn.DT_INT8:case kn.DT_UINT8:return"int32";case kn.DT_BOOL:return"bool";case kn.DT_DOUBLE:return"float32";case kn.DT_STRING:return"string";case kn.DT_COMPLEX64:case kn.DT_COMPLEX128:return"complex64";default:return null}}function pb(n,e,t){const r=n[e];return r&&r.func?r.func.name:t}function zg(n,e,t){const r=n[e];return r&&r.type?l0(r.type):t}function Wg(n,e,t){const r=n[e];return r&&r.list&&r.list.type?r.list.type.map(s=>l0(s)):t}function xk(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Ug(n,e,t){const r=n[e];return r&&r.shape?xk(r.shape):t}function Gg(n,e,t){const r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):t}function Hg(n,e,t,r=!1){const s=n[e];return s&&s.list&&s.list.s?s.list.s.map(o=>yk(o,r)):t}function jg(n,e,t){const r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>xk(s)):t}function qg(n,e,t){const r=n[e];return r&&r.list&&r.list.b?r.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L9{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,o)=>(s[o]=this.getAttr(o),s),{}))}getInput(e){return zt(e,this.tensorMap,this.context)}getAttr(e,t){const r=this.node.rawAttrs[e];if(r.tensor!=null)return zt(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return Mg(this.node.rawAttrs,e,t);if(r.s!=null)return Vg(this.node.rawAttrs,e,t);if(r.b!=null)return Bg(this.node.rawAttrs,e,t);if(r.shape!=null)return Ug(this.node.rawAttrs,e,t);if(r.type!=null)return zg(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return Gg(this.node.rawAttrs,e,t);if(r.list.s!=null)return Hg(this.node.rawAttrs,e,t);if(r.list.shape!=null)return jg(this.node.rawAttrs,e,t);if(r.list.b!=null)return qg(this.node.rawAttrs,e,t);if(r.list.type!=null)return Wg(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qt=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:yy,abs:Tn,acos:aS,acosh:iS,add:Oe,addN:lS,all:uS,any:cS,argMax:dS,argMin:pS,asin:fS,asinh:hS,atan:mS,atan2:gS,atanh:yS,avgPool:Ny,avgPool3d:xS,basicLSTMCell:vS,batchNorm:mu,batchNorm2d:wS,batchNorm3d:bS,batchNorm4d:SS,batchToSpaceND:ky,bincount:Iy,bitwiseAnd:$S,booleanMaskAsync:l2,broadcastArgs:CS,broadcastTo:$a,buffer:Fe,cast:it,ceil:NS,clipByValue:kS,clone:es,complex:rs,concat:Qt,concat1d:IS,concat2d:TS,concat3d:ES,concat4d:RS,conv1d:_S,conv2d:gu,conv2dTranspose:DS,conv3d:AS,conv3dTranspose:FS,cos:PS,cosh:LS,cosineWindow:Vf,cumprod:VS,cumsum:BS,denseBincount:MS,depthToSpace:zS,depthwiseConv2d:If,diag:WS,dilation2d:US,div:at,divNoNan:GS,dot:HS,dropout:f2,einsum:vo,elu:Ry,enclosingPowerOfTwo:ox,ensureShape:jS,equal:Ey,erf:qS,euclideanNorm:YS,exp:Ws,expandDims:Xr,expm1:QS,eye:Oy,fft:Df,fill:Ba,floor:Dy,floorDiv:$y,fused:m2,gather:Ay,gatherND:p2,greater:vu,greaterEqual:Fy,ifft:tl,imag:wu,image:w2,inTopKAsync:h2,irfft:Jy,isFinite:ZS,isInf:JS,isNaN:e$,leakyRelu:Py,less:xd,lessEqual:Tf,linalg:b2,linspace:t$,localResponseNormalization:n$,log:Ea,log1p:Ly,logSigmoid:s$,logSoftmax:o$,logSumExp:By,logicalAnd:Zi,logicalNot:My,logicalOr:zy,logicalXor:a$,losses:S2,lowerBound:i$,matMul:Ke,max:Io,maxPool:Wy,maxPool3d:l$,maxPoolWithArgmax:u$,maximum:Uy,mean:Ji,meshgrid:c$,min:yd,minimum:el,mirrorPad:d$,mod:p$,moments:f$,movingAverage:u2,mul:ve,multiRNNCell:h$,multinomial:m$,neg:vr,norm:xu,notEqual:Gy,oneHot:vd,ones:Fs,onesLike:g$,op:M,outerProduct:y$,pad:Ma,pad1d:x$,pad2d:v$,pad3d:w$,pad4d:b$,pool:S$,pow:Ta,prelu:jy,print:Sy,prod:$$,raggedGather:C$,raggedRange:N$,raggedTensorToTensor:k$,rand:I$,randomGamma:R$,randomNormal:Yy,randomStandardNormal:_$,randomUniform:Of,randomUniformInt:O$,range:Ra,real:_a,reciprocal:D$,relu:bu,relu6:Qy,reshape:le,reverse:Gs,reverse1d:A$,reverse2d:F$,reverse3d:P$,reverse4d:L$,rfft:Af,round:Zy,rsqrt:V$,scalar:Be,scatterND:c2,searchSorted:Rf,selu:B$,separableConv2d:M$,setdiff1dAsync:z$,sigmoid:ko,sign:W$,signal:v2,sin:U$,sinh:G$,slice:nt,slice1d:H$,slice2d:j$,slice3d:q$,slice4d:K$,softmax:X$,softplus:Vy,spaceToBatchND:Hy,sparse:$2,sparseToDense:d2,spectral:x2,split:Oa,sqrt:Ar,square:tr,squaredDifference:ex,squeeze:Ff,stack:Pr,step:tx,stridedSlice:Y$,string:C2,sub:Pe,sum:ot,tan:Q$,tanh:gd,tensor:xr,tensor1d:zn,tensor2d:Na,tensor3d:nx,tensor4d:Z$,tensor5d:J$,tensor6d:e2,tensorScatterUpdate:t2,tile:Ca,topk:n2,transpose:nl,truncatedNormal:r2,unique:s2,unsortedSegmentSum:o2,unstack:Ys,upperBound:a2,variable:i2,where:ts,whereAsync:sx,zeros:Us,zerosLike:_n},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V9=(n,e,t,r=qt)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(N("a",n,e,t),N("b",n,e,t))];case"AddN":return[r.addN(N("tensors",n,e,t))];case"FloorMod":case"Mod":return[r.mod(N("a",n,e,t),N("b",n,e,t))];case"Mul":return[r.mul(N("a",n,e,t),N("b",n,e,t))];case"RealDiv":case"Div":return[r.div(N("a",n,e,t),N("b",n,e,t))];case"DivNoNan":return[r.divNoNan(N("a",n,e,t),N("b",n,e,t))];case"FloorDiv":return[r.floorDiv(N("a",n,e,t),N("b",n,e,t))];case"Sub":return[r.sub(N("a",n,e,t),N("b",n,e,t))];case"Minimum":return[r.minimum(N("a",n,e,t),N("b",n,e,t))];case"Maximum":return[r.maximum(N("a",n,e,t),N("b",n,e,t))];case"Pow":return[r.pow(N("a",n,e,t),N("b",n,e,t))];case"SquaredDifference":return[r.squaredDifference(N("a",n,e,t),N("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B9=(n,e,t,r=qt)=>{switch(n.op){case"Abs":case"ComplexAbs":return[r.abs(N("x",n,e,t))];case"Acos":return[r.acos(N("x",n,e,t))];case"Acosh":return[r.acosh(N("x",n,e,t))];case"Asin":return[r.asin(N("x",n,e,t))];case"Asinh":return[r.asinh(N("x",n,e,t))];case"Atan":return[r.atan(N("x",n,e,t))];case"Atan2":return[r.atan2(N("x",n,e,t),N("y",n,e,t))];case"Atanh":return[r.atanh(N("x",n,e,t))];case"Ceil":return[r.ceil(N("x",n,e,t))];case"Complex":return[r.complex(N("real",n,e,t),N("imag",n,e,t))];case"Cos":return[r.cos(N("x",n,e,t))];case"Cosh":return[r.cosh(N("x",n,e,t))];case"Elu":return[r.elu(N("x",n,e,t))];case"Erf":return[r.erf(N("x",n,e,t))];case"Exp":return[r.exp(N("x",n,e,t))];case"Expm1":return[r.expm1(N("x",n,e,t))];case"Floor":return[r.floor(N("x",n,e,t))];case"Log":return[r.log(N("x",n,e,t))];case"Log1p":return[r.log1p(N("x",n,e,t))];case"Imag":return[r.imag(N("x",n,e,t))];case"Neg":return[r.neg(N("x",n,e,t))];case"Reciprocal":return[r.reciprocal(N("x",n,e,t))];case"Real":return[r.real(N("x",n,e,t))];case"Relu":return[r.relu(N("x",n,e,t))];case"Round":return[r.round(N("x",n,e,t))];case"Selu":return[r.selu(N("x",n,e,t))];case"Sigmoid":return[r.sigmoid(N("x",n,e,t))];case"Sin":return[r.sin(N("x",n,e,t))];case"Sign":return[r.sign(N("x",n,e,t))];case"Sinh":return[r.sinh(N("x",n,e,t))];case"Softplus":return[r.softplus(N("x",n,e,t))];case"Sqrt":return[r.sqrt(N("x",n,e,t))];case"Square":return[r.square(N("x",n,e,t))];case"Tanh":return[r.tanh(N("x",n,e,t))];case"Tan":return[r.tan(N("x",n,e,t))];case"ClipByValue":return[r.clipByValue(N("x",n,e,t),N("clipValueMin",n,e,t),N("clipValueMax",n,e,t))];case"Relu6":return[r.relu6(N("x",n,e,t))];case"Rsqrt":return[r.rsqrt(zt(n.inputNames[0],e,t))];case"LeakyRelu":return[r.leakyRelu(N("x",n,e,t),N("alpha",n,e,t))];case"Prelu":return[r.prelu(N("x",n,e,t),N("alpha",n,e,t))];case"IsNan":return[r.isNaN(zt(n.inputNames[0],e,t))];case"IsInf":return[r.isInf(zt(n.inputNames[0],e,t))];case"IsFinite":return[r.isFinite(zt(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jn(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){D(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let r=0;r<n.length;r++){const s=n[r],o=e[r];D(s<0||o<0||s===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function fb(n){return!(typeof n=="number"||n.some(e=>e<0))}function Ai(n,e,t){let r=Kg(n,t);const s=!fb(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(o=>{r=Kg(o.shape,r)}),!fb(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Kg(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let r=0;r<n.length;++r){const s=n[r],o=e[r];if(s>=0&&o>=0&&s!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[r]=s>=0?s:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M9{constructor(e,t,r,s,o,a,l){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=Be(0),gr(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),Jn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,gr(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,s)=>this.write(r,t[s]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return xr([],[0].concat(this.elementShape));const r=this.readMany(e);return Jn(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),Pr(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return xr([],[0].concat(this.elementShape));const t=[];for(let s=0;s<this.size();s++)t.push(s);const r=this.readMany(t);return Jn(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),Qt(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,Ys(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0;const s=e.map(u=>(r+=u,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=r===0?0:t.size/r,a=[];Ge(()=>{t=le(t,[1,r,o]);for(let u=0;u<e.length;++u){const p=[0,u===0?0:s[u-1],0],f=[1,e[u],o];a[u]=le(nt(t,p,f),this.elementShape)}return a});const l=[];for(let u=0;u<e.length;u++)l[u]=u;this.writeMany(l,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vo{get id(){return this.idTensor.id}constructor(e,t,r,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e!=null&&e.forEach(o=>{if(r!==o.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${o.dtype}`);Jn(t,o.shape,"TensorList shape mismatch: "),gr(o)}),this.idTensor=Be(0),this.maxNumElements=s,gr(this.idTensor)}copy(){return new Vo([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);Jn(e,this.elementShape,"TensorList shape mismatch: ");const s=Ai(this.elementShape,this.tensors,e);return Ge(()=>{const o=this.tensors.map(a=>le(a,s));return Pr(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=Ai(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,Jn(s.shape,e,"TensorList shape mismatch: "),le(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Jn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");gr(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Vo([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);Jn(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=Ai(this.elementShape,this.tensors,t);return le(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Jn(this.elementShape,t.shape,"TensorList shape mismatch: "),gr(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Jn(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=Ai(this.elementShape,this.tensors,r);return e.length===0?xr([],[0].concat(s)):Ge(()=>{const o=e.map(a=>le(this.tensors[a],s));return Pr(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Jn(this.elementShape,t,"TensorList shape mismatch: ");const r=Ai(this.elementShape,this.tensors,t);return this.size()===0?xr([],[0].concat(r)):Ge(()=>{const s=this.tensors.map(o=>le(o,r));return Qt(s,0)})}}function z9(n,e,t){const r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const s=n.shape.slice(1);Jn(s,e,"TensorList shape mismatch: ");const o=Ys(n);return new Vo(o,e,r)}function W9(n,e,t,r){return new Vo([],n,e,r)}function U9(n,e,t,r){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const o=new Vo([],t,n.dtype,r),a=Ys(n,0);return e.forEach((l,u)=>{o.setItem(l,a[u])}),o}function G9(n,e,t){let r=0;const s=e.map(p=>(r+=p,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),a=Kg(o,t),l=r===0?0:n.size/r,u=Ge(()=>{const p=[];n=le(n,[1,r,l]);for(let f=0;f<e.length;++f){const g=[0,f===0?0:s[f-1],0],y=[1,e[f],l];p[f]=le(nt(n,g,y),a)}return n.dispose(),p}),d=new Vo([],t,n.dtype,e.length);for(let p=0;p<u.length;p++)d.setItem(p,u[p]);return d}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H9=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const r=N("thenBranch",n,e,t),s=N("elseBranch",n,e,t),o=N("cond",n,e,t),a=N("args",n,e,t);return(await o.data())[0]?t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const r=N("body",n,e,t),s=N("cond",n,e,t),o=N("args",n,e,t),a=await t.functionMap[s].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),l=o.map(p=>p.id);let u=await a[0].data();a.forEach(p=>{!p.kept&&l.indexOf(p.id)===-1&&p.dispose()});let d=o;for(;u[0];){const p=d;d=await t.functionMap[r].executeFunctionAsync(d,t.tensorArrayMap,t.tensorListMap);const f=d.map(g=>g.id);p.forEach(g=>{!g.kept&&l.indexOf(g.id)===-1&&f.indexOf(g.id)===-1&&g.dispose()});const m=await t.functionMap[s].executeFunctionAsync(d,t.tensorArrayMap,t.tensorListMap);u=await m[0].data(),m.forEach(g=>{!g.kept&&l.indexOf(g.id)===-1&&f.indexOf(g.id)===-1&&g.dispose()})}return d}case"LoopCond":{const r=N("pred",n,e,t);return[Qr(r)]}case"Switch":{const r=N("pred",n,e,t);let s=N("data",n,e,t);return s.kept||(s=Qr(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=n.inputNames.find(s=>zt(s,e,t)!==void 0);if(r){const s=zt(r,e,t);return[Qr(s)]}return}case"Enter":{const r=N("frameName",n,e,t),s=N("tensor",n,e,t);return t.enterFrame(r),[Qr(s)]}case"Exit":{const r=N("tensor",n,e,t);return t.exitFrame(),[Qr(r)]}case"NextIteration":{const r=N("tensor",n,e,t);return t.nextIteration(),[Qr(r)]}case"TensorArrayV3":{const r=N("size",n,e,t),s=N("dtype",n,e,t),o=N("elementShape",n,e,t),a=N("dynamicSize",n,e,t),l=N("clearAfterRead",n,e,t),u=N("identicalElementShapes",n,e,t),d=N("name",n,e,t),p=new M9(d,s,r,o,u,a,l);return t.addTensorArray(p),[p.idTensor,Be(1)]}case"TensorArrayWriteV3":{const r=N("tensorArrayId",n,e,t),s=N("index",n,e,t),o=N("tensor",n,e,t),a=t.getTensorArray(r.id);return a.write(s,o),[a.idTensor]}case"TensorArrayReadV3":{const r=N("tensorArrayId",n,e,t),s=N("index",n,e,t);return[t.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=N("tensorArrayId",n,e,t),s=N("indices",n,e,t),o=N("dtype",n,e,t);return[t.getTensorArray(r.id).gather(s,o)]}case"TensorArrayScatterV3":{const r=N("tensorArrayId",n,e,t),s=N("indices",n,e,t),o=N("tensor",n,e,t),a=t.getTensorArray(r.id);return a.scatter(s,o),[a.idTensor]}case"TensorArrayConcatV3":{const r=N("tensorArrayId",n,e,t),s=t.getTensorArray(r.id),o=N("dtype",n,e,t);return[s.concat(o)]}case"TensorArraySplitV3":{const r=N("tensorArrayId",n,e,t),s=N("tensor",n,e,t),o=N("lengths",n,e,t),a=t.getTensorArray(r.id);return a.split(o,s),[a.idTensor]}case"TensorArraySizeV3":{const r=N("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return[Be(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=N("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=N("tensorListId",n,e,t),s=N("index",n,e,t),o=N("tensor",n,e,t),a=t.getTensorList(r.id);return a.setItem(s,o),[a.idTensor]}case"TensorListGetItem":{const r=N("tensorListId",n,e,t),s=N("index",n,e,t),o=N("elementShape",n,e,t),a=N("elementDType",n,e,t);return[t.getTensorList(r.id).getItem(s,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=N("indices",n,e,t),s=N("tensor",n,e,t),o=N("elementShape",n,e,t),a=N("numElements",n,e,t),l=U9(s,r,o,a);return t.addTensorList(l),[l.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=N("elementShape",n,e,t),s=N("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=N(o,n,e,t),l=n.op==="TensorListReserve"?-1:a,u=W9(r,s,a,l);return t.addTensorList(u),[u.idTensor]}case"TensorListGather":{const r=N("tensorListId",n,e,t),s=N("indices",n,e,t),o=N("elementShape",n,e,t),a=N("elementDType",n,e,t);return[t.getTensorList(r.id).gather(s,a,o)]}case"TensorListStack":{const r=N("tensorListId",n,e,t),s=N("elementShape",n,e,t),o=N("elementDType",n,e,t),a=N("numElements",n,e,t);return[t.getTensorList(r.id).stack(s,o,a)]}case"TensorListFromTensor":{const r=N("tensor",n,e,t),s=N("elementShape",n,e,t),o=N("elementDType",n,e,t),a=z9(r,s,o);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=N("tensorListId",n,e,t),s=t.getTensorList(r.id),o=N("dtype",n,e,t),a=N("elementShape",n,e,t);return[s.concat(o,a)]}case"TensorListPushBack":{const r=N("tensorListId",n,e,t),s=N("tensor",n,e,t),o=t.getTensorList(r.id);return o.pushBack(s),[o.idTensor]}case"TensorListPopBack":{const r=N("tensorListId",n,e,t),s=N("elementShape",n,e,t),o=N("elementDType",n,e,t);return[t.getTensorList(r.id).popBack(s,o)]}case"TensorListSplit":{const r=N("tensor",n,e,t),s=N("elementShape",n,e,t),o=N("lengths",n,e,t),a=G9(r,o,s);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=N("tensorListId",n,e,t),s=t.getTensorList(r.id);return[Be(s.size(),"int32")]}case"TensorListResize":{const r=N("tensorListId",n,e,t),s=N("size",n,e,t),a=t.getTensorList(r.id).resize(s);return t.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hb(n,e,t){const[r,s]=N("fusedOps",n,e,t),o=r==="biasadd",a=!o,l=s==="prelu",u=r==="fusedbatchnorm",d=N("numArgs",n,e,t);if(o){if(l&&d!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&o&&d!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const p=N("strides",n,e,t),f=ld(n,e,t),m=N("dataFormat",n,e,t).toUpperCase(),g=N("dilations",n,e,t);let[y,v]=N("args",n,e,t);a&&(v=y,y=void 0);const w=N("leakyreluAlpha",n,e,t);return{stride:p,pad:f,dataFormat:m,dilations:g,biasArg:y,preluArg:v,activationFunc:s,leakyreluAlpha:w}}const j9=(n,e,t,r=qt)=>{switch(n.op){case"Conv1D":{const s=N("stride",n,e,t),o=N("pad",n,e,t),a=N("dataFormat",n,e,t).toUpperCase(),l=N("dilation",n,e,t);return[r.conv1d(N("x",n,e,t),N("filter",n,e,t),s,o,a,l)]}case"Conv2D":{const s=N("strides",n,e,t),o=ld(n,e,t),a=N("dataFormat",n,e,t).toUpperCase(),l=N("dilations",n,e,t);return[r.conv2d(N("x",n,e,t),N("filter",n,e,t),[s[1],s[2]],o,a,[l[1],l[2]])]}case"_FusedConv2D":{const{stride:s,pad:o,dataFormat:a,dilations:l,biasArg:u,preluArg:d,activationFunc:p,leakyreluAlpha:f}=hb(n,e,t);return[r.fused.conv2d({x:N("x",n,e,t),filter:N("filter",n,e,t),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[l[1],l[2]],bias:u,activation:p,preluActivationWeights:d,leakyreluAlpha:f})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:o,dataFormat:a,dilations:l,biasArg:u,preluArg:d,activationFunc:p,leakyreluAlpha:f}=hb(n,e,t);return[r.fused.depthwiseConv2d({x:N("x",n,e,t),filter:N("filter",n,e,t),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[l[1],l[2]],bias:u,activation:p,preluActivationWeights:d,leakyreluAlpha:f})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=N("outputShape",n,e,t),o=N("strides",n,e,t),a=ld(n,e,t);return[r.conv2dTranspose(N("x",n,e,t),N("filter",n,e,t),s,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=N("strides",n,e,t),o=ld(n,e,t),a=N("dilations",n,e,t),l=N("dataFormat",n,e,t).toUpperCase();return[r.depthwiseConv2d(N("input",n,e,t),N("filter",n,e,t),[s[1],s[2]],o,l,[a[1],a[2]])]}case"Conv3D":{const s=N("strides",n,e,t),o=N("pad",n,e,t),a=N("dataFormat",n,e,t).toUpperCase(),l=N("dilations",n,e,t);return[r.conv3d(N("x",n,e,t),N("filter",n,e,t),[s[1],s[2],s[3]],o,a,[l[1],l[2],l[3]])]}case"AvgPool":{const s=N("strides",n,e,t),o=N("pad",n,e,t),a=N("kernelSize",n,e,t);return[r.avgPool(N("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPool":{const s=N("strides",n,e,t),o=N("pad",n,e,t),a=N("kernelSize",n,e,t);return[r.maxPool(N("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPoolWithArgmax":{const s=N("strides",n,e,t),o=N("pad",n,e,t),a=N("kernelSize",n,e,t),l=N("includeBatchInIndex",n,e,t),{result:u,indexes:d}=r.maxPoolWithArgmax(N("x",n,e,t),[a[1],a[2]],[s[1],s[2]],o,l);return[u,d]}case"AvgPool3D":{const s=N("strides",n,e,t),o=N("pad",n,e,t),a=N("kernelSize",n,e,t);return[r.avgPool3d(N("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"MaxPool3D":{const s=N("strides",n,e,t),o=N("pad",n,e,t),a=N("kernelSize",n,e,t);return[r.maxPool3d(N("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"Dilation2D":{const s=N("strides",n,e,t),o=N("pad",n,e,t),a=N("dilations",n,e,t),l=s[1],u=s[2],d=a[1],p=a[2];return[r.dilation2d(N("x",n,e,t),N("filter",n,e,t),[l,u],o,[d,p],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q9=(n,e,t,r=qt)=>{switch(n.op){case"Fill":{const s=N("shape",n,e,t),o=N("dtype",n,e,t),a=N("value",n,e,t);return[r.fill(s,a,o)]}case"LinSpace":{const s=N("start",n,e,t),o=N("stop",n,e,t),a=N("num",n,e,t);return[r.linspace(s,o,a)]}case"Multinomial":{const s=N("logits",n,e,t),o=N("numSamples",n,e,t),a=N("seed",n,e,t);return[r.multinomial(s,o,a)]}case"OneHot":{const s=N("indices",n,e,t),o=N("depth",n,e,t),a=N("onValue",n,e,t),l=N("offValue",n,e,t),u=N("dtype",n,e,t);return[r.oneHot(s,o,a,l,u)]}case"Ones":return[r.ones(N("shape",n,e,t),N("dtype",n,e,t))];case"OnesLike":return[r.onesLike(N("x",n,e,t))];case"RandomStandardNormal":return[r.randomStandardNormal(N("shape",n,e,t),N("dtype",n,e,t),N("seed",n,e,t))];case"RandomUniform":return[r.randomUniform(N("shape",n,e,t),N("minval",n,e,t),N("maxval",n,e,t),N("dtype",n,e,t))];case"RandomUniformInt":return[r.randomUniformInt(N("shape",n,e,t),N("minval",n,e,t),N("maxval",n,e,t),N("seed",n,e,t))];case"Range":{const s=N("start",n,e,t),o=N("stop",n,e,t),a=N("step",n,e,t);return[r.range(s,o,a,N("dtype",n,e,t))]}case"TruncatedNormal":{const s=N("shape",n,e,t),o=N("mean",n,e,t),a=N("stdDev",n,e,t),l=N("seed",n,e,t);return[r.truncatedNormal(s,o,a,N("dtype",n,e,t),l)]}case"Zeros":return[r.zeros(N("shape",n,e,t),N("dtype",n,e,t))];case"ZerosLike":return[r.zerosLike(N("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dg(n,e,t){const r=N("boxes",n,e,t),s=N("scores",n,e,t),o=N("maxOutputSize",n,e,t),a=N("iouThreshold",n,e,t),l=N("scoreThreshold",n,e,t),u=N("softNmsSigma",n,e,t);return{boxes:r,scores:s,maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}}const K9=async(n,e,t,r,s=qt)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:a,maxOutputSize:l,iouThreshold:u,scoreThreshold:d,softNmsSigma:p}=dg(n,e,t),f=await s.image.nonMaxSuppressionWithScoreAsync(o,a,l,u,d,p);return[f.selectedIndices,f.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:a,maxOutputSize:l,iouThreshold:u,scoreThreshold:d}=dg(n,e,t),p=N("padToMaxOutputSize",n,e,t),f=await s.image.nonMaxSuppressionPaddedAsync(o,a,l,u,d,p);return[f.selectedIndices,f.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:a,maxOutputSize:l,iouThreshold:u,scoreThreshold:d}=dg(n,e,t);return[await s.image.nonMaxSuppressionAsync(o,a,l,u,d)]}case"Where":{const o=s.cast(N("condition",n,e,t),"bool"),a=[await s.whereAsync(o)];return o.dispose(),a}case"ListDiff":return s.setdiff1dAsync(N("x",n,e,t),N("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X9=(n,e,t,r=qt)=>{switch(n.op){case"LowerBound":{const s=N("sortedSequence",n,e,t),o=N("values",n,e,t);return[r.lowerBound(s,o)]}case"TopKV2":{const s=N("x",n,e,t),o=N("k",n,e,t),a=N("sorted",n,e,t),l=r.topk(s,o,a);return[l.values,l.indices]}case"UpperBound":{const s=N("sortedSequence",n,e,t),o=N("values",n,e,t);return[r.upperBound(s,o)]}case"Unique":{const s=N("x",n,e,t),o=r.unique(s);return[o.values,o.indices]}case"UniqueV2":{const s=N("x",n,e,t),o=N("axis",n,e,t),a=r.unique(s,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y9=(n,e,t,r=qt)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const s=N("default",n,e,t);return[zt(n.name,e,t)||s];case"Placeholder":return[zt(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const p=N("x",n,e,t);return[Qr(p)]}case"IdentityN":return N("x",n,e,t).map(p=>Qr(p));case"Snapshot":const o=N("x",n,e,t);return[Qr(o)];case"Shape":return[r.tensor1d(N("x",n,e,t).shape,"int32")];case"ShapeN":return N("x",n,e,t).map(p=>r.tensor1d(p.shape));case"Size":return[r.scalar(N("x",n,e,t).size,"int32")];case"Rank":return[r.scalar(N("x",n,e,t).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=N("x",n,e,t),l=N("data",n,e,t),u=N("message",n,e,t),d=N("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let p=0;p<l.length;p++)console.log(Array.prototype.slice.call(l[p].dataSync()).slice(0,d));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q9{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Be(0),this.tensorMap=new Map,gr(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Be(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),Ge(()=>{const s=Ys(t),o=r.length,a=s.length;D(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let l=0;l<o;l++){const u=r[l],d=s[l];gr(d),this.tensorMap.set(u,d)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return Ge(()=>{const s=[];for(let o=0;o<r.length;o++){const a=r[o],l=this.findWithDefault(a,t);s.push(l)}return Pr(s)})}findWithDefault(e,t){const r=this.tensorMap.get(e);return r??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z9=async(n,e,t,r)=>{switch(n.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(n.name);if(s!=null)return[s];{const o=N("keyDType",n,e,t),a=N("valueDType",n,e,t),l=new Q9(o,a);return r.addHashTable(n.name,l),[l.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=N("tableHandle",n,e,t,r),o=N("keys",n,e,t),a=N("values",n,e,t);return[await r.getHashTableById(s.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=N("tableHandle",n,e,t,r),o=N("keys",n,e,t),a=N("defaultValue",n,e,t);return[await r.getHashTableById(s.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=N("tableHandle",n,e,t,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J9=(n,e,t,r=qt)=>{switch(n.op){case"ResizeBilinear":{const s=N("images",n,e,t),o=N("size",n,e,t),a=N("alignCorners",n,e,t),l=N("halfPixelCenters",n,e,t);return[r.image.resizeBilinear(s,[o[0],o[1]],a,l)]}case"ResizeNearestNeighbor":{const s=N("images",n,e,t),o=N("size",n,e,t),a=N("alignCorners",n,e,t),l=N("halfPixelCenters",n,e,t);return[r.image.resizeNearestNeighbor(s,[o[0],o[1]],a,l)]}case"CropAndResize":{const s=N("image",n,e,t),o=N("boxes",n,e,t),a=N("boxInd",n,e,t),l=N("cropSize",n,e,t),u=N("method",n,e,t),d=N("extrapolationValue",n,e,t);return[r.image.cropAndResize(s,o,a,l,u,d)]}case"ImageProjectiveTransformV3":{const s=N("images",n,e,t),o=N("transforms",n,e,t),a=N("outputShape",n,e,t),l=N("fillValue",n,e,t),u=N("interpolation",n,e,t),d=N("fillMode",n,e,t);return[r.image.transform(s,o,u.toLowerCase(),d.toLowerCase(),l,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eY=(n,e,t,r=qt)=>{switch(n.op){case"Equal":return[r.equal(N("a",n,e,t),N("b",n,e,t))];case"NotEqual":return[r.notEqual(N("a",n,e,t),N("b",n,e,t))];case"Greater":return[r.greater(N("a",n,e,t),N("b",n,e,t))];case"GreaterEqual":return[r.greaterEqual(N("a",n,e,t),N("b",n,e,t))];case"Less":return[r.less(N("a",n,e,t),N("b",n,e,t))];case"LessEqual":return[r.lessEqual(N("a",n,e,t),N("b",n,e,t))];case"LogicalAnd":return[r.logicalAnd(N("a",n,e,t),N("b",n,e,t))];case"LogicalNot":return[r.logicalNot(N("a",n,e,t))];case"LogicalOr":return[r.logicalOr(N("a",n,e,t),N("b",n,e,t))];case"Select":case"SelectV2":return[r.where(N("condition",n,e,t),N("a",n,e,t),N("b",n,e,t))];case"BitwiseAnd":return[r.bitwiseAnd(N("a",n,e,t),N("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tY=(n,e,t,r=qt)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(N("a",n,e,t),N("b",n,e,t),N("transposeA",n,e,t),N("transposeB",n,e,t))];case"Einsum":return[r.einsum(N("equation",n,e,t),...N("tensors",n,e,t))];case"Transpose":return[r.transpose(N("x",n,e,t),N("perm",n,e,t))];case"_FusedMatMul":const[s,o]=N("fusedOps",n,e,t),a=s==="biasadd",l=o==="prelu",u=N("numArgs",n,e,t),d=N("leakyreluAlpha",n,e,t);if(a){if(l&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[p,f]=N("args",n,e,t);return[r.fused.matMul({a:N("a",n,e,t),b:N("b",n,e,t),transposeA:N("transposeA",n,e,t),transposeB:N("transposeB",n,e,t),bias:p,activation:o,preluActivationWeights:f,leakyreluAlpha:d})];case"MatrixBandPart":return[r.linalg.bandPart(N("a",n,e,t),N("numLower",n,e,t),N("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nY=(n,e,t,r=qt)=>{switch(n.op){case"EuclideanNorm":return[r.euclideanNorm(N("x",n,e,t),N("axis",n,e,t),N("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(N("x",n,e,t),N("mean",n,e,t),N("variance",n,e,t),N("offset",n,e,t),N("scale",n,e,t),N("epsilon",n,e,t))];case"FusedBatchNormV3":return[r.batchNorm(N("x",n,e,t),N("mean",n,e,t),N("variance",n,e,t),N("offset",n,e,t),N("scale",n,e,t),N("epsilon",n,e,t))];case"LRN":return[r.localResponseNormalization(N("x",n,e,t),N("radius",n,e,t),N("bias",n,e,t),N("alpha",n,e,t),N("beta",n,e,t))];case"Softmax":return[r.softmax(N("x",n,e,t))];case"LogSoftmax":return[r.logSoftmax(N("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rY=(n,e,t,r=qt)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:o}=r.raggedGather(N("paramsNestedSplits",n,e,t),N("paramsDenseValues",n,e,t),N("indices",n,e,t),N("outputRaggedRank",n,e,t));return s.concat(o)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:o}=r.raggedRange(N("starts",n,e,t),N("limits",n,e,t),N("splits",n,e,t));return[s,o]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(N("shape",n,e,t),N("values",n,e,t),N("defaultValue",n,e,t),N("rowPartitionTensors",n,e,t),N("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sY=(n,e,t,r=qt)=>{switch(n.op){case"Max":{const l=N("axis",n,e,t),u=N("keepDims",n,e,t);return[r.max(N("x",n,e,t),l,u)]}case"Mean":{const l=N("axis",n,e,t),u=N("keepDims",n,e,t);return[r.mean(N("x",n,e,t),l,u)]}case"Min":{const l=N("axis",n,e,t),u=N("keepDims",n,e,t);return[r.min(N("x",n,e,t),l,u)]}case"Sum":{const l=N("axis",n,e,t),u=N("keepDims",n,e,t);return[r.sum(N("x",n,e,t),l,u)]}case"All":{const l=N("axis",n,e,t),u=N("keepDims",n,e,t);return[r.all(N("x",n,e,t),l,u)]}case"Any":{const l=N("axis",n,e,t),u=N("keepDims",n,e,t);return[r.any(N("x",n,e,t),l,u)]}case"ArgMax":{const l=N("axis",n,e,t);return[r.argMax(N("x",n,e,t),l)]}case"ArgMin":{const l=N("axis",n,e,t);return[r.argMin(N("x",n,e,t),l)]}case"Prod":{const l=N("axis",n,e,t),u=N("keepDims",n,e,t);return[r.prod(N("x",n,e,t),l,u)]}case"Cumprod":{const l=N("axis",n,e,t),u=N("exclusive",n,e,t),d=N("reverse",n,e,t);return[r.cumprod(N("x",n,e,t),l,u,d)]}case"Cumsum":{const l=N("axis",n,e,t),u=N("exclusive",n,e,t),d=N("reverse",n,e,t);return[r.cumsum(N("x",n,e,t),l,u,d)]}case"Bincount":const s=N("x",n,e,t),o=N("weights",n,e,t),a=N("size",n,e,t);return[r.bincount(s,o,a)];case"DenseBincount":{const l=N("x",n,e,t),u=N("weights",n,e,t),d=N("size",n,e,t),p=N("binaryOutput",n,e,t);return[r.denseBincount(l,u,d,p)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oY=(n,e,t,r=qt)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=N("n",n,e,t),o=N("axis",n,e,t);let a=N("tensors",n,e,t);return a=a.slice(0,s),[r.concat(a,o)]}case"Gather":{const s=N("x",n,e,t),o=N("indices",n,e,t);return[r.gather(s,r.cast(o,"int32"),0)]}case"GatherV2":{const s=N("axis",n,e,t),o=N("batchDims",n,e,t),a=N("x",n,e,t),l=N("indices",n,e,t);return[r.gather(a,r.cast(l,"int32"),s,o)]}case"Reverse":{const s=N("dims",n,e,t),o=[];for(let l=0;l<s.length;l++)s[l]&&o.push(l);const a=N("x",n,e,t);return[r.reverse(a,o)]}case"ReverseV2":{const s=N("axis",n,e,t),o=N("x",n,e,t);return[r.reverse(o,s)]}case"Slice":{const s=N("begin",n,e,t),o=N("size",n,e,t);return[r.slice(N("x",n,e,t),s,o)]}case"StridedSlice":{const s=N("begin",n,e,t),o=N("end",n,e,t),a=N("strides",n,e,t),l=N("beginMask",n,e,t),u=N("endMask",n,e,t),d=N("ellipsisMask",n,e,t),p=N("newAxisMask",n,e,t),f=N("shrinkAxisMask",n,e,t),m=N("x",n,e,t);return[r.stridedSlice(m,s,o,a,l,u,d,p,f)]}case"Pack":return Ge(()=>{const s=N("axis",n,e,t),o=N("tensors",n,e,t),a=o[0].shape,l=r.squeeze(o[0]).shape,u=o.map(d=>{const p=Ze(d.shape,a);if(!p&&!Ze(r.squeeze(d).shape,l))throw new Error("the input tensors shape does not match");return p?d:r.reshape(d,a)});return[r.stack(u,s)]});case"Unpack":{const s=N("axis",n,e,t),o=N("tensor",n,e,t);return r.unstack(o,s)}case"Tile":{const s=N("reps",n,e,t);return[r.tile(N("x",n,e,t),s)]}case"Split":case"SplitV":{const s=N("axis",n,e,t),o=N("numOrSizeSplits",n,e,t),a=N("x",n,e,t);return r.split(a,o,s)}case"ScatterNd":{const s=N("indices",n,e,t),o=N("values",n,e,t),a=N("shape",n,e,t);return[r.scatterND(s,o,a)]}case"GatherNd":{const s=N("x",n,e,t),o=N("indices",n,e,t);return[r.gatherND(s,o)]}case"SparseToDense":{const s=N("sparseIndices",n,e,t),o=N("outputShape",n,e,t),a=N("sparseValues",n,e,t),l=N("defaultValue",n,e,t);return[r.sparseToDense(s,a,o,a.dtype===l.dtype?l:r.cast(l,a.dtype))]}case"TensorScatterUpdate":{const s=N("indices",n,e,t),o=N("values",n,e,t),a=N("tensor",n,e,t);return[r.tensorScatterUpdate(a,s,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aY=(n,e,t,r=qt)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:o,emptyRowIndicator:a,reverseIndexMap:l}=r.sparse.sparseFillEmptyRows(N("indices",n,e,t),N("values",n,e,t),N("denseShape",n,e,t),N("defaultValue",n,e,t));return[s,o,a,l]}case"SparseReshape":{const{outputIndices:s,outputShape:o}=r.sparse.sparseReshape(N("inputIndices",n,e,t),N("inputShape",n,e,t),N("newShape",n,e,t));return[s,o]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(N("data",n,e,t),N("indices",n,e,t),N("segmentIds",n,e,t))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(N("data",n,e,t),N("indices",n,e,t),N("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iY=(n,e,t,r=qt)=>{switch(n.op){case"FFT":return[r.fft(N("x",n,e,t))];case"IFFT":return[r.ifft(N("x",n,e,t))];case"RFFT":return[r.rfft(N("x",n,e,t))];case"IRFFT":return[r.irfft(N("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lY=(n,e,t,r=qt)=>{switch(n.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(N("input",n,e,t),N("pattern",n,e,t),N("rewrite",n,e,t),N("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:s,nGramsSplits:o}=r.string.stringNGrams(N("data",n,e,t),N("dataSplits",n,e,t),N("separator",n,e,t),N("nGramWidths",n,e,t),N("leftPad",n,e,t),N("rightPad",n,e,t),N("padWidth",n,e,t),N("preserveShortSequences",n,e,t));return[s,o]}case"StringSplit":{const{indices:s,values:o,shape:a}=r.string.stringSplit(N("input",n,e,t),N("delimiter",n,e,t),N("skipEmpty",n,e,t));return[s,o,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(N("input",n,e,t),N("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uY=(n,e,t,r=qt)=>{switch(n.op){case"Cast":return[r.cast(N("x",n,e,t),N("dtype",n,e,t))];case"ExpandDims":{const s=N("axis",n,e,t);return[r.expandDims(N("x",n,e,t),s)]}case"Squeeze":{const s=N("axis",n,e,t);return[r.squeeze(N("x",n,e,t),s)]}case"Reshape":return[r.reshape(N("x",n,e,t),N("shape",n,e,t))];case"EnsureShape":return[r.ensureShape(N("x",n,e,t),N("shape",n,e,t))];case"MirrorPad":return[r.mirrorPad(N("x",n,e,t),N("padding",n,e,t),N("mode",n,e,t))];case"PadV2":case"Pad":return[r.pad(N("x",n,e,t),N("padding",n,e,t),N("constantValue",n,e,t))];case"SpaceToBatchND":{const s=N("blockShape",n,e,t),o=N("paddings",n,e,t);return[r.spaceToBatchND(N("x",n,e,t),s,o)]}case"BatchToSpaceND":{const s=N("blockShape",n,e,t),o=N("crops",n,e,t);return[r.batchToSpaceND(N("x",n,e,t),s,o)]}case"DepthToSpace":{const s=N("blockSize",n,e,t),o=N("dataFormat",n,e,t).toUpperCase();return[r.depthToSpace(N("x",n,e,t),s,o)]}case"BroadcastTo":return[r.broadcastTo(N("x",n,e,t),N("shape",n,e,t))];case"BroadcastArgs":return[r.broadcastArgs(N("s0",n,e,t),N("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mb(n,e,t,r,s=Ge){const o=((a,l,u)=>{switch(a.category){case"arithmetic":return s(()=>V9(a,l,u));case"basic_math":return s(()=>B9(a,l,u));case"control":return H9(a,l,u);case"convolution":return s(()=>j9(a,l,u));case"creation":return s(()=>q9(a,l,u));case"dynamic":return K9(a,l,u);case"evaluation":return s(()=>X9(a,l,u));case"image":return s(()=>J9(a,l,u));case"graph":return s(()=>Y9(a,l,u));case"logical":return s(()=>eY(a,l,u));case"matrices":return s(()=>tY(a,l,u));case"normalization":return s(()=>nY(a,l,u));case"ragged":return s(()=>rY(a,l,u));case"reduction":return s(()=>sY(a,l,u));case"slice_join":return s(()=>oY(a,l,u));case"sparse":return s(()=>aY(a,l,u));case"spectral":return s(()=>iY(a,l,u));case"string":return s(()=>lY(a,l,u));case"transformation":return s(()=>uY(a,l,u));case"hash_table":return Z9(a,l,u,r);case"custom":const d=gk(a.op);if(d&&d.customExecutor)return d.customExecutor(new L9(a,l,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return Ms(o)?o.then(a=>[].concat(a)):[].concat(o)}class gb{constructor(e={},t={},r={},s={},o){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=s,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yb(n,e,t,r){const s=new Set,o=[];let a=null,l=null;const u=new Set,d=new Set(Object.keys(n).map(m=>In(m)[0]));r=r||[];const p=new Set(r.map(m=>In(m.name)[0])),f=[...e];for(;f.length>0;){const m=f.pop();if((bo(m)||yY(m)||xY(m))&&a==null&&(a=m,l=a.children.map(g=>g.name).filter(g=>s.has(g))),s.add(m.name),t[m.name]==null&&!d.has(m.name)&&!p.has(m.name)){if(m.inputs.length===0){o.push(m.name);continue}m.inputs.forEach(g=>{u.has(g.name)||(u.add(g.name),f.push(g))})}}return{inputs:n,outputs:e,usedNodes:s,missingInputs:o,dynamicNode:a,syncInputs:l}}function cY(n,e){const{usedNodes:t,inputs:r}=e,s=Object.keys(r).map(w=>In(w)[0]).map(w=>n.nodes[w]),o=n.initNodes||[],a=w=>t.has(typeof w=="string"?w:w.name);function l(w){return[...new Map(w.map(b=>[b.name,b])).values()]}const u=l([...s,...n.weights,...o]).filter(a),d=l([...u,...Object.values(n.nodes)]).filter(a),p=new Map(d.map(w=>[w.name,w])),f={};for(const w of d){f[w.name]=f[w.name]||0;for(const b of w.children)a(b)||(f[b.name]=Number.POSITIVE_INFINITY),f[b.name]=(f[b.name]||0)+1}const m=Object.entries(f).filter(([,w])=>w===0).map(([w])=>w),g=[...m];for(;m.length>0;){const w=m.pop(),b=p.get(w);for(const $ of b.children.filter(a))--f[$.name]===0&&(g.push($.name),m.push($.name))}const y=g.map(w=>p.get(w)),v=dY(y,u);return pY(v,u),v}function dY(n,e){const t=new Map(n.map(a=>[a.name,a])),r=e.map(a=>a.name),s=new Set(r);for(;r.length>0;){const a=r.pop(),l=t.get(a);for(const u of l.children)!t.has(u.name)||s.has(u.name)||(s.add(u.name),r.push(u.name))}return n.filter(a=>s.has(a.name))}class Yc extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function pY(n,e){const t=new Map(n.map((l,u)=>[l.name,u])),r=new Set(e.map(l=>l.name)),s=l=>r.has(typeof l=="string"?l:l.name),o=new Set(n.map(l=>l.name)),a=l=>o.has(typeof l=="string"?l:l.name);for(const l of n){for(const u of l.children.filter(a)){if(!t.has(u.name))throw new Yc(`Child ${u.name} of node ${l.name} is unreachable.`);if(t.get(l.name)>t.get(u.name))throw new Yc(`Node ${l.name} is scheduled to run after its child ${u.name}.`)}if(!s(l))for(const u of l.inputs){if(!t.has(u.name))throw new Yc(`Input ${u.name} of node ${l.name} is unreachable.`);if(t.get(u.name)>t.get(l.name))throw new Yc(`Node ${l.name} is scheduled to run before its input ${u.name}.`)}}}function fY(n){const e=new Map(n.map((l,u)=>[l.name,u])),t=Number.MAX_SAFE_INTEGER,r=n.map((l,u)=>bo(l)?t:u),s=l=>{const u=r[e.get(l.name)];return u??-1},o=n.map((l,u)=>l.children.map(s).reduce((d,p)=>Math.max(d,p),r[u])),a=new Map;for(let l=0;l<n.length;++l){const u=o[l];if(u===t)continue;const d=n[l],p=n[u];a.has(p.name)||a.set(p.name,[]),a.get(p.name).push(d)}return a}const hY=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),mY=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),gY=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function bo(n){return hY.has(n.op)}function yY(n){return mY.has(n.op)}function xY(n){return gY.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _d{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new _d(e.functions[r],this)})}getCompilationKey(e,t){const r=e.map(o=>o.name).sort(),s=t.map(o=>o.name).sort();return r.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,t){const r=yb(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:o,syncInputs:a}=r;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const d=t.map(f=>f.name),p=Object.keys(e);throw new Error(`Cannot compute the outputs [${d}] from the provided inputs [${p}]. Missing the following inputs: [${s}]`)}const l=cY(this.graph,r),u=fY(l);return{orderedNodes:l,nodeLiveUntilMap:u}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return gr(t),t}cloneTensorList(e){return e?e.map(r=>this.cloneAndKeepTensor(r)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,r])=>[t,this.cloneTensorList(r)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=r.map(m=>this.graph.nodes[In(m)[0]]),o=t.map(m=>In(m)[0]),a=new Set(o);let l=o.map(m=>this.graph.nodes[m]);l.length===0&&(l=this._outputs);const u=this.getCompilationKey(s,l);let d=this.compiledMap.get(u);d==null&&(d=this.compile(e,l),this.compiledMap.set(u,d));try{this.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const p={},f={};return Ge(()=>{const m=new gb(this.weightMap,p,f,this.functionExecutorMap,this.parseNodeNameCache),g=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(b=>{const[$,I]=In(b,m),k=[];k[I]=e[b],g[$]=k,this.keepIntermediateTensors&&(this.clonedTensorsMap[$]=this.cloneTensorList(k))});const y=this.getFrozenTensorIds(g),{orderedNodes:v,nodeLiveUntilMap:w}=d;for(const b of v){if(g[b.name])continue;const $=mb(b,g,m,this._resourceManager);if(Ms($))throw new Error(`The execution of the op '${b.op}' returned a promise. Please use model.executeAsync() instead.`);g[b.name]=$,this.keepIntermediateTensors&&(this.clonedTensorsMap[b.name]=this.cloneTensorList($)),this.checkTensorForDisposalWithNodeLiveUntilInfo(b,g,m,y,a,w.get(b.name))}return this.parent==null&&m.dispose(y),t.map(b=>zt(b,g,m))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,r,s,o,a,l){if(!(bo(t)||a.has(e))){for(const u of r[e])u!=null&&(l[u.id]=(l[u.id]||0)+t.children.length);for(const u of t.inputs){if(bo(u))continue;const d=cb(u.name,r,s);if(d!=null)for(const p of d){if(!p||p.kept||o.has(p.id))continue;const f=l[p.id];f===1?(p.dispose(),delete l[p.id]):f!=null&&l[p.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,s,o,a){function l(u){return bo(u)||o.has(u.name)}if(!(bo(e)||a==null))for(const u of a){if(l(u))continue;const d=cb(u.name,t,r);for(const p of d)!p||p.kept||s.has(p.id)||p.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,s={},o={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=J().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const a=new gb(this.weightMap,s,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const l=await this.executeWithControlFlow(e,a,t,r),u=t.map(m=>zt(m,l,a)),d=u.map(m=>m.id),p=Object.keys(e).map(m=>e[m].id),f=new Set([...d,...p,...this.weightIds]);return Object.values(l).forEach(m=>{m.forEach(g=>{g&&!g.isDisposed&&!f.has(g.id)&&g.dispose()})}),this.parent==null&&a.dispose(f),u}async executeFunctionAsync(e,t,r){const s=e.reduce((o,a,l)=>(o[this.inputs[l].name]=a,o),{});return this._executeAsync(s,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,s){const o=Object.keys(e),a=o.map(k=>this.graph.nodes[In(k)[0]]),l=r.map(k=>In(k)[0]),u=new Set(l);let d=l.map(k=>this.graph.nodes[k]);d.length===0&&(d=this._outputs);const{usedNodes:p,missingInputs:f,dynamicNode:m,syncInputs:g}=yb(e,d,this.weightMap,this._initNodes),y=[...a,...this.graph.weights,...this._initNodes||[]].map(k=>({node:k,contexts:t.currentContext})),v=Object.assign({},this.weightMap);Object.keys(e).forEach(k=>{const[T,O]=In(k),A=[];A[O]=e[k],v[T]=A});const w={},b=this.getFrozenTensorIds(v),$={};for(;y.length>0;){const k=this.processStack(a,y,t,v,$,b,u,w,p);await Promise.all(k)}m==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const I=d.filter(k=>!bo(k)&&!zt(k.name,v,t)).map(k=>k.name);if(I.length>0){let k="";throw m!=null&&(k=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${g}]`),new Error(`Cannot compute the outputs [${I}] from the provided inputs [${o}]. Consider providing the following inputs: [${f}]. ${k}`)}return v}processStack(e,t,r,s,o,a,l,u,d){const p=[];for(;t.length>0;){const f=t.pop();r.currentContext=f.contexts;let m="";if(f.node.op==="Enter"&&N("isConstant",f.node,s,r)&&([m]=Yr(f.node.name,r)),s[f.node.name]==null){const g=mb(f.node,s,r,this._resourceManager);m||([m]=Yr(f.node.name,r));const y=r.currentContext;Ms(g)?p.push(g.then(v=>(s[m]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(v)),r.currentContext=y,this.checkTensorForDisposal(m,f.node,s,r,a,l,u),this.processChildNodes(f.node,t,r,s,o,d),v))):(s[m]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(g)),this.checkTensorForDisposal(m,f.node,s,r,a,l,u),this.processChildNodes(f.node,t,r,s,o,d))}else this.processChildNodes(f.node,t,r,s,o,d)}return p}processChildNodes(e,t,r,s,o,a){e.children.forEach(l=>{const[u]=Yr(l.name,r);o[u]||!a.has(l.name)||(l.op==="Merge"?l.inputNames.some(d=>!!zt(d,s,r))&&(o[u]=!0,t.push({contexts:r.currentContext,node:l})):l.inputNames.every(d=>!!zt(d,s,r))&&(o[u]=!0,t.push({contexts:r.currentContext,node:l})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const r=e[t],[s]=In(t),o=this.graph.nodes[s];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,l=a.length===r.shape.length&&r.shape.every((u,d)=>a[d]===-1||a[d]===u);D(l,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${r.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&D(r.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;const s={};for(const o in e){const a=(r=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||r===void 0?void 0:r[o];a!=null?s[a.name]=e[o]:s[o]=e[o]}return s}checkInputs(e){const t=Object.keys(e).filter(r=>{const[s]=In(r);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var r,s;const o=(s=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||s===void 0?void 0:s[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[r]=In(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}}class vY{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wY="?tfjs-format=file",bY="model.json";class u0{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=mx){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new vY}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Ms(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await Qb(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const r=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(s=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=s,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new _d(db.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=db.Instance.transformGraph(e.modelInitializer);this.initializer=new _d(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof xt?[e]:e,r={};return t.forEach((s,o)=>r[this.structuredOutputKeys[o]]=s),r}return e}predict(e,t){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof xt)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const a in o){const l=o[a];l.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[l.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((o,a)=>{var l,u,d;const p=(d=(u=(l=this.signature)===null||l===void 0?void 0:l.inputs)===null||u===void 0?void 0:u[a])===null||d===void 0?void 0:d.resourceId;return p!=null?o[a]=this.resourceIdToCapturedInput[p]:o[a]=e[s++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,r=Object.keys(t);for(let s=0;s<r.length;s++){const o=r[s],a=t[o];this.resourceIdToCapturedInput[a.resourceId]=e[s]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&un(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function SY(n,e={},t=mx){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=CY(n));const r=new u0(n,e,t);return await r.load(),r}function $Y(n){if(n==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(n instanceof Array){const[r,s]=n;if(!r)throw new Error("modelJSON must be the first element of the array");if(!s||!(s instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");const o=md(r.weightsManifest),a=wy(r,o,s);e=wd(a)}else if("load"in n)e=n;else if("modelTopology"in n&&"weightSpecs"in n&&"weightData"in n)e=wd(n);else throw new Error("Unknown model format");const t=new u0(e);return t.load(),t}function CY(n){return n.endsWith("/")||(n=n+"/"),`${n}${bY}${wY}`}/** @license See the LICENSE file. */const NY="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kY=Object.freeze(Object.defineProperty({__proto__:null,GraphModel:u0,deregisterOp:QX,loadGraphModel:SY,loadGraphModelSync:$Y,registerOp:YX,version_converter:NY},Symbol.toStringTag,{value:"Module"})),IY=Yg(kY),TY=Yg(R3);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var EY=Mi.exports,xb;function RY(){return xb||(xb=1,function(n,e){(function(t,r){r(e,IY,TY)})(EY,function(t,r,s){const o={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class a{constructor(u,d){this.modelPath=d||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(u)}/model.json`}getPrefix(u){return u==="lite_mobilenet_v2"?`ssd${u}`:`ssd_${u}`}async load(){this.model=await r.loadGraphModel(this.modelPath);const u=s.zeros([1,300,300,3],"int32"),d=await this.model.executeAsync(u);await Promise.all(d.map(p=>p.data())),d.map(p=>p.dispose()),u.dispose()}async infer(u,d,p){const f=s.tidy(()=>(u instanceof s.Tensor||(u=s.browser.fromPixels(u)),s.expandDims(u))),m=f.shape[1],g=f.shape[2],y=await this.model.executeAsync(f),v=y[0].dataSync(),w=y[1].dataSync();f.dispose(),s.dispose(y);const[b,$]=this.calculateMaxScores(v,y[0].shape[1],y[0].shape[2]),I=s.getBackend();s.getBackend()==="webgl"&&s.setBackend("cpu");const k=s.tidy(()=>{const O=s.tensor2d(w,[y[1].shape[1],y[1].shape[3]]);return s.image.nonMaxSuppression(O,b,d,p,p)}),T=k.dataSync();return k.dispose(),I!==s.getBackend()&&s.setBackend(I),this.buildDetectedObjects(g,m,w,b,T,$)}buildDetectedObjects(u,d,p,f,m,g){const y=m.length,v=[];for(let w=0;w<y;w++){const b=[];for(let O=0;O<4;O++)b[O]=p[4*m[w]+O];const $=b[0]*d,I=b[1]*u,k=b[2]*d,T=b[3]*u;b[0]=I,b[1]=$,b[2]=T-I,b[3]=k-$,v.push({bbox:b,class:o[g[m[w]]+1].displayName,score:f[m[w]]})}return v}calculateMaxScores(u,d,p){const f=[],m=[];for(let g=0;g<d;g++){let y=Number.MIN_VALUE,v=-1;for(let w=0;w<p;w++)u[g*p+w]>y&&(y=u[g*p+w],v=w);f[g]=y,m[g]=v}return[f,m]}async detect(u,d=20,p=.5){return this.infer(u,d,p)}dispose(){this.model!=null&&this.model.dispose()}}t.ObjectDetection=a,t.load=async function(l={}){if(s==null)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const u=l.base||"lite_mobilenet_v2",d=l.modelUrl;if(["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(u)===-1)throw new Error(`ObjectDetection constructed with invalid base model ${u}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const p=new a(u,d);return await p.load(),p},t.version="2.2.3",Object.defineProperty(t,"__esModule",{value:!0})})}(Mi,Mi.exports)),Mi.exports}var _Y=RY();const OY=({requestAsked:n,onRequestTreated:e})=>{const[t,r]=Tt.useState(null),[s,o]=Tt.useState(null);Tt.useEffect(()=>{n&&a()},[n]);const a=async()=>{try{const u=document.querySelector("video"),p=await(await _Y.load()).detect(u);let f=null;if(p.length>0){const m=p.filter(g=>g.class!=="person");m.length>0&&(f=m)}return r(s),o(f),e(l(),f),f}catch(u){console.error("Erreur pendant la prédiction :",u)}},l=()=>{let u="DEFAULT";if(!s&&t)u="OBJECT_LEAVED_DETECTION";else if(s&&!t)u="OBJECT_ENTERED_DETECTION";else if(s&&t){const d=s.length===t.length,p=s.every((f,m)=>{var g;return f.class===((g=t[m])==null?void 0:g.class)});u=d&&p?"SAME_DETECTION":"DIFFERENT_DETECTION"}return u};return null},DY=({setEntries:n,darkMode:e})=>{const t=Tt.useRef(null),r=Tt.useRef(null),[s,o]=Tt.useState(!1),[a,l]=Tt.useState([]),u=g=>{const y=[];return g.forEach(v=>{const w=new Date(Date.now()),I={id:`D-${w.getFullYear().toString().slice(-2)}-${w.getMonth()}-${w.getHours()}${w.getMinutes()}${w.getSeconds()+w.getMilliseconds()}`,objectName:v.class,accuracyPercent:v.score,screenshot:t.current.getScreenshot()};console.log("tempEntry",I),y.push(I)}),l(y),y},d=g=>{const y=r.current,v=y.getContext("2d"),w=t.current.video;!w||!y||(y.width=w.videoWidth,y.height=w.videoHeight,v.clearRect(0,0,y.width,y.height),g.forEach(b=>{const[$,I,k,T]=b.bbox;v.strokeStyle="#00A150",v.lineWidth=2,v.strokeRect($,I,k,T),v.font="16px Arial",v.fillStyle="#00A150",v.fillText(b.class,$,I>10?I-5:10)}))},p=()=>{o(!0)},f=(g,y)=>{var v;if(o(!1),y!=null){switch(g){case"SAME_DETECTION":break;case"OBJECT_ENTERED_DETECTION":case"DIFFERENT_DETECTION":u(y);break}d(y)}else{const w=(v=r.current)==null?void 0:v.getContext("2d");w&&w.clearRect(0,0,r.current.width,r.current.height)}},m=g=>{l(a.filter(y=>y.id!==g))};return ge.jsxs("div",{className:"relative flex flex-col h-full items-center",children:[ge.jsx("div",{className:`absolute w-full h-full border-[64px] ${e?"border-black/70":"border-white/30"}`}),ge.jsxs("div",{className:"h-full w-full",children:[ge.jsx(kT,{audio:!1,ref:t,screenshotFormat:"image/jpeg",disablePictureInPicture:!0,className:"w-full h-full object-cover"}),ge.jsx("div",{className:"absolute top-[64px] right-[64px] w-[192px] h-[192px] border-t-[8px] border-r-[8px] border-[#00A150] z-1"}),ge.jsx("div",{className:"absolute bottom-[64px] left-[64px] w-[192px] h-[192px] border-b-[8px] border-l-[8px] border-[#00A150] z-1"}),ge.jsx("div",{className:"absolute top-[64px] left-[64px] w-[192px] h-[192px] border-t-[8px] border-l-[8px] border-[#00A150] z-1"}),ge.jsx("div",{className:"absolute bottom-[64px] right-[64px] w-[192px] h-[192px] border-b-[8px] border-r-[8px] border-[#00A150] z-1",style:{pointerEvents:"none"}}),ge.jsx("canvas",{ref:r,className:"absolute top-0 left-0 w-full h-full pointer-events-none z-0"})]}),ge.jsxs("div",{className:"absolute flex flex-col gap-[24px] bottom-[96px] w-full px-[96px]",children:[a.map(g=>ge.jsx(PT,{prediction:g,setEntries:n,removePredictionToShow:m,darkMode:e},g.id)),ge.jsxs("div",{className:"hidden",children:[ge.jsx(LT,{onTimerTriggerReached:p,requestPending:s}),ge.jsx(OY,{onRequestTreated:f,requestAsked:s,darkMode:e})]})]})]})};function AY(n){return Bo({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"path",attr:{d:"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"},child:[]},{tag:"polyline",attr:{points:"16 17 21 12 16 7"},child:[]},{tag:"line",attr:{x1:"21",y1:"12",x2:"9",y2:"12"},child:[]}]})(n)}function FY(n){return Bo({attr:{viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"},child:[{tag:"polyline",attr:{points:"3 6 5 6 21 6"},child:[]},{tag:"path",attr:{d:"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"},child:[]},{tag:"line",attr:{x1:"10",y1:"11",x2:"10",y2:"17"},child:[]},{tag:"line",attr:{x1:"14",y1:"11",x2:"14",y2:"17"},child:[]}]})(n)}function PY(n){return Bo({attr:{viewBox:"0 0 24 24",fill:"currentColor"},child:[{tag:"path",attr:{d:"M13 10H18L12 16L6 10H11V3H13V10ZM4 19H20V12H22V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V12H4V19Z"},child:[]}]})(n)}const LY=({entry:n,deleteEntryFromLocalStorage:e,darkMode:t})=>ge.jsxs("div",{className:`container flex rounded-[16px] overflow-hidden ${t?"bg-[#1B1B1B] text-[#888888]":"bg-slate-200 text-[#888888]"}`,children:[ge.jsxs("a",{href:n.screenshot,download:`screenshot-${n.id}.jpg`,className:"group relative",children:[ge.jsx("div",{className:`absolute hidden group-hover:block group-hover:w-full group-hover:h-full group-hover:flex group-hover:justify-center group-hover:items-center ${t?"group-hover:bg-black/75":"group-hover:bg-black/50"}`,children:ge.jsx(PY,{className:"text-[24px] text-white"})}),ge.jsx("div",{className:"img__container bg-cover bg-center w-[72px] h-full",style:{backgroundImage:`url(${n.screenshot})`}})]}),ge.jsxs("div",{className:"ux__container w-[100%] flex  items-center justify-between py-[16px]",children:[ge.jsxs("div",{className:"info__container ml-[24px]",children:[ge.jsx("h3",{className:"text-center rounded-2xl border-1 px-[8px] py-[2px] text-[12px] font-bold w-fit",children:`${(n.accuracyPercent*100).toFixed(0)}% accuracy`}),ge.jsxs("div",{className:"flex gap-[8px] items-center",children:[ge.jsxs("h3",{className:`text-[20px] font-bold ${t?"text-white":"text-[#2F2F2F]"}`,children:[n.objectName.charAt(0).toUpperCase()+n.objectName.slice(1)," "]}),ge.jsxs("h3",{className:"text-[16px] font-semibold",children:["ID ",n.id]})]})]}),ge.jsx("div",{className:`group flex justify-center items-center w-[40px] h-[40px] transition mr-[16px] rounded-[8px] cursor-pointer ${t?"hover:bg-[#2F2F2F] ":"hover:bg-slate-300"}`,children:ge.jsx(FY,{className:"text-[24px] group-hover:text-[#DB0004] transition",onClick:()=>e(n.id)})})]})]}),VY=({entries:n,setEntries:e,darkMode:t})=>{const r=s=>{const a=(JSON.parse(localStorage.getItem("entries"))||[]).filter(l=>l.id!==s);localStorage.setItem("entries",JSON.stringify(a)),e(a)};return ge.jsx("div",{className:"flex flex-col p-[32px] gap-[16px]",children:n.length>0?n.map((s,o)=>ge.jsx(LY,{entry:s,deleteEntryFromLocalStorage:r,darkMode:t},o)):ge.jsx("p",{className:"text-center text-[#888888]",children:"No entries saved yet."})})},BY=({setEntries:n,darkMode:e})=>{const t=()=>{localStorage.removeItem("entries"),n([])};return ge.jsxs("div",{className:`flex flex-row items-center justify-between p-[32px] ${e?"bg-[#181818]":"bg-slate-200"}`,children:[ge.jsx("h2",{className:`text-[24px] font-semibold ${e?"text-white":"text-[#2F2F2F]"}`,children:"Detected Entries"}),ge.jsx("button",{onClick:t,className:`text-[20px] font-semibold py-[12px] px-[20px] rounded-[12px] transition cursor-pointer ${e?"hover:bg-[#282828] text-white":"hover:bg-slate-300 text-[#2F2F2F]"}`,children:"Clear all"})]})},MY=({setCamActivated:n,darkMode:e})=>ge.jsx("div",{className:`p-[32px] ${e?"bg-[#181818]":"bg-slate-200"}`,children:ge.jsxs("button",{onClick:()=>n(!1),className:`flex flex-row items-center justify-center gap-[16px]   text-[20px] font-semibold py-[12px] rounded-[12px] w-full cursor-pointer transition ${e?"bg-[#2F2F2F] hover:bg-white text-white hover:text-[#2F2F2F]":"bg-slate-300 hover:bg-[#2F2F2F] text-[#2F2F2F] hover:text-white"}`,children:[ge.jsx(AY,{className:"text-[20px]"}),"Disconnect"]})});function zY(n){return Bo({attr:{fill:"currentColor",viewBox:"0 0 16 16"},child:[{tag:"path",attr:{d:"M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278M4.858 1.311A7.27 7.27 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.32 7.32 0 0 0 5.205-2.162q-.506.063-1.029.063c-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286"},child:[]}]})(n)}function WY(n){return Bo({attr:{fill:"currentColor",viewBox:"0 0 16 16"},child:[{tag:"path",attr:{d:"M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6m0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8M8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0m0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13m8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5M3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8m10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0m-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0m9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707M4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708"},child:[]}]})(n)}const UY=({setCamActivated:n})=>{const[e,t]=Tt.useState([]),[r,s]=Tt.useState(!0);Tt.useEffect(()=>{const a=JSON.parse(localStorage.getItem("entries"))||[];t(a)},[]);const o=()=>s(a=>!a);return ge.jsxs("section",{className:` flex flex-col lg:flex-row w-screen h-screen  ${r?"bg-[#0C0C0C]":"bg-slate-100"}`,children:[ge.jsxs("div",{className:"flex-[7] h-full relative",children:[ge.jsx("div",{className:"absolute top-[12px] left-1/2 transform -translate-x-1/2 z-50",children:ge.jsx("button",{onClick:o,className:`flex justify-center items-center w-[40px] h-[40px] transition mr-[16px] rounded-[8px] cursor-pointer ${r?"text-white hover:bg-[#2F2F2F]":"text-[#2F2F2F] hover:bg-slate-300"}`,children:r?ge.jsx(zY,{}):ge.jsx(WY,{})})}),ge.jsx(DY,{setEntries:t,darkMode:r})]}),ge.jsxs("div",{className:"flex-[3] flex flex-col h-full",children:[ge.jsx(BY,{setEntries:t,darkMode:r}),ge.jsx("div",{className:"flex-1 overflow-y-auto",children:ge.jsx(VY,{entries:e,setEntries:t,darkMode:r})}),ge.jsx(MY,{setCamActivated:n,darkMode:r})]})]})},GY=n=>{const[e,t]=Tt.useState(!1),r=Tt.useRef(null);Tt.useEffect(()=>{t(!1),r.current=null},[]);const s=async()=>{if(!e)try{const o=await navigator.mediaDevices.getUserMedia({video:!0});n.setCamActivated(!0),r.current&&(r.current.srcObject=o,t(!0))}catch(o){console.error("Error accessing webcam:",o)}};return ge.jsx("div",{className:"min-h-screen flex items-center justify-center",style:{backgroundImage:"url('/Image/HomePageBackground.png')",backgroundSize:"cover",backgroundPosition:"center"},children:ge.jsxs("div",{className:"relative w-[100vw] h-[100vh] border-[64px] border-black/50",children:[ge.jsxs("div",{className:"w-full h-full flex flex-col gap-[32px] lg:gap-[72px] items-center justify-center text-center",children:[ge.jsxs("div",{className:"flex flex-col gap-[24px] lg:gap-[50px] px-[64px] lg:px-[160px]",children:[ge.jsxs("h1",{className:"leading-none text-[64px] lg:text-[96px] font-semibold text-white",children:["Welcome to ",ge.jsx("span",{className:"text-[#00A150]",children:"Obtekt"})]}),ge.jsx("p",{className:"text-[20px] lg:text-[32px] text-white",children:"Obtekt allows users to recognize objects in real time using their device’s camera. Simply open the app, point the camera at an object, and voilà! ;)"})]}),ge.jsxs("button",{onClick:s,className:"flex items-center gap-2 bg-[#00A150] hover:bg-white text-white text-semibold text-[20px] lg:text-[24px] hover:text-[#00A150] font-semibold py-[12px] px-[24px] rounded-[16px] cursor-pointer transition",children:[ge.jsx("svg",{xmlns:"http://www.w3.org/2000/svg",className:"h-[32px] w-[32px]",fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",children:ge.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M4 6h16M4 18h16M4 6v12"})}),"Activate my webcam"]}),e&&ge.jsx("div",{className:"mt-8",children:ge.jsx("video",{ref:r,autoPlay:!0,playsInline:!0,className:"w-80 h-60 rounded-lg shadow-lg border-2 border-green-500"})})]}),ge.jsx("div",{className:"absolute top-0 right-0 w-[192px] h-[192px] border-t-[8px] border-r-[8px] border-[#00A150]"}),ge.jsx("div",{className:"absolute bottom-0 left-0 w-[192px] h-[192px] border-b-[8px] border-l-[8px] border-[#00A150]"})]})})},HY=()=>{const[n,e]=Tt.useState(!1);return n?ge.jsx(UY,{setCamActivated:e}):ge.jsx(GY,{setCamActivated:e})};function jY(){return ge.jsx(HY,{})}ST.createRoot(document.getElementById("root")).render(ge.jsx(Tt.StrictMode,{children:ge.jsx(jY,{})}));
